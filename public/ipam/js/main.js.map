{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Table/Column/index.js","webpack:///./src/components/Table/Row/index.js","webpack:///./src/components/Table/index.js","webpack:///./src/actions/index.js","webpack:///./src/actions/netItems.js","webpack:///./src/constants/IpamTable.js","webpack:///./src/components/Table/Theme/Utils/index.js","webpack:///./src/components/Table/tableConstants.js","webpack:///./src/components/Table/Pagination/index.js","webpack:///./src/components/Table/Theme/index.js","webpack:///./src/components/IpamTable/RowsContainer/index.js","webpack:///./src/index.js","webpack:///./src/components/App/index.js","webpack:///./src/components/App/appContext.js","webpack:///./src/components/App/styles.js","webpack:///./src/components/AppNavbar/index.js","webpack:///./src/components/Table/TableContext/index.js","webpack:///./src/img/logo_brs_small.png","webpack:///./src/components/AppNavbar/navBar.css?97e3","webpack:///./src/components/AppNavbar/URLs.js","webpack:///./src/components/IpamTable/index.js","webpack:///./src/actions/rootElementsIds.js","webpack:///./src/components/Table/Header/index.js","webpack:///./src/components/Table/Body/index.js","webpack:///./src/components/Table/TableFooter/index.js","webpack:///./src/components/Table/Footer/index.js","webpack:///./src/components/Table/Pagination/selectReactCustomStyle.js","webpack:///./src/components/Table/Pagination/paginationConstants.js","webpack:///./src/components/Table/fontAwesome/faLibrary.js","webpack:///./src/components/Table/jssInstance.js","webpack:///./src/components/IpamTable/NetRecordRow/index.js","webpack:///./src/components/IpamTable/NetRecordRow/styles.js","webpack:///./src/components/IpamTable/HostRecordRow/index.js","webpack:///./src/components/IpamTable/HostRecordRow/styles.js","webpack:///./src/components/IpamTable/ChildrenRowsContainer/index.js","webpack:///./src/components/IpamTable/selectors/index.js","webpack:///./src/components/fontAwesome/faLibrary.js","webpack:///./src/configureStore.js","webpack:///./src/reducer/index.js","webpack:///./src/reducer/rootElementsIds.js","webpack:///./src/reducer/netData.js","webpack:///./src/reducer/networkElements.js","webpack:///./src/reducer/hostElements.js","webpack:///./src/constants/actions.js","webpack:///./src/helperFunctions/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_react","_TableContext","_tableConstants","Column","innerStyles","_this","props","tableContext","jssSheet","classes","Component","_props","this","index","minWidth","maxWidth","fixed","accessor","filterable","sortable","_props$tableContext","columnsParams","dimensions","columnsSizes","parseInt","width","_props2","title","cssClasses","children","isHeader","writeParams","joinCss","saveColumnParams","_react2","default","createElement","className","join","propTypes","PropTypes","bool","string","oneOfType","arrayOf","number","padding","array","order","defaultProps","DEFAULT_TABLE_STYLE","columnMinWidth","columnMaxWidth","columnPadding","changeWidth","tableConnect","Row","css","_this$props","isFooter","tableHeaderRowDc","tableFooterRowDc","tableBodyRowDc","rowId","rowRef","injectedProps","_props2$tableContext","filterComponentsByType","createRowRef","ref","scrollSz","scrollBodySz","any","_Utils","Table","state","tableBodyData","tableFooterData","tableRefs","container","React","createRef","bodyContainer","rows","scroll","height","cellWidth","bodyCellWidth","tableStyles","display","flexDirection","boxSizing","& table, & thead, & tbody, & tfoot, & tr, & th, & td","tableContainer","flexGrow","overflowX","footerContainer","flexShrink","justifyContent","tableHeaderBodyContainer","flexBasis","tableFooterContainer","tableHeaderContainer","tableBodyContainer","overflowY","table","tableLayout","tableHeader","tableBody","tableFooter","tableContainerDc","backgroundColor","theme","tableBgColor","color","tableTextColor","tableBodyContainerDc","bodyBgColor","headerBgColor","headerTextColor","& th","paddingHeaderCell","tableBodyDc","bodyTextColor","&:nth-child(odd)","bodyStriped","darkenColor","stripedColorFactor","& td","paddingBodyCell","&:hover","hoverColorFactor","tableFooterDc","tableFooterBgColor","tableFooterTextColor","paddingTableFooterCell","footerContainerDc","footerBgColor","containerSz","tableBodyContainerSz","tableFooterContainerSz","tableHeaderSz","tableBodySz","hideHeader","fontSize","& tr","border","jss","createStyleSheet","link","updateColumnsSizesInDOM","_this$tableContext","columnsCss","forEach","columnSet","getRule","columnSizeClass","prop","columnsWidth","updateDimensions","Date","now","_this$tableContext2","containerWidth","current","clientWidth","sumOfMinWidth","reduce","sum","column","scrollSize","freeSpace","Math","trunc","numberOfExtendableColumns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","spacePerColumn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","additionWidth","updateColumns","updateData","_callee","regeneratorRuntime","wrap","_callee$","_context","prev","t0","fetchData","states","pagination","sent","parseFetchedResult","t1","stop","_this2","formBodyData","check","not","map","rowData","rowIndex","_Row2","_ref3","colIndex","_Column2","id","scrollToRow","shareState","getState","cssStyles","scrollbarSizeLoad","scrollSizes","scrollbarWidth","scrollbarHeight","PureComponent","component","arguments","injectIndex","Children","child","type","cloneElement","_extends","bodyDataKey","footerDataKey","setState","Error","header","_this3","hdChildren","columns","lastRowChildren","columnCssPrefix","DEFAULT_CSS_CLASS_NAMES","columnSizeCssPrefix","columnSz","columnDecoCssPrefix","columnDc","_this3$jssSheet$addRu","params","columnClass","columnDecoClass","addRules","_defineProperty","setColumnsCss","Header","TableProvider","_reactScrollbarSize2","onLoad","Body","TableFooter","Footer","attach","addEventListener","tabRefs","prevProps","removeEventListener","innerCssClasses","extCssClasses","nonEmptyString","concat","_toConsumableArray","Caption","func","miWidth","minHeight","bordered","isStretch","scrollPosition","DEFAULT_VALUES","method","tableWidth","tableMinWidth","tableHeight","tableMinHeight","Pagination","keys","_rootElementsIds","_netItems","requestElements","invalidateElements","_ref2","netsIds","hostsIds","INVALIDATE_ELEMENTS","payload","receiveElements","netItemToggleExpandCollapse","netItemId","NET_ITEM_TOGGLE_EXPAND_COLLAPSE","fetchElementsIfNeeded","_ref4","dispatch","filteredNetsIds","getInvalidatedData","netData","networks","filteredHostsIds","hosts","fetchNetData","_ref5","_ref6","_asyncToGenerator","mark","_callee2","requestsArray","netsFormData","URL","netsDataRequest","hostsFormData","_URL","hostsDataRequest","pArray","fetchResult","_callee2$","_context2","logger","FormData","append","_helperFunctions","isDebug","DEBUG_URL_REQUEST_NET_ELEMENTS_BY_ID","URL_REQUEST_NET_ELEMENTS_BY_ID","Request","body","DEBUG_URL_REQUEST_HOST_ELEMENTS_BY_ID","URL_REQUEST_HOST_ELEMENTS_BY_ID","abrupt","_ref7","request","response","fetch","json","_x2","Promise","all","acc","assign","_x","_actions","_IpamTable","_ref","REQUEST_ELEMENTS","networksData","hostsData","RECEIVE_ELEMENTS","store","elementsIds","filter","didInvalidate","URL_REQUEST_ROOT_ELEMENTS_ID","DEBUG_URL_REQUEST_ROOT_ELEMENTS_ID","_color3","rgb","toString","ratio","darken","lightenColor","lighten","scrollWidthPx","footer","tablePadding","visible","resolve","CLASS_NAMES","row","CHROME_CONTAINER_PADDING","_reactFontawesome","PAGINATION","styles","alignItems","STYLE","paginationWidth","& .rowsOnPage","selectBlockWidth","containerDc","pageNumber","pageBlockWidth","& input","pageBlockInputWidth","pageNumberDc","margin","borderRadius","disabled","disabledColor","navButton","footerIconColor","defaultValueRecordsOnPage","selectDefaultValueIndex","SELECT_OPTIONS","DEFAULT_VALUE_INDEX","selectOptions","currentPage","pageNumberInput","totalPages","rowsOnPage","pageNumberBlock","onChange","onChangePageNumberBlock","onKeyUp","onKeyUpPageNumberBlock","e","target","prevState","keyCode","onChangeSelect","opt","onClickNextPage","newPage","String","onClickPrevPage","onClickFirstPage","onClickLastPage","selectProps","customStyles","options","defaultValue","menuPlacement","_state","onClick","FontAwesomeIcon","icon","_reactSelect2","selectWidth","_reactJss2","hexCode","footerTextColor","_reactRedux","RowsContainer","childrenNetsIds","childrenHostsIds","netsData","toggleIconHandler","lvl","netRows","isExpanded","netChildren","hostChildren","Fragment","_NetRecordRow2","_ChildrenRowsContainer2","hostRows","_HostRecordRow2","updateDataIfNeeded","_props3","connectAdvanced","selectorFactory","ownProps","itemData","renderCountProp","_reactDom","start","profile","message","profiler","time","render","Provider","_App2","_AppNavbar2","_IpamTable2","document","getElementById","_jss","cssSheet","_jssPresetDefault2","App","appRefs","app","el","_appContext2","_Component2","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","_this4","Consumer","_Component3","_this6","_Component4","_this8","shape","node","AppContext","createContext","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","msGridColumns","msGridRows","gridArea","msGridRow","msGridColumn","_reactBootstrap","imgStyle","_reactCssModules2","AppNavbar","Navbar","fluid","Brand","styleName","href","root","src","logo","style","Nav","NavItem","eventKey","offices","devices","NavDropdown","MenuItem","ip_ipam","reports","reportPhoneByModels","reportPhoneByClusters","reportPhoneByNotUsed","pullRight","dictRegions","dictCities","dictOffice_stats","divider","dictDevices","dictPortTypes","HwLogs","PhonesLogs","dictVRFs","dictNetworksTable","TableContext","_PureComponent","WithTableContext","custom-header","customHeader","_Table","_selectors","IpamTable","renderBodyData","_data$netsIds","_data$hostsIds","_RowsContainer2","_Table2","forceUpdateRootItems","forceUpdateRootIds","forceUpdateRoot","updateRootElementsId","updateElements","rootnetsIds","rootHostsId","forceUpdateRootElements","forceUpdateRootElementsIds","_getRootIds","getRootIds","requestRootElementsId","receiveRootElementsId","invalidateRootElementsId","fetchRootElementsIdIfNeeded","rootElements","fetchRootElementsId","_x3","_callee3","_getState","_getState$rootElement","_callee3$","_context3","rootElementsIds","_x4","_x5","_callee4","_callee4$","_context4","_x6","_x7","REQUEST_ROOT_ELEMENTS_ID","RECEIVE_ROOT_ELEMENTS_ID","INVALIDATE_ROOT_ELEMENTS_ID","headers","Headers","Content-Type","tableInnerStyles","headerInnerStyles","lastRow","columnClasses","innerCss","buildHeaderRows","tbodyInnerStyles","parseData","_this$props$tableCont","buildBodyHeader","_this$props$tableCont2","cssClass","tfootInnerStyles","childrenWrapper","count","buildTableFooterHeader","option","base","control","dropdownIndicator","input","label","_fontawesomeSvgCore","_freeSolidSvgIcons","library","add","faFastBackward","faBackward","faForward","faFastForward","faSquare","faCheck","_styles","NetRecordRow","lvlIndent","lvlBlock","LVL_INDENT_WIDTH","ipAddress","netmask","comment","vrfName","vrfId","netLocations","vrfRd","isFetching","locations","entries","_slicedToArray","location","marginRight","HostRecordRow","macAddress","ChildrenRowsContainer","_reselect","getRootNetsIds","getRootHostsIds","getRootRowsData","createSelector","getNetworksDataStore","getHostsDataStore","rootNetsIds","rootHostsIds","rootNetsData","rootHostsData","hostData","fas","configureStore","_redux","createStore","reducer","applyMiddleware","thunkMiddleware","combineReducers","initialState","action","convertToIntArray","initialDataStore","networkElementInitialState","hostElementInitialState","handleNetworkElement","stateOfElement","actionType","netId","address","net_children","host_children","JSON","parse","handleHostElement","__id","_action$payload","_payload$netsIds","_payload$networksData","_payload$hostsIds","_payload$hostsData","updatedNetworkElements","updatedHostElements","isItterable","dataStore","handleOneElement","hostElements","hostStore","updatedElements","receivedElements","dataString","idArray","split","filteredIds","trim","obj","ipamDebug"],"mappings":"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","file":"ipam/js/main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([337,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport {tableConnect} from '../TableContext'\r\nimport {DEFAULT_TABLE_STYLE} from \"../tableConstants\";\r\n\r\nclass Column extends Component {\r\n\r\n    innerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    saveColumnParams() {\r\n        const {index, minWidth, maxWidth, fixed, accessor, filterable, sortable,  tableContext: {columnsParams, dimensions: {columnsSizes}}} = this.props\r\n        columnsSizes[index] = {\r\n            minWidth: parseInt(minWidth),\r\n            width: parseInt(minWidth),\r\n            maxWidth: parseInt(maxWidth),\r\n            fixed,\r\n        }\r\n        columnsParams[index] = {\r\n            accessor,\r\n            filterable,\r\n            sortable\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, cssClasses, children, isHeader, writeParams, tableContext: {joinCss}} = this.props\r\n        const innerStyles = this.innerStyles()\r\n            if (isHeader) {\r\n                if (writeParams) this.saveColumnParams()\r\n                return <th className={joinCss(innerStyles, cssClasses).join(\" \")}>{title ? title : children}</th>\r\n            } else {\r\n                return <td className={joinCss(innerStyles, cssClasses).join(\" \")}>{children}</td>\r\n            }\r\n    }\r\n}\r\n\r\nColumn.propTypes = {\r\n    //from Row\r\n    isHeader: PropTypes.bool, //injected by Row\r\n    //from Header\r\n    writeParams: PropTypes.bool, // for internal use only! if set column have to write its params into tableContext.columnsParams (params like width ...)\r\n    //\r\n    title: PropTypes.string, //if not set will be used children\r\n    accessor: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.string),\r\n        PropTypes.string\r\n    ]),\r\n    minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    padding: PropTypes.string,\r\n    fixed: PropTypes.bool, // fix size of column\r\n    sortable: PropTypes.bool,\r\n    filterable: PropTypes.bool,\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    order: PropTypes.number, //can be used for columns reorder\r\n    index: PropTypes.number, //index number of column in config array\r\n}\r\nColumn.defaultProps = {\r\n    minWidth: DEFAULT_TABLE_STYLE.columnMinWidth,\r\n    maxWidth: DEFAULT_TABLE_STYLE.columnMaxWidth,\r\n    padding: DEFAULT_TABLE_STYLE.columnPadding,\r\n    fixed: false,\r\n    changeWidth: true,\r\n    sortable: false,\r\n    filterable: false,\r\n    order: 0,\r\n}\r\n\r\nexport default tableConnect(Column)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport {tableConnect} from '../TableContext'\r\nimport Column from '../Column'\r\n\r\nclass Row extends Component {\r\n    innerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        const {isHeader, isFooter} = this.props\r\n        if (!isHeader && !isFooter) return [css.tableBodyRowDc]\r\n        if (isHeader) return [css.tableHeaderRowDc]\r\n        if (isFooter) return [css.tableFooterRowDc]\r\n        return []\r\n\r\n    }\r\n\r\n    render() {\r\n        const {isHeader, isFooter, rowRef: createRef, rowId} = this.props\r\n        const injectedProps = isHeader ? {isHeader: true, } : (isFooter ? {isFooter: true, } : {})\r\n        const {tableContext, tableContext: {filterComponentsByType, joinCss, jssSheet: {classes: css}, createRowRef}} = this.props\r\n\r\n        return (\r\n            <tr className={joinCss(this.innerStyles(), this.props.cssClasses).join(\" \")} ref={rowId ? createRowRef(rowId) : null}>\r\n                {filterComponentsByType(this.props.children, Column, injectedProps)}\r\n                {isHeader || isFooter ? <td className={css.scrollSz} /> : <td className={css.scrollBodySz} />}\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nRow.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    rowId: PropTypes.any //if exists - invoke createRowRef to create ref\r\n}\r\nRow.defaultProps = {}\r\n\r\nexport default tableConnect(Row)\r\n","import React, {Component, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport ScrollbarSize from 'react-scrollbar-size'\r\nimport Color from 'color'\r\nimport {darkenColor, lightenColor} from './Theme/Utils'\r\n\r\nimport Header from './Header'\r\nimport Body from './Body'\r\nimport TableFooter from './TableFooter'\r\nimport Footer from './Footer'\r\nimport Row from './Row'\r\nimport Column from './Column'\r\nimport Pagination from './Pagination'\r\nimport './fontAwesome/faLibrary.js'\r\n\r\nimport {TableProvider} from './TableContext'\r\nimport {DEFAULT_VALUES, DEFAULT_TABLE_STYLE, DEFAULT_CSS_CLASS_NAMES, CLASS_NAMES} from './tableConstants'\r\nimport theme from './Theme'\r\n\r\nimport jss from './jssInstance'\r\n\r\nclass Table extends PureComponent {\r\n\r\n    state = {\r\n        tableBodyData: [],\r\n        tableFooterData: [],\r\n    }\r\n\r\n    tableRefs = {\r\n        container: React.createRef(),\r\n        bodyContainer: React.createRef(),\r\n        rows: {}\r\n    }\r\n    scroll = {\r\n        width: 17,\r\n        height: 17,\r\n        cellWidth: 17,\r\n        bodyCellWidth: 0,\r\n    }\r\n\r\n    tableStyles = {\r\n        //LVL 0\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            boxSizing: 'border-box',\r\n            '& table, & thead, & tbody, & tfoot, & tr, & th, & td': {boxSizing: 'border-box',}\r\n        },\r\n        // LVL 1\r\n        tableContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            overflowX: 'auto',\r\n            boxSizing: 'border-box',\r\n        },\r\n        footerContainer: {\r\n            display: 'flex',\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n            justifyContent: 'space-between',\r\n            boxSizing: 'border-box',\r\n        },\r\n        // LVL 2\r\n        tableHeaderBodyContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n        },\r\n        tableFooterContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        // LVL 3\r\n        tableHeaderContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        tableBodyContainer: {\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n            overflowY: 'scroll'\r\n        },\r\n        // LVL 4\r\n        table: {\r\n            tableLayout: 'fixed'\r\n        },\r\n\r\n        tableHeader: {\r\n\r\n        },\r\n        tableBody: {\r\n        },\r\n        tableFooter: {},\r\n\r\n// DECORATION STYLES\r\n        tableContainerDc: {\r\n            backgroundColor: theme.tableBgColor,\r\n            color: theme.tableTextColor,\r\n        },\r\n        tableBodyContainerDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n        },\r\n        tableHeaderRowDc: {\r\n            backgroundColor: theme.headerBgColor,\r\n            color: theme.headerTextColor,\r\n            '& th': {\r\n                padding: theme.paddingHeaderCell\r\n            },\r\n        },\r\n        tableBodyDc:{\r\n            backgroundColor: theme.bodyBgColor,\r\n            color: theme.bodyTextColor\r\n        },\r\n        tableBodyRowDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ? darkenColor(theme.bodyBgColor, theme.stripedColorFactor) : theme.bodyBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingBodyCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.bodyBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        tableFooterDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            color: theme.tableFooterTextColor,\r\n        },\r\n        tableFooterRowDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ?\r\n                    darkenColor(theme.tableFooterBgColor, theme.stripedColorFactor)\r\n                    : theme.tableFooterBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingTableFooterCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.tableFooterBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        footerContainerDc: {\r\n            backgroundColor: theme.footerBgColor\r\n        },\r\n// SIZE STYLES\r\n        containerSz: {\r\n            height: '100%'\r\n        },\r\n        tableBodyContainerSz: {width: null},\r\n        tableFooterContainerSz: {width: null},\r\n        tableHeaderSz: {width: null},\r\n        tableBodySz: {width: null},\r\n        scrollSz: {width: null},\r\n        scrollBodySz: {},\r\n// SPECIAL STYLES\r\n        hideHeader: {\r\n            fontSize: [[0], '!important'],\r\n            height: [[0], '!important'],\r\n            '& tr': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& td': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& th': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            }\r\n        },\r\n    }\r\n    jssSheet = jss.createStyleSheet(this.tableStyles, {link: true})\r\n\r\n    /**\r\n     * join inner and external css classes lists into array\r\n     * @param {(string|string[])} innerCssClasses\r\n     * @param {(string|string[])} extCssClasses\r\n     * @returns {string[]}\r\n     */\r\n    static joinCss(innerCssClasses, extCssClasses) {\r\n        // convert  innerCssClasses to array\r\n        innerCssClasses = check.array(innerCssClasses) ? innerCssClasses : (\r\n            check.nonEmptyString(innerCssClasses) ? [innerCssClasses] : []\r\n        )\r\n        // convert extCssClasses to array\r\n        extCssClasses = check.nonEmptyString(extCssClasses) ? [extCssClasses] : (\r\n            check.array(extCssClasses) ? extCssClasses : []\r\n        )\r\n\r\n        return [...innerCssClasses, ...extCssClasses]\r\n    }\r\n\r\n    /**\r\n     * @param children\r\n     * @param {Object} component that instances should be filtered\r\n     * @param {Object} injectedProps this props will be injected into filtered children\r\n     * @param {boolean} injectIndex if true - prop index will be injected\r\n     * @returns {Array}\r\n     */\r\n    filterComponentsByType(children, component, injectedProps = {}, injectIndex = true) {\r\n        const result = []\r\n        React.Children.forEach(children, (child, index) => {\r\n            if (child.type === component) {\r\n                if (injectIndex) injectedProps.index = index\r\n                result.push(React.cloneElement(child, {...injectedProps, key: index}))\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    updateColumnsSizesInDOM = () => {\r\n        const {dimensions, dimensions: {columnsSizes}, columnsCss} = this.tableContext\r\n        columnsCss.forEach((columnSet, index) => {\r\n            this.jssSheet.getRule(columnSet.columnSizeClass).prop('width', columnsSizes[index].width)\r\n        })\r\n        this.jssSheet.getRule('tableHeaderSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('tableBodySz').prop('width', dimensions.columnsWidth + this.scroll.bodyCellWidth)\r\n        this.jssSheet.getRule('tableBodyContainerSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollSz').prop('width', this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollBodySz').prop('width', this.scroll.bodyCellWidth)\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        let startTime = Date.now()\r\n\r\n        const {dimensions, dimensions: {columnsSizes}} = this.tableContext\r\n        dimensions.containerWidth = this.tableRefs.container.current.clientWidth\r\n        const sumOfMinWidth = columnsSizes.reduce((sum, column) => {\r\n            return sum + column.minWidth\r\n        }, 0 )\r\n        const scrollSize = this.scroll.width\r\n\r\n        //calculate free space for distribute\r\n        let freeSpace = Math.trunc(dimensions.containerWidth - sumOfMinWidth - scrollSize)\r\n        if (freeSpace <=0) {\r\n            console.log('no free space')\r\n            console.log('--finished', Date.now() - startTime, this.tableContext.dimensions)\r\n        }\r\n\r\n        let counter = 0\r\n        let numberOfExtendableColumns = 0\r\n        //reset width of columns to minWidth\r\n        columnsSizes.forEach(column => column.width = column.minWidth)\r\n\r\n        while (freeSpace > 0) {\r\n            //if don't have columns that can be extended - break cycle\r\n            numberOfExtendableColumns = columnsSizes.reduce((sum, column) => {\r\n                return column.fixed || column.width >= column.maxWidth ? sum : ++sum\r\n            }, 0)\r\n            if (numberOfExtendableColumns === 0) {\r\n                break\r\n            }\r\n            //if few free space - distribute by 1 per column\r\n            if (freeSpace < numberOfExtendableColumns) {\r\n                for (const column of columnsSizes) {\r\n                    if (column.fixed || column.width >= column.maxWidth) continue\r\n                    column.width++\r\n                    freeSpace--\r\n                    if (freeSpace <= 0) {\r\n                        console.log('distributed by 1 per column')\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            //if free space enough to distribute between extendable columns\r\n            const spacePerColumn = Math.trunc(freeSpace/numberOfExtendableColumns)\r\n            for (let column of columnsSizes) {\r\n                if (column.fixed || column.width >= column.maxWidth) continue\r\n                let additionWidth = column.maxWidth - column.width >= spacePerColumn ? spacePerColumn : column.maxWidth - column.width\r\n                freeSpace -= additionWidth\r\n                column.width += additionWidth\r\n            }\r\n            ++counter\r\n        }\r\n        //calculate new scroll cell width, table width\r\n        const columnsWidth = columnsSizes.reduce((sum, column) => {return sum + column.width}, 0)\r\n        this.scroll.cellWidth =\r\n            columnsWidth + this.scroll.width > dimensions.containerWidth ?\r\n                this.scroll.width :\r\n                dimensions.containerWidth - columnsWidth\r\n        this.scroll.bodyCellWidth = this.scroll.cellWidth - this.scroll.width\r\n        dimensions.columnsWidth = columnsWidth\r\n    }\r\n\r\n    updateColumns = () => {\r\n        this.updateDimensions()\r\n        this.updateColumnsSizesInDOM()\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parse result of fetchData function.\r\n     * If it object:\r\n     *  1) find key 'body'. If key exists and type of value is Array, write to state.tableBodyData\r\n     *  2) find key 'footer'. If key exists and type of value is Array, write to state.tableFooterData\r\n     * If it array, consider it as body data and write to state.tableBodyData\r\n     * @param data\r\n     */\r\n    parseFetchedResult(data) {\r\n        const {bodyDataKey, footerDataKey} = this.props\r\n        if (check.object(data)) {\r\n            if (data[bodyDataKey])  this.setState({tableBodyData: data[bodyDataKey]})\r\n            if (data[footerDataKey])  this.setState({tableFooterData: data[footerDataKey]})\r\n        } else if (check.array(data)) {\r\n            this.setState({tableBodyData: data})\r\n        } else {\r\n            throw new Error('Invalid data format')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fetch data using this.props.fetchData function and update Body of Table\r\n     * @returns {Promise<void>}\r\n     */\r\n    updateData = async () => {\r\n        try {\r\n            const data = this.props.data ? this.props.data : await this.props.fetchData(this.tableContext.states.pagination)\r\n            this.parseFetchedResult(data)\r\n        } catch (e) {\r\n            console.log('---!!! Table: fetch data error! ', e)\r\n        }\r\n    }\r\n\r\n    formBodyData = (data, columnsParams) => {\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    createRowRef = (id) => {\r\n        const ref = React.createRef()\r\n        this.tableRefs.rows[id] = ref\r\n        // console.log('***************')\r\n        return ref\r\n    }\r\n\r\n    scrollToRow = (rowId) => {\r\n\r\n    }\r\n\r\n    tableContext = {\r\n        theme: theme,\r\n        states: {},\r\n        shareState: (state,name) => {this.tableContext.states[name] = state},\r\n        getState: (name) => this.tableContext.states[name],\r\n        updateData: this.updateData,\r\n        formBodyData: this.props.formBodyData ? this.props.formBodyData : this.formBodyData,\r\n        cssStyles: this.tableStyles,\r\n        dimensions: {\r\n            containerWidth: 0,\r\n            columnsSizes: [],\r\n            columnsWidth: 0, // sum of current columns width\r\n        },\r\n        columnsCss: [],\r\n        columnsParams: [],\r\n        jssSheet: this.jssSheet,\r\n        filterComponentsByType: this.filterComponentsByType,\r\n        joinCss: Table.joinCss,\r\n        createRowRef: this.createRowRef,\r\n        tableRefs: this.tableRefs\r\n    }\r\n\r\n    setColumnsCss(header) {\r\n        const {columnsCss} = this.tableContext\r\n        const {children: hdChildren} = header.props\r\n        // case if Header have rows as children\r\n        const rows = this.filterComponentsByType(hdChildren, Row)\r\n        let columns = []\r\n        if (rows.length > 0) {\r\n        //    get last Row as source of header format info\r\n            const lastRowChildren = rows[rows.length - 1].props.children\r\n            columns = this.filterComponentsByType(lastRowChildren, Column)\r\n        } else {\r\n        //  if direct children of Header are Column's instances\r\n            columns = this.filterComponentsByType(hdChildren, Column)\r\n        }\r\n\r\n        if (columns.length === 0) {\r\n            console.log(\"Header doesn't have any Column's components as children\" )\r\n            return []\r\n        }\r\n\r\n        const columnCssPrefix = DEFAULT_CSS_CLASS_NAMES.column\r\n        const columnSizeCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnSz\r\n        const columnDecoCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnDc\r\n\r\n        columns.forEach((column, index) => {\r\n            const params = {\r\n                    columnClass: columnCssPrefix + index,\r\n                    columnSizeClass: columnSizeCssPrefix + index,\r\n                    columnDecoClass: columnDecoCssPrefix + index\r\n            }\r\n            this.jssSheet.addRules({\r\n                [params.columnClass] : {},\r\n                [params.columnSizeClass] : {width: null},\r\n                [params.columnDecoClass] : {},\r\n            })\r\n            columnsCss[index] = params\r\n        })\r\n    }\r\n\r\n    scrollbarSizeLoad = (scrollSizes) => {\r\n        this.scroll.width = scrollSizes.scrollbarWidth\r\n        this.scroll.height = scrollSizes.scrollbarHeight\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes: css} = this.jssSheet\r\n        const {children} = this.props\r\n        this.setColumnsCss(this.filterComponentsByType(children, Header)[0])\r\n        return (\r\n            <TableProvider value={this.tableContext}>\r\n                <ScrollbarSize\r\n                    onLoad={this.scrollbarSizeLoad}\r\n                />\r\n                <div className={[css.container, css.containerSz].join(\" \")} ref={this.tableRefs.container}>\r\n                    <div className={[css.tableContainer, css.tableContainerDc].join(\" \")}>\r\n                        <div className={[css.tableHeaderBodyContainer].join(\" \")}>\r\n                            <div className={[css.tableHeaderContainer]}>\r\n                                {this.filterComponentsByType(children, Header)}\r\n                            </div>\r\n                            <div className={[css.tableBodyContainer, css.tableBodyContainerSz, css.tableBodyContainerDc].join(\" \")} ref={this.tableRefs.bodyContainer}>\r\n                                {this.filterComponentsByType(children, Body, {data: this.state.tableBodyData})}\r\n                            </div>\r\n                        </div>\r\n                        <div className={[css.tableFooterContainer, css.tableFooterContainerSz].join(\" \")}>\r\n                            {this.filterComponentsByType(children, TableFooter, {data: this.state.tableFooterData})}\r\n                        </div>\r\n                    </div>\r\n                    <div className={[css.footerContainer, css.footerContainerDc].join(\" \")}>\r\n                        <div></div>\r\n                        {this.filterComponentsByType(children, Footer)}\r\n                    </div>\r\n                </div>\r\n            </TableProvider>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.jssSheet.attach()\r\n        window.addEventListener('resize', this.updateColumns)\r\n\r\n        this.updateColumns()\r\n        await this.updateData()\r\n\r\n        window.tabRefs = this.tableRefs\r\n    }\r\n\r\n    //should be called only when pass data via props and this data change\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n             await this.updateData()\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumns)\r\n    }\r\n}\r\n\r\nTable.Caption = (props) => {\r\n    return <caption>{props.children}</caption>\r\n}\r\n\r\n\r\nTable.propTypes = {\r\n    fetchData: PropTypes.func, //function that will be fetch data from remote source. Has to be async and return Promise\r\n    formBodyData: PropTypes.func, //function that will be used to form Body content from fetched data\r\n    bodyDataKey: PropTypes.string, // name of key for body data in object that return fetchData function\r\n    footerDataKey: PropTypes.string, // name of key for footer data in object that return fetchData function\r\n\r\n    width: PropTypes.string, //width of table's container\r\n    height: PropTypes.string, //height of table's container\r\n    miWidth: PropTypes.string, //min width of table container\r\n    minHeight: PropTypes.string, //min height of table container\r\n\r\n    bordered: PropTypes.bool,\r\n    bodyStriped: PropTypes.bool,\r\n\r\n    isStretch: PropTypes.bool, //allow stretch table\r\n\r\n    scrollPosition: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\nTable.defaultProps = {\r\n    fetchData: DEFAULT_VALUES.fetchData.method,\r\n    bodyDataKey: DEFAULT_VALUES.fetchData.bodyDataKey,\r\n    footerDataKey: DEFAULT_VALUES.fetchData.footerDataKey,\r\n\r\n    width: DEFAULT_TABLE_STYLE.tableWidth,\r\n    minWidth: DEFAULT_TABLE_STYLE.tableMinWidth,\r\n    height: DEFAULT_TABLE_STYLE.tableHeight,\r\n    minHeight: DEFAULT_TABLE_STYLE.tableMinHeight,\r\n\r\n    bordered: true,\r\n    bodyStriped: true,\r\n\r\n    isStretch: true\r\n};\r\n\r\n\r\nexport {Header, Body, TableFooter, Footer, Row, Column, Pagination}\r\nexport default Table;\r\n","export * from './rootElementsIds'\r\nexport * from './netItems'","import {convertToIntArray, isDebug} from '../helperFunctions'\r\n\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n} from '../constants/actions'\r\nimport {\r\n    URL_REQUEST_NET_ELEMENTS_BY_ID, //should return JSON object like {netData: [array of data for each net ID]}\r\n    URL_REQUEST_HOST_ELEMENTS_BY_ID, //should return JSON object like {hostData: [array of data for each net ID]}\r\n    DEBUG_URL_REQUEST_NET_ELEMENTS_BY_ID,\r\n    DEBUG_URL_REQUEST_HOST_ELEMENTS_BY_ID,\r\n} from '../constants/IpamTable'\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of int ID], hostsIds: [array of int ID}\r\n * @returns {{type: string, payload: {ids: *}}}\r\n */\r\nexport function requestElements({netsIds, hostsIds}) {\r\n    return {type: REQUEST_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function invalidateElements({netsIds, hostsIds}) {\r\n    return {type: INVALIDATE_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function receiveElements({networksData, hostsData}) {\r\n    return {type: RECEIVE_ELEMENTS, payload: {networksData, hostsData}}\r\n}\r\n\r\nexport function netItemToggleExpandCollapse(netItemId) {\r\n    return {type: NET_ITEM_TOGGLE_EXPAND_COLLAPSE, payload: {id: netItemId}}\r\n}\r\n\r\n\r\n/**\r\n * check each element according elementsId in a given part of store and return array of ids that should be update\r\n * @param store object\r\n * @param elementsIds array\r\n */\r\nfunction getInvalidatedData(store, elementsIds) {\r\n    if (!elementsIds || elementsIds.length === 0) return []\r\n    return elementsIds.filter(id => {\r\n        return !store[id] || store[id].didInvalidate\r\n    })\r\n}\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of ids], hostsIds: [array of ids]}\r\n * @returns function\r\n */\r\nexport function fetchElementsIfNeeded({netsIds, hostsIds}) {\r\n    return (dispatch, getState) => {\r\n        const filteredNetsIds = getInvalidatedData(getState().netData.networks ,netsIds)\r\n        const filteredHostsIds = getInvalidatedData(getState().netData.hosts ,hostsIds)\r\n        if (filteredNetsIds.length > 0 || filteredHostsIds.length > 0) {\r\n            dispatch(fetchNetData({netsIds: filteredNetsIds, hostsIds: filteredHostsIds}))\r\n        }\r\n    }\r\n}\r\n\r\nfunction fetchNetData({netsIds, hostsIds}) {\r\n    return async (dispatch) => {\r\n        window.logger(\"fetchNetData: dispatch(requestElements)\", {netsIds, hostsIds})\r\n        dispatch(requestElements({netsIds, hostsIds}))\r\n        // window.logger(\"fetchNetData: after dispatch(requestElements)\")\r\n        const requestsArray = []\r\n        if (netsIds.length > 0) {\r\n            const netsFormData = new FormData\r\n            netsFormData.append(\"netsIds\", netsIds)\r\n            const URL = isDebug() ? DEBUG_URL_REQUEST_NET_ELEMENTS_BY_ID : URL_REQUEST_NET_ELEMENTS_BY_ID\r\n            const netsDataRequest = new Request(URL, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: netsFormData,\r\n            })\r\n            requestsArray.push(netsDataRequest)\r\n        }\r\n        if (hostsIds.length > 0) {\r\n            const hostsFormData = new FormData\r\n            hostsFormData.append(\"hostsIds\", hostsIds)\r\n            const URL = isDebug() ? DEBUG_URL_REQUEST_HOST_ELEMENTS_BY_ID : URL_REQUEST_HOST_ELEMENTS_BY_ID\r\n            const hostsDataRequest = new Request(URL, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: hostsFormData,\r\n            })\r\n            requestsArray.push(hostsDataRequest)\r\n        }\r\n        if (requestsArray.length === 0) return\r\n\r\n        try {\r\n            window.logger(\"fetchNetData: create fetch Array\")\r\n            const pArray = requestsArray.map(async request => {\r\n                const response = await fetch(request)\r\n                return response.json()\r\n            })\r\n            // window.logger(\"fetchNetData: fetch Array have been created\")\r\n            const fetchResult = await Promise.all(pArray)\r\n            // window.logger(\"fetchNetData: after await Promise.all(pArray)\")\r\n            const result = fetchResult.reduce((acc, result) => {return Object.assign(acc, result)}, {})\r\n            // window.logger(\"fetchNetData: dispatch(receiveElements(result)) start\")\r\n            dispatch(receiveElements(result))\r\n            // window.logger(\"fetchNetData: dispatch(receiveElements(result)) finished\")\r\n        } catch (error) {\r\n            console.log('---FETCH ELEMENTS ERROR!: ', error.message)\r\n        }\r\n\r\n    }\r\n}\r\n","export const URL_REQUEST_ROOT_ELEMENTS_ID = 'http://netcmdb.rs.ru/networks/rootElements.json'\r\nexport const URL_REQUEST_NET_ELEMENTS_BY_ID = 'http://netcmdb.rs.ru/networks/netElementsByIds.json'\r\nexport const URL_REQUEST_HOST_ELEMENTS_BY_ID = 'http://netcmdb.rs.ru/networks/hostElementsByIds.json'\r\n\r\nexport const DEBUG_URL_REQUEST_ROOT_ELEMENTS_ID = 'http://voice.rs.ru/networks/rootElements.json'\r\nexport const DEBUG_URL_REQUEST_NET_ELEMENTS_BY_ID = 'http://voice.rs.ru/networks/netElementsByIds.json'\r\nexport const DEBUG_URL_REQUEST_HOST_ELEMENTS_BY_ID = 'http://voice.rs.ru/networks/hostElementsByIds.json'","import Color from 'color'\r\n\r\nconst color = (color) => {\r\n    return Color(color).rgb().toString()\r\n}\r\nconst darkenColor = (color, ratio) => {\r\n    return Color(color).darken(ratio).rgb().toString()\r\n}\r\nconst lightenColor = (color, ratio) => {\r\n    return Color(color).lighten(ratio).rgb().toString()\r\n}\r\n\r\nexport {color, darkenColor, lightenColor}","export const DEFAULT_TABLE_STYLE = {\r\n    columnPadding: '5px',\r\n\r\n    tableWidth: '100%',\r\n    tableMinWidth: '400px',\r\n    tableHeight: '100%',\r\n    tableMinHeight: '300px',\r\n\r\n    bordered: true,\r\n    border: '1px solid darkgray',\r\n\r\n    padding: '5px 10px',\r\n\r\n    columnMinWidth: '100px',\r\n    columnMaxWidth: 300,\r\n    scrollWidthPx: 17,\r\n\r\n    backgroundColor: {\r\n        table: '#d9d9d9',\r\n        header: '#d9d9d9',\r\n        body: '#d9d9d9',\r\n        tableFooter: '#d9d9d9',\r\n        footer: '#d9d9d9',\r\n    },\r\n    tablePadding: '10px',\r\n\r\n    pagination: {\r\n        visible: true,\r\n        width: 200\r\n    }\r\n}\r\n\r\nexport const DEFAULT_VALUES = {\r\n    fetchData: {\r\n        method: async () => Promise.resolve([]),\r\n        bodyDataKey: 'body',\r\n        footerDataKey: 'footer'\r\n    }\r\n}\r\n\r\n\r\nexport const DEFAULT_CSS_CLASS_NAMES = {\r\n    // header: 'thead',\r\n    // body: 'tbody',\r\n    // tableFooter: 'tfoot',\r\n    // footer: 'footer',\r\n    // row: 'row',\r\n    column: 'col_',\r\n    columnSz: 'colSz_',\r\n    columnDc: 'colDc_'\r\n}\r\n\r\nexport const CLASS_NAMES = {\r\n    table: 'Table',\r\n    header: 'Header',\r\n    body: 'Body',\r\n    tableFooter: 'TableFooter',\r\n    footer: 'Footer',\r\n    row: 'Row',\r\n    column: 'Column'\r\n}\r\n\r\nexport const CHROME_CONTAINER_PADDING = '17px'\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\nimport customStyles from './selectReactCustomStyle'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport * as PAGINATION from './paginationConstants'\r\nimport theme from '../Theme'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: PAGINATION.STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: PAGINATION.STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: PAGINATION.STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[theme.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: theme.footerIconColor\r\n    },\r\n}\r\n\r\nclass Pagination extends PureComponent {\r\n\r\n    defaultValueRecordsOnPage = () => {\r\n        const {selectDefaultValueIndex} = this.props\r\n        const index = (selectDefaultValueIndex > 0 && selectDefaultValueIndex <= PAGINATION.SELECT_OPTIONS.length) ? selectDefaultValueIndex : PAGINATION.DEFAULT_VALUE_INDEX\r\n        return PAGINATION.SELECT_OPTIONS[index]\r\n    }\r\n\r\n    state = {\r\n        selectOptions: this.props.selectOptions,\r\n        currentPage: 1,\r\n        pageNumberInput: '1',\r\n        totalPages: 99,\r\n        rowsOnPage: this.defaultValueRecordsOnPage().value,\r\n    }\r\n\r\n    pageNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                Page<input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.pageNumberInput}/><span>of {this.state.totalPages}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {pageNumberInput: (value === \"\" || parseInt(value) > 0 && parseInt(value) <= prevState.totalPages) ? value : prevState.pageNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                pageNumberInput: this.state.pageNumberInput === \"\" ? \"1\" : this.state.pageNumberInput,\r\n                currentPage: this.state.pageNumberInput === \"\" ? 1 : parseInt(this.state.pageNumberInput)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSelect = (opt) => {\r\n        this.setState({rowsOnPage: opt.value})\r\n    }\r\n    onClickNextPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === prevState.totalPages ? prevState.currentPage : prevState.currentPage + 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickPrevPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === 1 ? prevState.currentPage : prevState.currentPage - 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickFirstPage = () => {this.setState(prevState => {\r\n        const newPage = 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickLastPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.totalPages\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const selectProps = {\r\n            styles: customStyles,\r\n            options: this.state.selectOptions,\r\n            defaultValue: this.defaultValueRecordsOnPage(),\r\n            menuPlacement: 'auto'\r\n        }\r\n        const {currentPage, totalPages} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.pageNumberBlock(classes)}\r\n                <div className=\"rowsOnPage\"><Select {...selectProps} onChange={this.onChangeSelect} /></div>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n    }\r\n    componentDidUpdate() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n        this.props.tableContext.updateData()\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    selectWidth: PropTypes.number, //react-select width in px\r\n    selectDefaultValueIndex: PropTypes.number,\r\n    selectOptions: PropTypes.array,\r\n};\r\nPagination.defaultProps = {\r\n    selectWidth: 70,\r\n    selectDefaultValueIndex: PAGINATION.DEFAULT_VALUE_INDEX,\r\n    selectOptions: PAGINATION.SELECT_OPTIONS,\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination));\r\n","import {color, darkenColor, lightenColor} from './Utils'\r\n\r\nconst hexCode = {\r\n    blue:   '#007bff',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1 ',\r\n    pink:   '#e83e8c ',\r\n    red:    '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green:  '#28a745',\r\n    teal:   '#20c997',\r\n    cyan:   '#17a2b8',\r\n    white:    '#fff',\r\n    gray:   '#808080',\r\n    black:    '#010101',\r\n}\r\nconst index = {\r\n\r\n    tableBgColor: color(hexCode.white), //is applied to table container\r\n    tableTextColor: lightenColor(hexCode.black, 0.01), //is applied to table container\r\n\r\n    headerBgColor: color(hexCode.blue),\r\n    headerTextColor: darkenColor(hexCode.white, 0.01),\r\n\r\n    bodyBgColor: darkenColor(hexCode.white, 0.1),\r\n    bodyTextColor: lightenColor(hexCode.black, 0.01),\r\n\r\n    tableFooterBgColor: lightenColor(hexCode.green, 1.3),\r\n    tableFooterTextColor: darkenColor(hexCode.gray, 0.3),\r\n\r\n    footerBgColor: lightenColor(hexCode.blue, 0.4),\r\n    footerTextColor: darkenColor(hexCode.gray, 0.8),\r\n\r\n    footerIconColor: hexCode.black,\r\n\r\n    disabledColor: hexCode.gray,\r\n\r\n    border: `1px solid ${lightenColor(hexCode.gray, 0.4)}`,\r\n\r\n    stripedColorFactor: 0.08,\r\n    hoverColorFactor: 0.2,\r\n\r\n    paddingHeaderCell: [5, 10],\r\n    paddingBodyCell: [5, 10],\r\n    paddingTableFooterCell: [5, 10],\r\n}\r\n\r\nexport default index","import React, {PureComponent} from 'react';\r\nimport {connectAdvanced, connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {fetchElementsIfNeeded, netItemToggleExpandCollapse} from '../../../actions'\r\nimport NetRecordRow from \"../NetRecordRow\";\r\nimport HostRecordRow from \"../HostRecordRow\";\r\nimport ChildrenRowsContainer from \"../ChildrenRowsContainer\";\r\n\r\nclass RowsContainer extends PureComponent {\r\n\r\n    childrenNetsIds = []\r\n    childrenHostsIds = []\r\n\r\n    render() {\r\n        console.log('---rowsContainer', this.props.renderCount)\r\n        const {netsData, hostsData, toggleIconHandler, lvl} = this.props\r\n        const netRows = netsData.map(data => {\r\n            if (data.isExpanded) {\r\n                this.childrenNetsIds = this.childrenNetsIds.concat(data.netChildren)\r\n                this.childrenHostsIds = this.childrenHostsIds.concat(data.hostChildren)\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={data.id}/>\r\n                        <ChildrenRowsContainer netsIds={data.netChildren} hostsIds={data.hostChildren} lvl={lvl + 1} />\r\n                    </React.Fragment>\r\n\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={data.id} />\r\n                    </React.Fragment>\r\n                )\r\n            }})\r\n        const hostRows = hostsData.map(data => {\r\n            return (\r\n                <HostRecordRow {...data} lvl={lvl} key={'n' + data.id} />\r\n            )})\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {netRows}\r\n                {hostRows}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('--rows container did mount', this.props.renderCount)\r\n        const {updateDataIfNeeded, netsIds, hostsIds} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('--rows container did update', this.props.renderCount)\r\n        const {updateDataIfNeeded, netsIds, hostsIds} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n}\r\n\r\n// const defaultHostRecordItemData = {\r\n//     ipAddress: \"\",\r\n//     comment: \"\",\r\n//     isFetching: false,\r\n//     isExpanded: false,\r\n//     didInvalidate: true,\r\n// }\r\n//\r\n// const defaultNetRecordItemData = {\r\n//     ipAddress: \"\",\r\n//     comment: \"\",\r\n//     isFetching: false,\r\n//     isExpanded: false,\r\n//     didInvalidate: true,\r\n//     netChildren: [],\r\n//     hostChildren: []\r\n// }\r\n\r\nconst selectorFactory = (dispatch) => {\r\n\r\n    const updateDataIfNeeded = ({netsIds, hostsIds}) => {\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n    const toggleIconHandler = (id) => () => {\r\n        dispatch(netItemToggleExpandCollapse(id))\r\n    }\r\n\r\n    return (state, ownProps) => {\r\n        const {netsIds, hostsIds, lvl} = ownProps\r\n        const netsData = []\r\n        const hostsData = []\r\n        for (let id of netsIds) {\r\n            const itemData = state.netData.networks[id]\r\n            if (itemData) netsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n        for (let id of hostsIds) {\r\n            const itemData = state.netData.hosts[id]\r\n            if (itemData) hostsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n\r\n        return {netsData, hostsData, lvl, updateDataIfNeeded, toggleIconHandler}\r\n    }\r\n}\r\n\r\nRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nRowsContainer.defaultProps = {\r\n    netsIds: [],\r\n    hostsIds: []\r\n}\r\n\r\nexport default connectAdvanced(selectorFactory, {renderCountProp: 'renderCount'})(RowsContainer)","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport 'isomorphic-fetch'\r\n\r\nimport App from \"./components/App\";\r\nimport AppNavbar from './components/AppNavbar'\r\nimport IpamTable from './components/IpamTable'\r\nimport './components/fontAwesome/faLibrary.js'\r\nimport configureStore from './configureStore'\r\n\r\nconst store = configureStore()\r\n//debug only\r\nwindow.store = store\r\nwindow.start = Date.now()\r\nwindow.profile = {}\r\nwindow.logger = (message, data = {}) => {\r\n    console.log(message, ': ', Date.now() - window.start, {...data})\r\n    window.start = Date.now()\r\n}\r\nwindow.profiler = (message) => {\r\n    const time = Date.now() - window.start\r\n    window.profile[message] = typeof window.profile[message] === \"undefined\" ? 0 : window.profile[message] + time\r\n    window.start = Date.now()\r\n}\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App>\r\n            <App.Header>\r\n                <AppNavbar />\r\n            </App.Header>\r\n            <App.Body>\r\n                <IpamTable/>\r\n            </App.Body>\r\n            <App.Footer>\r\n\r\n            </App.Footer>\r\n        </App>\r\n    </Provider>,\r\n    document.getElementById(\"root-container\"));","import React, {Component} from 'react'\r\nimport AppContext from './appContext'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\nconst jss = create(preset())\r\n\r\nimport styles from './styles'\r\n\r\nconst cssSheet = jss\r\n    .createStyleSheet(styles)\r\n    .attach()\r\n\r\nclass App extends Component{\r\n    appRefs = {\r\n        app: null,\r\n        header: null,\r\n        body: null,\r\n        footer: null\r\n    }\r\n\r\n    render() {\r\n        const {classes: css} = cssSheet\r\n        return (\r\n            <div className={css.app} ref={el => this.appRefs.app = el}>\r\n                <AppContext.Provider value={{\r\n                    appRefs: this.appRefs,\r\n                    css\r\n                }}>\r\n                    {this.props.children}\r\n                </AppContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n}\r\n\r\nApp.Header = class Header extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.header} ref={el => appRefs.header = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Body = class Body extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.body} ref={el => appRefs.body = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Footer = class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.footer} ref={el => appRefs.footer = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    appRefs: PropTypes.shape({\r\n        app: PropTypes.node,\r\n        header: PropTypes.node,\r\n        body: PropTypes.node,\r\n        footer: PropTypes.node\r\n    })\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nconst AppContext = React.createContext()\r\nexport default AppContext","const styles = {\r\n    app: {\r\n        height: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        gridTemplateRows: 'auto 1fr auto',\r\n        gridTemplateAreas: \"'header' 'body' 'footer'\",\r\n\r\n        msGridColumns: '1fr',\r\n        msGridRows: 'auto 1fr auto',\r\n    },\r\n    header: {\r\n        gridArea: 'header',\r\n\r\n        msGridRow: 1,\r\n        msGridColumn: 1\r\n    },\r\n    body: {\r\n        gridArea: 'body',\r\n        overflowY: 'auto',\r\n        msGridRow: 2,\r\n        msGridColumn: 1\r\n    },\r\n    footer: {\r\n        gridArea: 'footer',\r\n\r\n        msGridRow: 3,\r\n        msGridColumn: 1\r\n    }\r\n}\r\nexport default styles","import React from 'react'\r\nimport {Navbar, Nav, NavItem, NavDropdown, MenuItem} from 'react-bootstrap'\r\nimport logo from '../../img/logo_brs_small.png'\r\nimport styles from './navBar.css'\r\nimport CSSModules from 'react-css-modules'\r\nimport * as URL from './URLs'\r\n\r\nconst imgStyle = {\r\n    width: 38\r\n}\r\n\r\nconst AppNavbar = () => {\r\n    return (\r\n        <Navbar fluid>\r\n            <Navbar.Header>\r\n                <Navbar.Brand styleName=\"customHeader\">\r\n                    <a href={URL.root}><img src={logo} style={imgStyle}/></a>\r\n                </Navbar.Brand>\r\n            </Navbar.Header>\r\n\r\n            <Nav>\r\n                <NavItem eventKey={1} href={URL.offices}>\r\n                    Офисы\r\n                </NavItem>\r\n                <NavItem eventKey={2} href={URL.devices}>\r\n                    Оборудование\r\n                </NavItem>\r\n                <NavDropdown eventKey={3} title=\"IP Planing\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={3.1} href={URL.ip_ipam}>IPAM</MenuItem>\r\n                </NavDropdown>\r\n                <NavItem eventKey={4} href={URL.reports}>\r\n                    Reports\r\n                </NavItem>\r\n                <NavDropdown eventKey={5} title=\"Phone Reports\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={5.1} href={URL.reportPhoneByModels}>По моделям</MenuItem>\r\n                    <MenuItem eventKey={5.2} href={URL.reportPhoneByClusters}>По кластерам</MenuItem>\r\n                    <MenuItem eventKey={5.3} href={URL.reportPhoneByNotUsed}>По неиспользуемым</MenuItem>\r\n                </NavDropdown>\r\n\r\n            </Nav>\r\n\r\n            <Nav pullRight>\r\n                <NavDropdown eventKey={6} title=\"Справочники\" id=\"basic-nav-dropdown-2\">\r\n                    <MenuItem eventKey={6.1} href={URL.dictRegions}>Регионы</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictCities}>Города</MenuItem>\r\n                    <MenuItem eventKey={6.3} href={URL.dictOffice_stats}>Статусы офисов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.dictDevices}>Оборудование</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictPortTypes}>Типы портов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.HwLogs}>Логи Hardware</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.PhonesLogs}>Логи Phones</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.4} href={URL.dictVRFs}>VRF</MenuItem>\r\n                    <MenuItem eventKey={6.4} href={URL.dictNetworksTable}>Networks(Table)</MenuItem>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default CSSModules(AppNavbar, styles)\r\n","import React, {PureComponent} from 'react'\r\nconst TableContext = React.createContext()\r\n\r\nexport const tableConnect = (Component)  => {\r\n    return class WithTableContext extends PureComponent {\r\n        render() {\r\n            return (<TableContext.Consumer>\r\n                {tableContext => <Component {...this.props} tableContext={tableContext} />}\r\n            </TableContext.Consumer>)\r\n        }\r\n    }\r\n}\r\n// export const tableConnect = (Component)  => {\r\n//     return function connectedComponent(props) {\r\n//         return (<TableContext.Consumer>\r\n//             {tableContext => <Component {...props} tableContext={tableContext} />}\r\n//         </TableContext.Consumer>)\r\n//     }\r\n// }\r\n\r\nexport const TableProvider =  TableContext.Provider\r\n\r\n","module.exports = \"/ipam/images/9f0fd020d2b75006169e4b3e0963dc7e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-header\":\"navBar__custom-header___2bgtM\",\"customHeader\":\"navBar__custom-header___2bgtM\"};","export const root = \"/\"\r\nexport const offices = \"/locations\"\r\nexport const devices = \"/device/info\"\r\nexport const ip_ipam = \"/network/ipam\"\r\nexport const reports = \"/report/new\"\r\n\r\nexport const reportPhoneByModels = \"/report/phoneStatsReport\"\r\nexport const reportPhoneByClusters = \"/report/phoneStatsByClustersReport\"\r\nexport const reportPhoneByNotUsed = \"/report/phoneStatsByNotUsedReport\"\r\n\r\nexport const dictRegions = \"/admin/regions\"\r\nexport const dictCities = \"/admin/cities\"\r\nexport const dictOffice_stats = \"/admin/officeStatuses\"\r\nexport const dictDevices = \"/admin/devparts\"\r\nexport const dictPortTypes = \"/admin/portTypes\"\r\nexport const dictVRFs = \"/admin/vrf\"\r\nexport const dictNetworksTable = \"/admin/NetworksTab\"\r\n\r\nexport const HwLogs = \"/logs\"\r\nexport const PhonesLogs = \"/logs/phones\"\r\n","import React, {Component} from 'react'\r\nimport {connect, connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    invalidateRootElementsId,\r\n    fetchRootElementsIdIfNeeded,\r\n    invalidateElements,\r\n    fetchElementsIfNeeded,\r\n    forceUpdateRootElements,\r\n    forceUpdateRootElementsIds\r\n} from '../../actions'\r\n\r\nimport Table from '../Table'\r\nimport {Header, Body, Row, Column, TableFooter, Footer, Pagination} from '../Table'\r\nimport RowsContainer from './RowsContainer'\r\nimport {getRootIds} from './selectors'\r\n\r\n\r\nclass IpamTable extends Component {\r\n\r\n    renderBodyData = function(data){\r\n        window.logger(\"renderBodyData2 start\", {netsIds: data.netsIds})\r\n        window.logger(\"renderBodyData2 info\", {hostsIds: data.hostsIds})\r\n        const {netsIds = [], hostsIds = []} = data\r\n        return (\r\n            <React.Fragment>\r\n                <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={0} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        window.logger(\"ipam render start\")\r\n        // const data = {body: {netsData: this.props.netsData, hostsData: this.props.hostsData}}\r\n        const data = {body: {netsIds: this.props.netsIds, hostsIds: this.props.hostsIds}}\r\n\r\n        return (\r\n            <Table width={'100%'} data={data} formBodyData={this.renderBodyData} fetchData={this.fetchData}>\r\n                <Header>\r\n                    <Row>\r\n                        <Column accessor={'address'} minWidth={'200px'} maxWidth={'400px'}>IP address</Column>\r\n                        <Column accessor={'mask'} minWidth={'100px'} fixed>Statistics<br/>(Nets/Hosts)</Column>\r\n                        <Column accessor={'mask'} minWidth={'130px'} fixed>Network mask</Column>\r\n                        <Column accessor={'tags'} minWidth={'100px'} maxWidth={'200px'}>Tags</Column>\r\n                        <Column accessor={'locations'} minWidth={'200px'} maxWidth={'500px'}>Locations</Column>\r\n                        <Column accessor={'vrf'} minWidth={'80px'} fixed>VRF</Column>\r\n                        <Column accessor={'vrf'} minWidth={'60px'} fixed>VLAN</Column>\r\n                        <Column accessor={'vrf'} minWidth={'60px'} fixed>vxlan vni</Column>\r\n                        <Column accessor={'comment'} minWidth={'100px'} maxWidth={'500px'}>Comment</Column>\r\n                    </Row>\r\n                </Header>\r\n                <Body />\r\n                <Footer>\r\n                    <div style={{height: '20px'}}> </div>\r\n                </Footer>\r\n            </Table>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.logger(\"ipam mounted\")\r\n        const {forceUpdateRootItems, forceUpdateRootIds} = this.props\r\n        forceUpdateRootItems()\r\n        // forceUpdateRootIds()\r\n    }\r\n}\r\n\r\n\r\nconst selectorFactory = (dispatch) => {\r\n\r\n    const forceUpdateRootItems = () => {\r\n        dispatch(forceUpdateRootElements())\r\n    }\r\n    const forceUpdateRootIds = () => {\r\n        dispatch (forceUpdateRootElementsIds())\r\n    }\r\n    const updateElements = ({netsIds, hostsIds}) => {\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n    const forceUpdateElements = ({netsIds, hostsIds}) => {\r\n        dispatch(invalidateElements({netsIds, hostsIds}))\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n\r\n    return (state, ownProps) => {\r\n        const {netsIds, hostsIds} = getRootIds(state)\r\n        return {netsIds, hostsIds, forceUpdateRootItems, forceUpdateRootIds}\r\n    }\r\n}\r\n\r\n\r\nIpamTable.propTypes = {\r\n    //from dispatchToProps\r\n    forceUpdateRoot: PropTypes.func,\r\n    forceUpdateRootIds: PropTypes.func,\r\n    updateRootElementsId: PropTypes.func,\r\n    updateElements: PropTypes.func,\r\n    //from stateToProps\r\n    rootnetsIds: PropTypes.array,\r\n    rootHostsId: PropTypes.array,\r\n};\r\nIpamTable.defaultProps = {\r\n    rootnetsIds: [],\r\n    rootHostsId: []\r\n};\r\n\r\n\r\nexport default connectAdvanced(selectorFactory, {renderCountProp: 'IpamRenderCount'})(IpamTable)","import {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded} from './netItems'\r\nimport {URL_REQUEST_ROOT_ELEMENTS_ID, DEBUG_URL_REQUEST_ROOT_ELEMENTS_ID} from '../constants/IpamTable'\r\nimport {isDebug} from '../helperFunctions'\r\n\r\nexport function requestRootElementsId() {\r\n    return {type: REQUEST_ROOT_ELEMENTS_ID}\r\n}\r\n\r\nexport function receiveRootElementsId(data) {\r\n    const {netsIds, hostsIds} = data\r\n    return {type: RECEIVE_ROOT_ELEMENTS_ID, payload: {netsIds, hostsIds}}\r\n}\r\nexport function invalidateRootElementsId() {\r\n    return {type: INVALIDATE_ROOT_ELEMENTS_ID}\r\n}\r\nfunction fetchRootElementsId() {\r\n    return async (dispatch) => {\r\n        dispatch(requestRootElementsId())\r\n        const URL = isDebug() ? DEBUG_URL_REQUEST_ROOT_ELEMENTS_ID : URL_REQUEST_ROOT_ELEMENTS_ID\r\n        const request = new Request(URL, {\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const response = await fetch(request)\r\n        const {rootElementsIds} = await response.json()\r\n        dispatch(receiveRootElementsId(rootElementsIds))\r\n    }\r\n}\r\nfunction shouldFetchRootElementsId(state) {\r\n    const {rootElements} = state\r\n    return !rootElements || rootElements.didInvalidate\r\n}\r\n\r\nexport function fetchRootElementsIdIfNeeded() {\r\n    return async (dispatch, getState) => {\r\n        if (shouldFetchRootElementsId(getState())) {\r\n            await dispatch(fetchRootElementsId())\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    }\r\n}\r\nexport function forceUpdateRootElements() {\r\n    return async (dispatch, getState) => {\r\n        dispatch(invalidateRootElementsId())\r\n        await dispatch(fetchRootElementsId())\r\n        const {rootElementsIds: {netsIds, hostsIds}} = getState()\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n}\r\nexport function forceUpdateRootElementsIds() {\r\n    return async (dispatch, getState) => {\r\n        dispatch(invalidateRootElementsId())\r\n        dispatch(fetchRootElementsId())\r\n    }\r\n}","import React, {Component, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n\r\nclass Header extends PureComponent {\r\n\r\n    tableInnerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n    headerInnerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * wrap columns in Row if need\r\n     * join inner css classes with users classes\r\n     *\r\n     * @returns Array array of rows that can be rendered\r\n     */\r\n    buildHeaderRows() {\r\n        const {children, tableContext: {filterComponentsByType, columnsCss, jssSheet, joinCss}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Header lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n\r\n        const rows = filterComponentsByType(children, Row, {isHeader: true})\r\n        if (rows.length > 0) {\r\n        //    add appropriated css classes from columnsParams to each column in last row\r\n            let lastRow = rows[rows.length - 1]\r\n            let columns = filterComponentsByType(lastRow.props.children, Column)\r\n            columns = columns.map(column => {\r\n                const {index} = column.props\r\n                //get css classes for this column from tableContext.columnsParams\r\n                const columnClasses = columnsCss[index]\r\n                const innerCss = [\r\n                    css[columnClasses.columnClass],\r\n                    css[columnClasses.columnSizeClass],\r\n                    css[columnClasses.columnDecoClass],\r\n                ]\r\n                //join with cssClasses of column\r\n                const cssClasses = joinCss(innerCss, column.props.cssClasses)\r\n                return React.cloneElement(column, {cssClasses: cssClasses.join(\" \"), writeParams: true})\r\n            })\r\n            // build new last row and replace it in rows array\r\n            rows[rows.length - 1] = React.cloneElement(\r\n                lastRow,\r\n                {},\r\n                [...columns]\r\n            )\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const {cssClasses, tableContext: {joinCss}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles().join(\" \")}>\r\n                <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n                {this.buildHeaderRows()}\r\n                </thead>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    style: PropTypes.object,\r\n}\r\nHeader.defaultProps = {}\r\n\r\nexport default tableConnect(Header)","import React, {Component, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport check from 'check-types'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n\r\nclass Body extends PureComponent {\r\n    tbodyInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableBody, css.tableBodyDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableBodySz]\r\n    }\r\n\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams, jssSheet: {classes: css}}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n    buildBodyHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n        return (<tr>\r\n            {columnsCss.map((column, index) => {\r\n                const cssClass = css[column.columnSizeClass]\r\n                return <th className={cssClass} key={index}>{index}</th>\r\n            })}\r\n        </tr>)\r\n    }\r\n\r\n    render() {\r\n        const {data, tableContext, tableContext: {jssSheet, joinCss, formBodyData, columnsParams}} = this.props\r\n        const {classes: css} = jssSheet\r\n        // this.buildBodyHeader()\r\n        return (\r\n                <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                    <thead className={css.hideHeader}>\r\n                    {this.buildBodyHeader()}\r\n                    </thead>\r\n                    <tbody className={joinCss(this.tbodyInnerStyles(tableContext), this.props.cssClasses).join(\" \")}>\r\n                    {window.logger(\"before calling form body\")}\r\n                    {data ? formBodyData(data, columnsParams) : this.props.children}\r\n                    {window.logger(\"after calling form body\")}\r\n                    </tbody>\r\n                </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nBody.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    data: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.object\r\n    ]), //data from server\r\n}\r\nBody.defaultProps = {}\r\n\r\nexport default tableConnect(Body)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport check from \"check-types\";\r\n\r\nclass TableFooter extends PureComponent {\r\n    tfootInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableFooter, css.tableFooterDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n\r\n    /**\r\n     * wrap children into Row tag if need\r\n     * @param children\r\n     * @param {function} filterComponentsByType\r\n     * @returns {*}\r\n     */\r\n    childrenWrapper = (children, filterComponentsByType ) => {\r\n        if (React.Children.count(children) === 0) {\r\n            return <Row/>\r\n        }\r\n        const rows = filterComponentsByType(children, Row, {isFooter: true})\r\n        if (rows.length > 0) {\r\n            return rows\r\n        }\r\n        if (rows.length === 0) {\r\n            return (\r\n                <Row isFooter={true} index={0}>{children}</Row>\r\n            )\r\n        } else {\r\n            return <Row/>\r\n        }\r\n    }\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams, jssSheet: {classes: css}}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row isFooter index={rowIndex} key={rowIndex} cssClasses={this.props.cssClasses}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    buildTableFooterHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}, joinCss} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header in tableFooter!\")\r\n            return null\r\n        }\r\n        return (<Row isFooter>\r\n            {columnsCss.map((column, index) => {\r\n                return <Column cssClasses={css[column.columnSizeClass]} key={index}>{index}</Column>\r\n            })}\r\n        </Row>)\r\n    }\r\n\r\n    render() {\r\n        const {data, tableContext, tableContext: {joinCss, jssSheet: {classes}}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={classes.hideHeader}>\r\n                {this.buildTableFooterHeader()}\r\n                </thead>\r\n                <tfoot className={this.tfootInnerStyles(tableContext).join(\" \")}>\r\n                {data ? this.parseData(data) : this.props.children}\r\n                </tfoot>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n}\r\nTableFooter.defaultProps = {}\r\n\r\nexport default tableConnect(TableFooter)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Footer extends Component {\r\n    innerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.footerContainer, css.footerContainerDc]\r\n    }\r\n\r\n    render() {\r\n\r\n        const {tableContext} = this.props\r\n        return (\r\n            <div className={this.innerStyles(tableContext).join(\" \")}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    pagination: PropTypes.bool\r\n};\r\nFooter.defaultProps = {\r\n    pagination: true\r\n};\r\n\r\nexport default tableConnect(Footer);\r\n","const customStyles = {\r\n    option: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: \"2px 5px\",\r\n        })\r\n    },\r\n    container: (base, state) => {\r\n        return ({\r\n            ...base,\r\n        })\r\n    },\r\n    control: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            minHeight: 15,\r\n        })\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: 0\r\n        })\r\n    },\r\n    input: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            margin: 0,\r\n            padding: 0\r\n        })\r\n    },\r\n}\r\nexport default customStyles","export const DEFAULT_VALUE_INDEX = 2\r\nexport const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 310,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50\r\n}\r\nexport const SELECT_OPTIONS = [\r\n    { value: 10, label: 10 },\r\n    { value: 50, label: 50 },\r\n    { value: 100, label: 100 },\r\n    { value: 200, label: 200 },\r\n    { value: 500, label: 500 },\r\n    { value: -1, label: \"All\" }\r\n]\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n);\r\n","import {create} from 'jss'\r\nimport vendorPrefixer from 'jss-vendor-prefixer'\r\nimport preset from 'jss-preset-default'\r\n\r\n// const jss = create({plugins: [camelCase(), vendorPrefixer(), defaultUnit(), jssNested()]})\r\nconst jss = create(preset())\r\nexport default jss","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\n\r\nclass NetRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        let {id, classes, ipAddress, netmask,comment, vrfId, vrfName, vrfRd, netLocations, netChildren, hostChildren, isFetching, isExpanded, toggleIconHandler, rowId} = this.props\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <Row rowId={rowId}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            let locations = []\r\n            netLocations = check.object(netLocations) ? netLocations : {}\r\n            for (let [key, location] of Object.entries(netLocations)) {\r\n                locations.push(location)\r\n            }\r\n            const icon = isExpanded ?\r\n                <FontAwesomeIcon icon={\"minus\"} className={classes.icon} onClick={toggleIconHandler(id)}/> :\r\n                <FontAwesomeIcon icon={\"plus\"}  className={classes.icon} onClick={toggleIconHandler(id)}/>\r\n            return (\r\n                <Row rowId={rowId}>\r\n                    <Column>{this.lvlIndent()}{icon}{ipAddress}</Column>\r\n                    <Column>{netChildren.length}/{hostChildren.length}</Column>\r\n                    <Column>{netmask}</Column>\r\n                    <Column></Column>\r\n                    <Column>{locations.join(\"; \")}</Column>\r\n                    <Column>{vrfName}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column>{comment}</Column>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nNetRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isExpanded: PropTypes.bool,\r\n    isFetching: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    netChildren: PropTypes.array,\r\n    hostChildren: PropTypes.array,\r\n    netLocations: PropTypes.object,\r\n    toggleIconHandler: PropTypes.func,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nNetRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n    netChildren: [],\r\n    hostChildren: [],\r\n};\r\n\r\nexport default injectSheet(style)(NetRecordRow)\r\n\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\n\r\nclass HostRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        const {id, ipAddress, macAddress, comment, isFetching} = this.props\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <Row>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return (\r\n                <Row>\r\n                    <Column>{this.lvlIndent()}{ipAddress}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nHostRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isFetching: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    macAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nHostRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n};\r\n\r\nexport default injectSheet(style)(HostRecordRow)\r\n\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {Component, PureComponent} from 'react';\r\nimport RowsContainer from '../RowsContainer'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChildrenRowsContainer extends PureComponent {\r\n    render() {\r\n        const {netsIds, hostsIds, lvl} = this.props\r\n        return (\r\n           <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={lvl} />\r\n        );\r\n    }\r\n}\r\n\r\nChildrenRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nexport default ChildrenRowsContainer;\r\n\r\n","import {createSelector} from 'reselect'\r\n\r\nconst getRootNetsIds = state => state.rootElementsIds.netsIds\r\nconst getRootHostsIds = state => state.rootElementsIds.hostsIds\r\n\r\nconst getNetworksDataStore = state => state.netData.networks\r\nconst getHostsDataStore = state => state.netData.hosts\r\n\r\nconst getNetworkItemDataStore = (state, props) => {\r\n\r\n}\r\n\r\nconst makeGetNetworkData = () => {\r\n    return createSelector(\r\n        []\r\n    )\r\n}\r\n\r\nexport const getRootRowsData = createSelector(\r\n    [getRootNetsIds, getRootHostsIds, getNetworksDataStore, getHostsDataStore],\r\n    (rootNetsIds, rootHostsIds, networksData, hostsData) => {\r\n        const rootNetsData = []\r\n        for (let id of rootNetsIds) {\r\n            const netData = networksData[id]\r\n            if (netData) {\r\n                netData.id = id\r\n                rootNetsData.push(netData)\r\n            }\r\n        }\r\n        const rootHostsData = []\r\n        for (let id of rootHostsIds) {\r\n            const hostData = hostsData[id]\r\n            if (hostData) rootHostsData.push(hostData)\r\n        }\r\n        return {netsData: rootNetsData, hostsData: rootHostsData}\r\n    }\r\n)\r\n\r\nexport const getRootIds = createSelector(\r\n    [getRootNetsIds, getRootHostsIds],\r\n    (netsIds, hostsIds) => {\r\n        return {netsIds: netsIds, hostsIds: hostsIds}\r\n    }\r\n)\r\n\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    fas\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    fas\r\n);\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        reducer,\r\n        applyMiddleware(\r\n            thunkMiddleware\r\n        )\r\n    )\r\n}","import {combineReducers} from 'redux'\r\nimport rootElementsIds from './rootElementsIds'\r\nimport netData from './netData'\r\nimport networkElements from './networkElements'\r\nimport hostElements from './hostElements'\r\n\r\nexport default combineReducers({\r\n    rootElementsIds,\r\n    netData,\r\n})\r\n","import {convertToIntArray} from '../helperFunctions'\r\nimport {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    netsIds: [],\r\n    hostsIds: [],\r\n    isFetching: false,\r\n    didInvalidate: false\r\n}\r\n\r\nconst rootElementsIds = (rootElements = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case REQUEST_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            })\r\n        case RECEIVE_ROOT_ELEMENTS_ID:\r\n            const {netsIds, hostsIds} = payload\r\n            return Object.assign({}, rootElements, {\r\n                netsIds: convertToIntArray(netsIds),\r\n                hostsIds: convertToIntArray(hostsIds),\r\n                isFetching: false,\r\n                didInvalidate: false\r\n            })\r\n        case INVALIDATE_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: false,\r\n                didInvalidate: true\r\n            })\r\n        default:\r\n            return rootElements\r\n    }\r\n}\r\nexport default rootElementsIds","import {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n} from '../constants/actions'\r\nimport {convertToIntArray, isItterable} from '../helperFunctions'\r\n\r\nconst initialDataStore = {\r\n    networks: {},\r\n    hosts: {},\r\n}\r\nconst networkElementInitialState = {\r\n    netLocations: {},\r\n    netChildren: [],\r\n    hostChildren: [],\r\n    didInvalidate: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\nconst hostElementInitialState = {\r\n    didInvalidate: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param netData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleNetworkElement = (stateOfElement = networkElementInitialState, actionType, netData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {netId: id, address: ipAddress, netmask, comment, vrfId, vrfName, vrfRd, netLocations, net_children: netChildren, host_children: hostChildren} = netData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                netmask,\r\n                comment,\r\n                vrfId,\r\n                vrfName,\r\n                vrfRd,\r\n                netLocations: JSON.parse(netLocations),\r\n                netChildren: convertToIntArray(netChildren),\r\n                hostChildren: convertToIntArray(hostChildren),\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            return Object.assign({}, stateOfElement, {\r\n                isExpanded: !stateOfElement.isExpanded,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst handleHostElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, ipAddress, comment, macAddress} = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                macAddress,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst netData = (store = initialDataStore, action) => {\r\n    const {type, payload = {}} = action\r\n    const {networks, hosts} = store\r\n\r\n    const {netsIds = [], networksData = {}, hostsIds = [], hostsData = {}, id} = payload\r\n\r\n    const updatedNetworkElements = {}\r\n    const updatedHostElements = {}\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = handleNetworkElement(networks[id], type)\r\n            })\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = handleHostElement(hosts[id], type)\r\n            })\r\n            return Object.assign({}, {networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case RECEIVE_ELEMENTS:\r\n            if (isItterable(networksData)) {\r\n                for (const data of networksData) {\r\n                    const {netId: id} = data\r\n                    updatedNetworkElements[id] = handleNetworkElement(networks[id], type,data)\r\n                }\r\n            }\r\n            if (isItterable(hostsData)) {\r\n                for (const data of hostsData) {\r\n                    const {__id: id} = data\r\n                    updatedHostElements[id] = handleHostElement(hosts[id], type,data)\r\n                }\r\n            }\r\n            return Object.assign({}, {networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            updatedNetworkElements[id] = handleNetworkElement(networks[id], type)\r\n            return Object.assign({}, {networks: Object.assign({}, networks, updatedNetworkElements), hosts})\r\n        default:\r\n            return store\r\n    }\r\n}\r\n\r\nexport default netData\r\n","import {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n} from '../constants/actions'\r\nimport {convertToIntArray} from '../helperFunctions'\r\n\r\nconst initialState = {}\r\nconst initialDataStore = {\r\n    networks: {},\r\n    hosts: {},\r\n}\r\nconst networkElementInitialState = {\r\n    ipAddress: \"\",\r\n    comment: \"\",\r\n    netChildren: [],\r\n    hostChildren: [],\r\n    didInvalidate: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\nconst hostElementInitialState = {\r\n    ipAddress: \"\",\r\n    comment: \"\",\r\n    didInvalidate: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param netData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleNetworkElement = (stateOfElement = networkElementInitialState, actionType, netData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, address: ipAddress, comment, net_children: netChildren, host_children: hostChildren} = netData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                netChildren: convertToIntArray(netChildren),\r\n                hostChildren: convertToIntArray(hostChildren),\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst handleHostElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, ipAddress, comment, macAddress} = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                macAddress,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst dataStore = (store = initialDataStore, action) => {\r\n    const {type, payload} = action\r\n    const {networks, hosts} = store\r\n\r\n    const {netsIds = [], networksData = {}, hostsIds = [], hostsData = {}} = payload\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n        case RECEIVE_ELEMENTS:\r\n            const updatedNetworkElements = {}\r\n            const updatedHostElements = {}\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = handleNetworkElement(networks[id], type,networksData)\r\n            })\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = handleHostElement(hosts[id], type, hostsData)\r\n            })\r\n            return Object.assign({}, {networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        default:\r\n            return store\r\n    }\r\n}\r\n\r\nexport default dataStore\r\n\r\nconst networkElements = (netStore = initialState, action) => {\r\n    const {type, payload} = action\r\n    // if there are not network ids or network data in payload - return netStore\r\n    if (!(payload && (payload.netsIds || payload.networksData))) return netStore\r\n    const {netsIds, networksData} = payload\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            const updatedElements = {}\r\n            netsIds.forEach(id => {\r\n                updatedElements[id] = handleOneElement(netStore[id], type)\r\n            })\r\n            return Object.assign({}, netStore, updatedElements)\r\n        case RECEIVE_ELEMENTS:\r\n            const receivedElements = {}\r\n            networksData.forEach(data => {\r\n                const {__id: id} = data\r\n                receivedElements[id] = handleOneElement(netStore[id], type, data)\r\n            })\r\n            return Object.assign({}, netStore, receivedElements)\r\n        default:\r\n            return netStore\r\n    }\r\n}\r\n// export default networkElements","import {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n} from '../constants/actions'\r\nimport {convertToIntArray} from '../helperFunctions'\r\n\r\nconst initialState = {}\r\nconst hostElementInitialState = {\r\n    ipAddress: \"\",\r\n    comment: \"\",\r\n    didInvalidate: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param hostData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleOneElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, ipAddress, comment, macAddress} = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                macAddress,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst hostElements = (hostStore = initialState, action) => {\r\n    const {type, payload} = action\r\n    // if there are not hosts id or host data in payload - return netStore\r\n    if (!(payload && (payload.hostsIds || payload.hostsData))) return hostStore\r\n    const {hostsIds, hostsData} = payload\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            const updatedElements = {}\r\n            hostsIds.forEach(id => {\r\n                updatedElements[id] = handleOneElement(hostStore[id], type)\r\n            })\r\n            return Object.assign({}, hostStore, updatedElements)\r\n        case RECEIVE_ELEMENTS:\r\n            const receivedElements = {}\r\n            hostsData.forEach(data => {\r\n                const {__id: id} = data\r\n                receivedElements[id] = handleOneElement(hostStore[id], type, data)\r\n            })\r\n            return Object.assign({}, hostStore, receivedElements)\r\n        default:\r\n            return hostStore\r\n    }\r\n}\r\nexport default hostElements","export const REQUEST_ROOT_ELEMENTS_ID = 'REQUEST_ROOT_ELEMENTS_ID'\r\nexport const RECEIVE_ROOT_ELEMENTS_ID = 'RECEIVE_ROOT_ELEMENTS_ID'\r\nexport const INVALIDATE_ROOT_ELEMENTS_ID = 'INVALIDATE_ROOT_ELEMENTS_ID'\r\n\r\nexport const REQUEST_ELEMENTS = 'REQUEST_ELEMENTS'\r\nexport const RECEIVE_ELEMENTS = 'RECEIVE_ELEMENTS'\r\nexport const INVALIDATE_ELEMENTS = 'INVALIDATE_ELEMENTS'\r\n\r\nexport const NET_ITEM_TOGGLE_EXPAND_COLLAPSE = 'NET_ITEM_TOGGLE_EXPAND_COLLAPSE'","import check from 'check-types'\r\n/**\r\n * convert string to int array and return items that >= 0\r\n * @param dataString\r\n * @returns {Array}\r\n */\r\nexport function convertToIntArray(dataString) {\r\n    if (check.array(dataString)) return dataString\r\n    if (!check.string(dataString)) return []\r\n\r\n    const idArray = dataString.split(\",\")\r\n    const filteredIds = []\r\n    for (let id of idArray) {\r\n        id = parseInt(id.trim(), 10)\r\n        if (id >= 0) filteredIds.push(id)\r\n    }\r\n    return filteredIds\r\n}\r\n\r\nexport function isItterable(obj) {\r\n    // checks for null and undefined\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    return typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\nexport function isDebug() {\r\n    return !!window.ipamDebug\r\n}\r\n"],"sourceRoot":""}