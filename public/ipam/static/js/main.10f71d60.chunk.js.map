{"version":3,"sources":["img/logo_brs_small.png","components/AppNavbar/navBar.module.css","components/App/appContext.js","components/App/styles.js","components/App/index.js","components/AppNavbar/index.js","components/AppNavbar/URLs.js","constants/actions.js","constants/IpamTable.js","actions/netItems.js","actions/rootElementsIds.js","actions/filter.js","components/Table/Theme/Utils/index.js","components/Table/TableContext/index.js","components/Table/tableConstants.js","components/Table/Column/index.js","components/Table/Row/index.js","components/Table/Header/index.js","components/Table/Body/index.js","components/Table/TableFooter/index.js","components/Table/Footer/index.js","components/Table/Pagination/selectReactCustomStyle.js","components/Table/Pagination/paginationConstants.js","components/Table/Theme/index.js","components/Table/Pagination/index.js","components/Table/Pagination2/styles.js","components/Table/Pagination2/index.js","components/Table/Pagination3/styles.js","components/Table/Pagination3/index.js","components/Table/jssInstance.js","components/Table/fontAwesome/faLibrary.js","components/Table/index.js","components/IpamTable/NetRecordRow/styles.js","components/IpamTable/NetRecordRow/index.js","components/IpamTable/HostRecordRow/styles.js","components/IpamTable/HostRecordRow/index.js","components/IpamTable/ChildrenRowsContainer/index.js","components/IpamTable/RowsContainer/index.js","components/IpamTable/selectors/index.js","components/FilterFactory/SimpleSearch/constants.js","components/FilterFactory/SimpleSearch/index.js","components/FilterFactory/index.js","components/IpamTable/index.js","components/fontAwesome/faLibrary.js","helperFunctions/index.js","reducer/rootElementsIds.js","reducer/netData.js","reducer/filter.js","reducer/index.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","customHeader","AppContext","React","createContext","styles","app","height","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","msGridColumns","msGridRows","header","gridArea","msGridRow","msGridColumn","body","overflowY","footer","cssSheet","create","preset","createStyleSheet","attach","App","appRefs","_this2","this","css","classes","react_default","a","createElement","className","ref","el","appContext","Provider","value","props","children","Component","Header","_Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this3","Consumer","_ref","Body","_Component3","_this4","_ref2","Footer","_Component4","_this5","_ref3","imgStyle","width","AppNavbar","react_bootstrap_es","fluid","Brand","href","src","logo","style","alt","eventKey","title","id","pullRight","divider","REQUEST_ROOT_ELEMENTS_ID","RECEIVE_ROOT_ELEMENTS_ID","INVALIDATE_ROOT_ELEMENTS_ID","REQUEST_ELEMENTS","RECEIVE_ELEMENTS","INVALIDATE_ELEMENTS","NET_ITEM_TOGGLE_EXPAND_COLLAPSE","NET_ITEMS_EXPAND","UPDATE_NET_ITEMS","SELECT_NET_ITEMS","DESELECT_NET_ITEMS","SELECT_HOST_ITEMS","DESELECT_HOST_ITEMS","BASE_URL","protocol","window","location","hostname","port","concat","URL_REQUEST_ROOT_ELEMENTS_ID","URL_REQUEST_NET_ELEMENTS_BY_ID","URL_REQUEST_HOST_ELEMENTS_BY_ID","URL_FILTERED_SEARCH","requestElements","netsIds","hostsIds","type","payload","receiveElements","networksData","hostsData","updateNetItems","itemsState","getInvalidatedData","store","elementsIds","length","filter","didInvalidate","fetchElementsIfNeeded","_ref4","dispatch","getState","filteredNetsIds","netData","networks","filteredHostsIds","hosts","_ref5","_ref6","asyncToGenerator","regenerator_default","mark","_callee2","requestsArray","netsFormData","netsDataRequest","hostsFormData","hostsDataRequest","pArray","fetchResult","result","wrap","_context2","prev","next","FormData","append","Request","mode","method","push","abrupt","map","_ref7","_callee","request","response","_context","fetch","sent","json","stop","_x2","Promise","all","reduce","acc","assign","t0","console","log","message","_x","fetchNetData","receiveRootElementsId","data","fetchRootElementsId","rootElementsIds","headers","Headers","Content-Type","prevIdx","setFilter","searchResult","setCursor","position","backupNetItems","showFilteredItem","idx","_getState","itemList","netIdBackupList","cursor","hostIdBackupList","hostItemsBackup","netItemsBackup","currentItem","prewItem","undefined","check","not","object","rec_type","ip","ip_path","path","string","split","item","parseInt","netPathIds","toConsumableArray","restoreNetIdList","netId","includes","restBackupNetIdList","backupNetIdList","netItemsForRestoring","itemsIds","forEach","itemId","_filter$netItemsBacku","isSelected","isExpanded","netItemsFilterStoreSlice","netItemsForBackuping","_netItemsBackup$itemI","_netData$networks$ite","netItemsDataSlice","emptyObject","deselectNetItems","deselectHostItems","selectNetItems","selectHostItems","color","Color","rgb","toString","darkenColor","ratio","darken","lightenColor","lighten","TableContext","tableConnect","_PureComponent","WithTableContext","_this","tableContext","PureComponent","TableProvider","DEFAULT_TABLE_STYLE","DEFAULT_VALUES","fetchData","_method","resolve","bodyDataKey","footerDataKey","DEFAULT_CSS_CLASS_NAMES","Column","innerStyles","_this$props","index","minWidth","maxWidth","fixed","accessor","filterable","sortable","_this$props$tableCont","columnsParams","dimensions","columnsSizes","_this$props2","cssClasses","isHeader","writeParams","joinCss","saveColumnParams","join","defaultProps","padding","changeWidth","order","Row","jssSheet","isFooter","tableHeaderRowDc","tableFooterRowDc","tableBodyRowDc","selectedRow","rowId","rowRef","injectedProps","filterComponentsByType","createRowRef","data-id","scrollSz","scrollBodySz","tableInnerStyles","table","tableHeaderSz","headerInnerStyles","columnsCss","rows","lastRow","columns","column","columnClasses","innerCss","columnClass","columnSizeClass","columnDecoClass","cloneElement","buildHeaderRows","tbodyInnerStyles","tableBody","tableBodyDc","tableBodySz","parseData","array","rowData","rowIndex","Table_Row","colIndex","Table_Column","buildBodyHeader","cssClass","bodyref","tbodyRef","_this$props$tableCont2","formBodyData","hideHeader","TableFooter","tfootInnerStyles","tableFooter","tableFooterDc","childrenWrapper","Children","count","buildTableFooterHeader","_this$props$tableCont3","footerContainer","footerContainerDc","pagination","customStyles","option","base","state","objectSpread","container","control","minHeight","dropdownIndicator","input","margin","DEFAULT_VALUE_INDEX","STYLE","SELECT_OPTIONS","label","hexCode","tableBgColor","tableTextColor","headerBgColor","headerTextColor","bodyBgColor","bodyTextColor","tableFooterBgColor","tableFooterTextColor","footerBgColor","footerTextColor","footerIconColor","disabledColor","border","stripedColorFactor","hoverColorFactor","paddingHeaderCell","paddingBodyCell","paddingTableFooterCell","selectedRowBgColor","selectedRowTextColor","justifyContent","alignItems","PAGINATION","& .rowsOnPage","containerDc","fontSize","backgroundColor","pageNumber","& input","pageNumberDc","borderRadius","disabled","theme","navButton","Pagination","defaultValueRecordsOnPage","selectDefaultValueIndex","selectOptions","currentPage","pageNumberInput","totalPages","rowsOnPage","pageNumberBlock","onChange","onChangePageNumberBlock","onKeyUp","onKeyUpPageNumberBlock","e","target","setState","prevState","keyCode","onChangeSelect","opt","onClickNextPage","newPage","String","onClickPrevPage","onClickFirstPage","onClickLastPage","selectProps","options","defaultValue","menuPlacement","_this$state","onClick","index_es","icon","react_select_esm","shareState","updateData","selectWidth","injectSheet","Pagination2","prevItemList","itemNumberInput","lastItemIdx","currentItemIdx","resetState","currentItemList","updateCurrentItemInput","filterCursor","currentNumberBlock","setFilterCursor","newState","_this$props$filterIte","filterItemList","_this$props$filterIte2","current","Pagination3","isVisible","itemsList","updateState","newItemList","onNewItemsList","onHideFilter","listLength","filteredItemsList","inputListLength","newCurrent","jss","library","add","faFastBackward","faBackward","faForward","faFastForward","faSquare","faCheck","Table","tableBodyData","tableFooterData","tableRefs","createRef","bodyContainer","scroll","cellWidth","bodyCellWidth","tableStyles","flexDirection","boxSizing","& table, & thead, & tbody, & tfoot, & tr, & th, & td","tableContainer","flexGrow","overflowX","flexShrink","tableHeaderBodyContainer","flexBasis","tableFooterContainer","tableHeaderContainer","tableBodyContainer","tableLayout","tableHeader","tableContainerDc","tableBodyContainerDc","& th","&:nth-child(odd)","bodyStriped","& td","&:hover","containerSz","tableBodyContainerSz","tableFooterContainerSz","& tr","link","updateColumnsSizesInDOM","_this$tableContext","columnSet","getRule","prop","columnsWidth","updateDimensions","_this$tableContext2","containerWidth","clientWidth","sumOfMinWidth","sum","scrollSize","freeSpace","Math","trunc","numberOfExtendableColumns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","spacePerColumn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","additionWidth","updateColumns","states","parseFetchedResult","t1","name","cssStyles","scrollPosition","scrollbarSizeLoad","scrollSizes","scrollbarWidth","scrollbarHeight","component","injectIndex","child","Error","hdChildren","lastRowChildren","columnCssPrefix","columnSizeCssPrefix","columnDecoCssPrefix","_this2$jssSheet$addRu","params","addRules","defineProperty","alignment","offset","row","bodyXY","getBoundingClientRect","rowXY","scrollBy","y","element","yScroll","box","toLowerCase","top","bottom","setColumnsCss","react_scrollbar_size_default","onLoad","targetRow","addEventListener","scrollAt","tabRefs","prevProps","removeEventListener","innerCssClasses","extCssClasses","nonEmptyString","Caption","bordered","isStretch","LVL_INDENT_WIDTH","lvlBlock","marginRight","NetRecordRow","lvlIndent","lvl","ipAddress","netmask","comment","vrfName","netLocations","netChildren","hostChildren","isFetching","toggleIconHandler","locations","_arr","entries","_i","slicedToArray","HostRecordRow","ChildrenRowsContainer","IpamTable_RowsContainer","RowsContainer","childrenNetsIds","childrenHostsIds","netsData","netRows","Fragment","IpamTable_NetRecordRow","IpamTable_ChildrenRowsContainer","hostRows","IpamTable_HostRecordRow","updateDataIfNeeded","connectAdvanced","ownProps","itemData","getRootNetsIds","getRootHostsIds","getFilterItemList","getFilterCursor","getRootIds","createSelector","rootNetsIds","rootHostsIds","rootNetsData","rootHostsData","hostData","getFilterResults","MIN_SEARCH_LENGTH","SimpleSearch","minSearchLength","searchBy","accessorList","statement","defaultStatement","timerId","isEmpty","filterState","updateParentState","updateFilterState","onChangeHandler","placeholder","clearTimeout","setTimeout","minLengthForSearch","FilterFactory","filtersStore","listeners","statementSet","=","!=",">",">=","<","<=","beginWith","endWith","empty","notEmpty","subscribe","callBack","function","listenerId","unsubscribe","listenerID","listener","createFilter","filterType","filterProps","keys","indexOf","filterId","FilterFactory_SimpleSearch","propTypes","IpamTable","factory","onChangeFiltersState","filterStatements","updateFilterStore","_response$data$search","axios","post","hideUnusedRows","renderBodyData","_data$netsIds","_data$hostsIds","fact","components_Table","Table_Header","Table_Body","Table_Footer","Table_Pagination3","showCurrentFilteredItem","restoreStateFromFilter","forceUpdateRootItems","rootnetsIds","rootHostsId","_callee3","_getState$rootElement","_context3","_x4","_x5","forceUpdateRootIds","_callee4","_context4","_x6","_x7","_getState2","selectedNets","selectedHosts","nonEmptyObject","_getRootIds","nextResult","filterStore","isEqual","fas","convertToIntArray","dataString","idArray","filteredIds","trim","isItterable","obj","initialState","rootElements","action","initialDataStore","networkElementInitialState","hostElementInitialState","handleNetworkElement","stateOfElement","actionType","address","vrfId","vrfRd","net_children","host_children","JSON","parse","handleHostElement","__id","macAddress","selectItem","cloneDeep","deselectItem","_action$payload","_payload$netsIds","_payload$networksData","_payload$hostsIds","_payload$hostsData","updatedNetworkElements","updatedHostElements","updatedSelectedNets","updatedSelectedHosts","_payload$itemsState","fromStore","initialFilterStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","createStore","reducer","compose","applyMiddleware","thunkMiddleware","render","es","components_App","components_AppNavbar","components_IpamTable","document","getElementById"],"mappings":"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","file":"static/js/main.10f71d60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_brs_small.9f0fd020.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customHeader\":\"navBar_customHeader__1B2rr\"};","import React from 'react'\r\nconst AppContext = React.createContext()\r\nexport default AppContext","const styles = {\r\n    app: {\r\n        height: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        gridTemplateRows: 'auto 1fr auto',\r\n        gridTemplateAreas: \"'header' 'body' 'footer'\",\r\n\r\n        msGridColumns: '1fr',\r\n        msGridRows: 'auto 1fr auto',\r\n    },\r\n    header: {\r\n        gridArea: 'header',\r\n\r\n        msGridRow: 1,\r\n        msGridColumn: 1\r\n    },\r\n    body: {\r\n        gridArea: 'body',\r\n        overflowY: 'auto',\r\n        msGridRow: 2,\r\n        msGridColumn: 1,\r\n    },\r\n    footer: {\r\n        gridArea: 'footer',\r\n\r\n        msGridRow: 3,\r\n        msGridColumn: 1\r\n    }\r\n}\r\nexport default styles","import React, {Component} from 'react'\r\nimport AppContext from './appContext'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\nimport styles from './styles'\r\n\r\nimport '../../globalStyles/bootstrap/custBootstrap.scss'\r\n\r\nconst jss = create(preset())\r\nconst cssSheet = jss\r\n    .createStyleSheet(styles)\r\n    .attach()\r\n\r\nclass App extends Component{\r\n    appRefs = {\r\n        app: null,\r\n        header: null,\r\n        body: null,\r\n        footer: null\r\n    }\r\n\r\n    render() {\r\n        const {classes: css} = cssSheet\r\n        return (\r\n            <div className={css.app} ref={el => this.appRefs.app = el}>\r\n                <AppContext.Provider value={{\r\n                    appRefs: this.appRefs,\r\n                    css\r\n                }}>\r\n                    {this.props.children}\r\n                </AppContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n}\r\n\r\nApp.Header = class Header extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.header} ref={el => appRefs.header = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Body = class Body extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.body} ref={el => appRefs.body = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Footer = class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.footer} ref={el => appRefs.footer = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    appRefs: PropTypes.shape({\r\n        app: PropTypes.node,\r\n        header: PropTypes.node,\r\n        body: PropTypes.node,\r\n        footer: PropTypes.node\r\n    })\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {Navbar, Nav, NavItem, NavDropdown, MenuItem} from 'react-bootstrap'\r\nimport logo from '../../img/logo_brs_small.png'\r\nimport styles from './navBar.module.css'\r\n// import CSSModules from 'react-css-modules'\r\nimport * as URL from './URLs'\r\n\r\nconst imgStyle = {\r\n    width: 38\r\n}\r\n\r\nconst AppNavbar = () => {\r\n    return (\r\n        <Navbar fluid>\r\n            <Navbar.Header>\r\n                <Navbar.Brand className={styles.customHeader} >\r\n                    <a href={URL.root}><img src={logo} style={imgStyle} alt=\"img\"/></a>\r\n                </Navbar.Brand>\r\n            </Navbar.Header>\r\n\r\n            <Nav>\r\n                <NavItem eventKey={1} href={URL.offices}>\r\n                    Офисы\r\n                </NavItem>\r\n                <NavItem eventKey={2} href={URL.devices}>\r\n                    Оборудование\r\n                </NavItem>\r\n                <NavDropdown eventKey={3} title=\"IP Planing\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={3.1} href={URL.ip_ipam}>IPAM</MenuItem>\r\n                </NavDropdown>\r\n                <NavItem eventKey={4} href={URL.reports}>\r\n                    Reports\r\n                </NavItem>\r\n                <NavDropdown eventKey={5} title=\"Phone Reports\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={5.1} href={URL.reportPhoneByModels}>По моделям</MenuItem>\r\n                    <MenuItem eventKey={5.2} href={URL.reportPhoneByClusters}>По кластерам</MenuItem>\r\n                    <MenuItem eventKey={5.3} href={URL.reportPhoneByNotUsed}>По неиспользуемым</MenuItem>\r\n                </NavDropdown>\r\n\r\n            </Nav>\r\n\r\n            <Nav pullRight>\r\n                <NavDropdown eventKey={6} title=\"Справочники\" id=\"basic-nav-dropdown-2\">\r\n                    <MenuItem eventKey={6.1} href={URL.dictRegions}>Регионы</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictCities}>Города</MenuItem>\r\n                    <MenuItem eventKey={6.3} href={URL.dictOffice_stats}>Статусы офисов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.dictDevices}>Оборудование</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictPortTypes}>Типы портов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.HwLogs}>Логи Hardware</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.PhonesLogs}>Логи Phones</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.4} href={URL.dictVRFs}>VRF</MenuItem>\r\n                    <MenuItem eventKey={6.4} href={URL.dictNetworksTable}>Networks(Table)</MenuItem>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default AppNavbar\r\n","export const root = \"/\"\r\nexport const offices = \"/locations\"\r\nexport const devices = \"/device/info\"\r\nexport const ip_ipam = \"/network/ipam\"\r\nexport const reports = \"/report/new\"\r\n\r\nexport const reportPhoneByModels = \"/report/phoneStatsReport\"\r\nexport const reportPhoneByClusters = \"/report/phoneStatsByClustersReport\"\r\nexport const reportPhoneByNotUsed = \"/report/phoneStatsByNotUsedReport\"\r\n\r\nexport const dictRegions = \"/admin/regions\"\r\nexport const dictCities = \"/admin/cities\"\r\nexport const dictOffice_stats = \"/admin/officeStatuses\"\r\nexport const dictDevices = \"/admin/devparts\"\r\nexport const dictPortTypes = \"/admin/portTypes\"\r\nexport const dictVRFs = \"/admin/vrf\"\r\nexport const dictNetworksTable = \"/admin/NetworksTab\"\r\n\r\nexport const HwLogs = \"/logs\"\r\nexport const PhonesLogs = \"/logs/phones\"\r\n","export const REQUEST_ROOT_ELEMENTS_ID = 'REQUEST_ROOT_ELEMENTS_ID'\r\nexport const RECEIVE_ROOT_ELEMENTS_ID = 'RECEIVE_ROOT_ELEMENTS_ID'\r\nexport const INVALIDATE_ROOT_ELEMENTS_ID = 'INVALIDATE_ROOT_ELEMENTS_ID'\r\n\r\nexport const REQUEST_ELEMENTS = 'REQUEST_ELEMENTS'\r\nexport const RECEIVE_ELEMENTS = 'RECEIVE_ELEMENTS'\r\nexport const INVALIDATE_ELEMENTS = 'INVALIDATE_ELEMENTS'\r\n\r\nexport const NET_ITEM_TOGGLE_EXPAND_COLLAPSE = 'NET_ITEM_TOGGLE_EXPAND_COLLAPSE'\r\nexport const NET_ITEMS_EXPAND = 'NET_ITEMS_EXPAND'\r\nexport const UPDATE_NET_ITEMS = 'UPDATE_NET_ITEMS'\r\n\r\n\r\nexport const SET_FILTER = 'SET_FILTER'\r\nexport const SET_CURSOR = 'SET_CURSOR'\r\nexport const SHOW_RESULT_ITEM = 'SHOW_RESULT_ITEM'\r\nexport const BACKUP_NET_ITEMS = 'BACKUP_NET_ITEMS'\r\n// export const REFRESH_STATE_AND_BACKUP = 'REFRESH_STATE_AND_BACKUP'\r\n\r\nexport const SELECT_NET_ITEMS = 'SELECT_NET_ITEMS'\r\nexport const DESELECT_NET_ITEMS = 'DESELECT_NET_ITEMS'\r\nexport const SELECT_HOST_ITEMS = 'SELECT_HOST_ITEMS'\r\nexport const DESELECT_HOST_ITEMS = 'DESELECT_HOST_ITEMS'\r\n\r\n","const DEVELOPED_BASE_URL = 'netcmdb-loc.rs.ru:8082'\r\n// console.log('location ', window.location)\r\n// const DEVELOPED_BASE_URL = 'netcmdb.rs.ru'\r\nconst BASE_URL = (() => {\r\n    const protocol = window.location.protocol\r\n    const hostname = window.location.hostname\r\n    const port = window.location.port\r\n    const developMode = hostname === 'localhost'\r\n    return developMode ? `${protocol}//${DEVELOPED_BASE_URL}` : `${protocol}//${hostname}${port==='' ? '' : ':'}${port}`\r\n})()\r\n\r\nexport const URL_REQUEST_ROOT_ELEMENTS_ID = `${BASE_URL}/networks/rootElements.json`\r\nexport const URL_REQUEST_NET_ELEMENTS_BY_ID = `${BASE_URL}/networks/netElementsByIds.json`\r\nexport const URL_REQUEST_HOST_ELEMENTS_BY_ID = `${BASE_URL}/networks/hostElementsByIds.json`\r\nexport const URL_FILTERED_SEARCH = `${BASE_URL}/networks/filteredSearch.json`\r\n","// import {convertToIntArray, isDebug} from '../helperFunctions'\r\n\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS\r\n} from '../constants/actions'\r\nimport {\r\n    URL_REQUEST_NET_ELEMENTS_BY_ID, //should return JSON object like {netData: [array of data for each net ID]}\r\n    URL_REQUEST_HOST_ELEMENTS_BY_ID, //should return JSON object like {hostData: [array of data for each net ID]}\r\n} from '../constants/IpamTable'\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of int ID], hostsIds: [array of int ID}\r\n * @returns {{type: string, payload: {ids: *}}}\r\n */\r\nexport function requestElements({netsIds, hostsIds}) {\r\n    return {type: REQUEST_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function invalidateElements({netsIds, hostsIds}) {\r\n    return {type: INVALIDATE_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function receiveElements({networksData, hostsData}) {\r\n    return {type: RECEIVE_ELEMENTS, payload: {networksData, hostsData}}\r\n}\r\n\r\nexport function netItemToggleExpandCollapse(netItemId) {\r\n    return {type: NET_ITEM_TOGGLE_EXPAND_COLLAPSE, payload: {id: netItemId}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function selectNetItems(netsIds) {\r\n    return {type: SELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\nexport function deselectNetItems(netsIds) {\r\n    return {type: DESELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\n\r\nexport function updateNetItems(itemsState) {\r\n    return {type: UPDATE_NET_ITEMS, payload: {itemsState}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} hostsIds\r\n * @return {{type: string, payload: {hostsIds: number[]}}}\r\n */\r\nexport function selectHostItems(hostsIds) {\r\n    return {type: SELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\nexport function deselectHostItems(hostsIds) {\r\n    return {type: DESELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function netItemsExpand(netsIds) {\r\n    return {type: NET_ITEMS_EXPAND, payload: {netsIds}}\r\n}\r\n\r\n\r\n\r\n/**\r\n * check each element according elementsId in a given part of store and return array of ids that should be update\r\n * @param store object\r\n * @param elementsIds array\r\n */\r\nfunction getInvalidatedData(store, elementsIds) {\r\n    if (!elementsIds || elementsIds.length === 0) return []\r\n    return elementsIds.filter(id => {\r\n        return !store[id] || store[id].didInvalidate\r\n    })\r\n}\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of ids], hostsIds: [array of ids]}\r\n * @returns function\r\n */\r\nexport function fetchElementsIfNeeded({netsIds, hostsIds}) {\r\n    return (dispatch, getState) => {\r\n        const filteredNetsIds = getInvalidatedData(getState().netData.networks ,netsIds)\r\n        const filteredHostsIds = getInvalidatedData(getState().netData.hosts ,hostsIds)\r\n        if (filteredNetsIds.length > 0 || filteredHostsIds.length > 0) {\r\n            dispatch(fetchNetData({netsIds: filteredNetsIds, hostsIds: filteredHostsIds}))\r\n        }\r\n    }\r\n}\r\n\r\nfunction fetchNetData({netsIds, hostsIds}) {\r\n    return async (dispatch) => {\r\n        dispatch(requestElements({netsIds, hostsIds}))\r\n        const requestsArray = []\r\n        if (netsIds.length > 0) {\r\n            const netsFormData = new FormData()\r\n            netsFormData.append(\"netsIds\", netsIds)\r\n            const netsDataRequest = new Request(URL_REQUEST_NET_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: netsFormData,\r\n            })\r\n            requestsArray.push(netsDataRequest)\r\n        }\r\n        if (hostsIds.length > 0) {\r\n            const hostsFormData = new FormData()\r\n            hostsFormData.append(\"hostsIds\", hostsIds)\r\n            const hostsDataRequest = new Request(URL_REQUEST_HOST_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: hostsFormData,\r\n            })\r\n            requestsArray.push(hostsDataRequest)\r\n        }\r\n        if (requestsArray.length === 0) return\r\n\r\n        try {\r\n            const pArray = requestsArray.map(async request => {\r\n                const response = await fetch(request)\r\n                return response.json()\r\n            })\r\n            const fetchResult = await Promise.all(pArray)\r\n            const result = fetchResult.reduce((acc, result) => {return Object.assign(acc, result)}, {})\r\n            dispatch(receiveElements(result))\r\n        } catch (error) {\r\n            console.log('---FETCH ELEMENTS ERROR!: ', error.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded} from './netItems'\r\nimport {URL_REQUEST_ROOT_ELEMENTS_ID} from '../constants/IpamTable'\r\n\r\nexport function requestRootElementsId() {\r\n    return {type: REQUEST_ROOT_ELEMENTS_ID}\r\n}\r\n\r\nexport function receiveRootElementsId(data) {\r\n    const {netsIds, hostsIds} = data\r\n    return {type: RECEIVE_ROOT_ELEMENTS_ID, payload: {netsIds, hostsIds}}\r\n}\r\nexport function invalidateRootElementsId() {\r\n    return {type: INVALIDATE_ROOT_ELEMENTS_ID}\r\n}\r\nfunction fetchRootElementsId() {\r\n    return async (dispatch) => {\r\n        dispatch(requestRootElementsId())\r\n        const request = new Request(URL_REQUEST_ROOT_ELEMENTS_ID, {\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const response = await fetch(request)\r\n        const {rootElementsIds} = await response.json()\r\n        dispatch(receiveRootElementsId(rootElementsIds))\r\n    }\r\n}\r\nfunction shouldFetchRootElementsId(state) {\r\n    const {rootElements} = state\r\n    return !rootElements || rootElements.didInvalidate\r\n}\r\n\r\nexport function fetchRootElementsIdIfNeeded() {\r\n    return async (dispatch, getState) => {\r\n        if (shouldFetchRootElementsId(getState())) {\r\n            await dispatch(fetchRootElementsId())\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    }\r\n}\r\nexport function forceUpdateRootElements() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        await dispatch(fetchRootElementsId())\r\n        const {rootElementsIds: {netsIds, hostsIds}} = getState()\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n}\r\nexport function forceUpdateRootElementsIds() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        dispatch(fetchRootElementsId())\r\n    }\r\n}","import check from 'check-types'\r\nimport {\r\n    SET_FILTER,\r\n    SET_CURSOR,\r\n    BACKUP_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded, netItemsExpand, selectNetItems, deselectNetItems, selectHostItems, deselectHostItems, updateNetItems} from '../actions/netItems'\r\n\r\nexport const setFilter = ({searchResult}) => ({type: SET_FILTER, payload: {searchResult}})\r\nexport const setCursor = (position) => ({type: SET_CURSOR, payload: {position}})\r\nexport const backupNetItems = (itemsState) => ({type: BACKUP_NET_ITEMS, payload: {itemsState}})\r\n// export const refreshStateAndBackup = (backupList, restoreList) => ({type: REFRESH_STATE_AND_BACKUP, payload: {backupList, restoreList}})\r\n\r\nconst netItemsDataSlice = (itemsIds, store) => {\r\n    const {netData, filter: {netItemsBackup}} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        } else {\r\n            const {isSelected, isExpanded} = netData.networks[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n\r\n    })\r\n    return result\r\n}\r\nconst netItemsFilterStoreSlice = (itemsIds, store) => {\r\n    const {filter} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (filter.netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = filter.netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n    })\r\n    return result\r\n}\r\nconst hostItemsDataSlice = (itemsIds, store) => {\r\n    const {netData} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        const {id, isSelected, isExpanded} = netData.hosts[itemId]\r\n        result[id] = {isSelected, isExpanded}\r\n    })\r\n    return result\r\n}\r\n\r\nexport const showFilteredItem = ((prevItemList, prevIdx) => (idx) => {\r\n    // if (prevIdx === idx) return () => {}\r\n\r\n    return (dispatch, getState) => {\r\n        const {filter, netData} = getState()\r\n        const {itemList, cursor, hostIdBackupList, netIdBackupList, hostItemsBackup, netItemsBackup} = filter\r\n        if (!itemList || (itemList.length && itemList.length === 0)) return\r\n        const currentItem = itemList[idx]\r\n        const prewItem = prevIdx !==undefined ? itemList[prevIdx] : {}\r\n\r\n        if (check.not.object(currentItem)) return\r\n\r\n        const {id, ip, rec_type, ip_path} = currentItem\r\n        const path = check.string(ip_path) ? ip_path.split(',').map((item) => parseInt(item)) : []\r\n        const netPathIds = [...path]\r\n        const hostsIds = []\r\n        if (rec_type === 'network') {\r\n            netPathIds.push(id)\r\n        } else if (rec_type === 'host') {\r\n            hostsIds.push(id)\r\n        }\r\n        dispatch(fetchElementsIfNeeded({netsIds: netPathIds, hostsIds}))\r\n        //backup states\r\n        const restoreNetIdList = netIdBackupList.filter(netId => !netPathIds.includes(netId))\r\n        const restBackupNetIdList = netIdBackupList.filter(netId => !restoreNetIdList.includes(netId))\r\n        const backupNetIdList = netPathIds.filter(netId => !restBackupNetIdList.includes(netId)).concat(restBackupNetIdList)\r\n\r\n        const netItemsForRestoring = netItemsFilterStoreSlice(restoreNetIdList, getState())\r\n        const netItemsForBackuping = netItemsDataSlice(backupNetIdList, getState())\r\n        if (check.not.emptyObject(netItemsForRestoring)) {\r\n            dispatch(updateNetItems(netItemsForRestoring))\r\n        }\r\n        if (check.not.emptyObject(netItemsForBackuping)) {\r\n            dispatch(backupNetItems(netItemsForBackuping))\r\n        }\r\n        dispatch(netItemsExpand(path))\r\n        if (prewItem && prewItem.id !== undefined) {\r\n            if (prewItem.rec_type === 'network') {\r\n                dispatch(deselectNetItems([prewItem.id]))\r\n            } else if (prewItem.rec_type === 'host') {\r\n                dispatch(deselectHostItems([prewItem.id]))\r\n            }\r\n        }\r\n        if (rec_type === 'network') {\r\n            dispatch(selectNetItems([id]))\r\n        } else if (rec_type === 'host') {\r\n            dispatch(selectHostItems([id]))\r\n        }\r\n\r\n        prevIdx = idx\r\n    }\r\n})()\r\n\r\nexport function restoreSavedStates () {\r\n    return (dispatch, getState) => {\r\n        const {filter, netData} = getState()\r\n        const {hostIdBackupList, netIdBackupList, hostItemsBackup, netItemsBackup} = filter\r\n        const {selectedNets, selectedHosts} = netData\r\n        // if (selectedNets.length > 0) dispatch(deselectNetItems(selectedNets))\r\n        // if (selectedHosts.length > 0) dispatch(deselectHostItems(selectedHosts))\r\n        if (check.nonEmptyObject(netItemsBackup)) {\r\n            // console.log('restoreSavedStates')\r\n            dispatch(updateNetItems(netItemsBackup))\r\n            dispatch(backupNetItems({}))\r\n        }\r\n    }\r\n}\r\n","import Color from 'color'\r\n\r\nconst color = (color) => {\r\n    return Color(color).rgb().toString()\r\n}\r\nconst darkenColor = (color, ratio) => {\r\n    return Color(color).darken(ratio).rgb().toString()\r\n}\r\nconst lightenColor = (color, ratio) => {\r\n    return Color(color).lighten(ratio).rgb().toString()\r\n}\r\n\r\nexport {color, darkenColor, lightenColor}","import React, {PureComponent} from 'react'\r\nconst TableContext = React.createContext()\r\n\r\nexport const tableConnect = (Component)  => {\r\n    return class WithTableContext extends PureComponent {\r\n        render() {\r\n            return (<TableContext.Consumer>\r\n                {tableContext => <Component {...this.props} tableContext={tableContext} />}\r\n            </TableContext.Consumer>)\r\n        }\r\n    }\r\n}\r\n// export const tableConnect = (Component)  => {\r\n//     return function connectedComponent(props) {\r\n//         return (<TableContext.Consumer>\r\n//             {tableContext => <Component {...props} tableContext={tableContext} />}\r\n//         </TableContext.Consumer>)\r\n//     }\r\n// }\r\n\r\nexport const TableProvider =  TableContext.Provider\r\n\r\n","export const DEFAULT_TABLE_STYLE = {\r\n    columnPadding: '5px',\r\n\r\n    tableWidth: '100%',\r\n    tableMinWidth: '400px',\r\n    tableHeight: '100%',\r\n    tableMinHeight: '300px',\r\n\r\n    bordered: true,\r\n    border: '1px solid darkgray',\r\n\r\n    padding: '5px 10px',\r\n\r\n    columnMinWidth: '100px',\r\n    columnMaxWidth: 300,\r\n    scrollWidthPx: 17,\r\n\r\n    backgroundColor: {\r\n        table: '#d9d9d9',\r\n        header: '#d9d9d9',\r\n        body: '#d9d9d9',\r\n        tableFooter: '#d9d9d9',\r\n        footer: '#d9d9d9',\r\n    },\r\n    tablePadding: '10px',\r\n\r\n    pagination: {\r\n        visible: true,\r\n        width: 200\r\n    }\r\n}\r\n\r\nexport const DEFAULT_VALUES = {\r\n    fetchData: {\r\n        method: async () => Promise.resolve([]),\r\n        bodyDataKey: 'body',\r\n        footerDataKey: 'footer'\r\n    }\r\n}\r\n\r\n\r\nexport const DEFAULT_CSS_CLASS_NAMES = {\r\n    // header: 'thead',\r\n    // body: 'tbody',\r\n    // tableFooter: 'tfoot',\r\n    // footer: 'footer',\r\n    // row: 'row',\r\n    column: 'col_',\r\n    columnSz: 'colSz_',\r\n    columnDc: 'colDc_'\r\n}\r\n\r\nexport const CLASS_NAMES = {\r\n    table: 'Table',\r\n    header: 'Header',\r\n    body: 'Body',\r\n    tableFooter: 'TableFooter',\r\n    footer: 'Footer',\r\n    row: 'Row',\r\n    column: 'Column'\r\n}\r\n\r\nexport const CHROME_CONTAINER_PADDING = '17px'\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport {DEFAULT_TABLE_STYLE} from \"../tableConstants\";\r\n\r\nclass Column extends Component {\r\n\r\n    innerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    saveColumnParams() {\r\n        const {index, minWidth, maxWidth, fixed, accessor, filterable, sortable,  tableContext: {columnsParams, dimensions: {columnsSizes}}} = this.props\r\n        columnsSizes[index] = {\r\n            minWidth: parseInt(minWidth),\r\n            width: parseInt(minWidth),\r\n            maxWidth: parseInt(maxWidth),\r\n            fixed,\r\n        }\r\n        columnsParams[index] = {\r\n            accessor,\r\n            filterable,\r\n            sortable\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, cssClasses, children, isHeader, writeParams, tableContext: {joinCss}} = this.props\r\n        const innerStyles = this.innerStyles()\r\n            if (isHeader) {\r\n                if (writeParams) this.saveColumnParams()\r\n                return <th className={joinCss(innerStyles, cssClasses).join(\" \")}>{title ? title : children}</th>\r\n            } else {\r\n                return <td className={joinCss(innerStyles, cssClasses).join(\" \")}>{children}</td>\r\n            }\r\n    }\r\n}\r\n\r\nColumn.propTypes = {\r\n    //from Row\r\n    isHeader: PropTypes.bool, //injected by Row\r\n    //from Header\r\n    writeParams: PropTypes.bool, // for internal use only! if set column have to write its params into tableContext.columnsParams (params like width ...)\r\n    //\r\n    title: PropTypes.string, //if not set will be used children\r\n    accessor: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.string),\r\n        PropTypes.string\r\n    ]),\r\n    minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    padding: PropTypes.string,\r\n    fixed: PropTypes.bool, // fix size of column\r\n    sortable: PropTypes.bool,\r\n    filterable: PropTypes.bool,\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    order: PropTypes.number, //can be used for columns reorder\r\n    index: PropTypes.number, //index number of column in config array\r\n}\r\nColumn.defaultProps = {\r\n    minWidth: DEFAULT_TABLE_STYLE.columnMinWidth,\r\n    maxWidth: DEFAULT_TABLE_STYLE.columnMaxWidth,\r\n    padding: DEFAULT_TABLE_STYLE.columnPadding,\r\n    fixed: false,\r\n    changeWidth: true,\r\n    sortable: false,\r\n    filterable: false,\r\n    order: 0,\r\n}\r\n\r\nexport default tableConnect(Column)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {tableConnect} from '../TableContext'\r\nimport Column from '../Column'\r\n\r\nclass Row extends Component {\r\n    innerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        const {isHeader, isFooter, isSelected} = this.props\r\n        let result = []\r\n        if (!isHeader && !isFooter) {\r\n            result.push(css.tableBodyRowDc)\r\n        } else if (isHeader) {\r\n            result.push(css.tableHeaderRowDc)\r\n        } else if (isFooter) {\r\n            result.push(css.tableFooterRowDc)\r\n        }\r\n        if (isSelected) result.push(css.selectedRow)\r\n        return result\r\n\r\n    }\r\n    rowId = null\r\n\r\n    render() {\r\n        const {isHeader, isFooter, rowRef: rowId} = this.props\r\n        const injectedProps = isHeader ? {isHeader: true, } : (isFooter ? {isFooter: true, } : {})\r\n        const {tableContext: {filterComponentsByType, joinCss, jssSheet: {classes: css}, createRowRef}} = this.props\r\n\r\n        return (\r\n            <tr className={joinCss(this.innerStyles(), this.props.cssClasses).join(\" \")} data-id={rowId} ref={rowId ? createRowRef(rowId) : null}>\r\n                {filterComponentsByType(this.props.children, Column, injectedProps)}\r\n                {isHeader || isFooter ? <td className={css.scrollSz} /> : <td className={css.scrollBodySz} />}\r\n            </tr>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.rowId = this.props.rowId\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log('unmount ', this.rowId)\r\n        //TODO implement removing ref of row in DidUnmount\r\n    }\r\n}\r\n\r\nRow.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    rowId: PropTypes.any, //if exists - invoke createRowRef to create ref\r\n    isSelected: PropTypes.bool,\r\n}\r\nRow.defaultProps = {}\r\n\r\nexport default tableConnect(Row)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n\r\nclass Header extends PureComponent {\r\n\r\n    tableInnerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n    headerInnerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * wrap columns in Row if need\r\n     * join inner css classes with users classes\r\n     *\r\n     * @returns Array array of rows that can be rendered\r\n     */\r\n    buildHeaderRows() {\r\n        const {children, tableContext: {filterComponentsByType, columnsCss, jssSheet, joinCss}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Header lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n\r\n        const rows = filterComponentsByType(children, Row, {isHeader: true})\r\n        if (rows.length > 0) {\r\n        //    add appropriated css classes from columnsParams to each column in last row\r\n            let lastRow = rows[rows.length - 1]\r\n            let columns = filterComponentsByType(lastRow.props.children, Column)\r\n            columns = columns.map(column => {\r\n                const {index} = column.props\r\n                //get css classes for this column from tableContext.columnsParams\r\n                const columnClasses = columnsCss[index]\r\n                const innerCss = [\r\n                    css[columnClasses.columnClass],\r\n                    css[columnClasses.columnSizeClass],\r\n                    css[columnClasses.columnDecoClass],\r\n                ]\r\n                //join with cssClasses of column\r\n                const cssClasses = joinCss(innerCss, column.props.cssClasses)\r\n                return React.cloneElement(column, {cssClasses: cssClasses.join(\" \"), writeParams: true})\r\n            })\r\n            // build new last row and replace it in rows array\r\n            rows[rows.length - 1] = React.cloneElement(\r\n                lastRow,\r\n                {},\r\n                [...columns]\r\n            )\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const {cssClasses, tableContext: {joinCss}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles().join(\" \")}>\r\n                <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n                {this.buildHeaderRows()}\r\n                </thead>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    style: PropTypes.object,\r\n}\r\nHeader.defaultProps = {}\r\n\r\nexport default tableConnect(Header)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport check from 'check-types'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n// import scrollToComponent from 'react-scroll-to-component'\r\n\r\n\r\nclass Body extends PureComponent {\r\n\r\n\r\n    tbodyInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableBody, css.tableBodyDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableBodySz]\r\n    }\r\n\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n    buildBodyHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n        return (<tr>\r\n            {columnsCss.map((column, index) => {\r\n                const cssClass = css[column.columnSizeClass]\r\n                return <th className={cssClass} key={index}>{index}</th>\r\n            })}\r\n        </tr>)\r\n    }\r\n    //\r\n    // scrollIntoView = (node, offset = 0) => {\r\n    //     // console.log('offset', node.scrollIntoView(true))\r\n    //     console.log('offset', this.tbodyRef.current)\r\n    // }\r\n    //\r\n    // scrollToRow = (rowId) => {\r\n    //     const {tableRefs: {rows, bodyContainer}} = this.props.tableContext\r\n    //     const id = rows[rowId]\r\n    //\r\n    //     if (id) {\r\n    //         console.log('--row', ReactDOM.findDOMNode(id.current))\r\n    //         console.log(rowId, ': ', id)\r\n    //         window.rowref = id\r\n    //         window.bodyContainer = bodyContainer\r\n    //         const rowNode = ReactDOM.findDOMNode(id.current)\r\n    //         if (rowNode) {\r\n    //             // this.scrollIntoView(rowNode)\r\n    //             scrollToComponent(id.current)\r\n    //         }\r\n    //     }\r\n    //\r\n    //     console.log('---scroll to row: ', this.props.scrollPosition)\r\n    // }\r\n\r\n    render() {\r\n        window.bodyref = this.tbodyRef\r\n\r\n        const {data, tableContext, tableContext: {jssSheet, joinCss, formBodyData, columnsParams}} = this.props\r\n        const {classes: css} = jssSheet\r\n        return (\r\n                <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                    <thead className={css.hideHeader}>\r\n                    {this.buildBodyHeader()}\r\n                    </thead>\r\n                    <tbody className={joinCss(this.tbodyInnerStyles(tableContext), this.props.cssClasses).join(\" \")}>\r\n                    {data ? formBodyData(data, columnsParams) : this.props.children}\r\n                    </tbody>\r\n                </table>\r\n        )\r\n    }\r\n}\r\n\r\nBody.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    data: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.object\r\n    ]), //data from server\r\n}\r\nBody.defaultProps = {}\r\n\r\nexport default tableConnect(Body)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport check from \"check-types\";\r\n\r\nclass TableFooter extends PureComponent {\r\n    tfootInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableFooter, css.tableFooterDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n\r\n    /**\r\n     * wrap children into Row tag if need\r\n     * @param children\r\n     * @param {function} filterComponentsByType\r\n     * @returns {*}\r\n     */\r\n    childrenWrapper = (children, filterComponentsByType ) => {\r\n        if (React.Children.count(children) === 0) {\r\n            return <Row/>\r\n        }\r\n        const rows = filterComponentsByType(children, Row, {isFooter: true})\r\n        if (rows.length > 0) {\r\n            return rows\r\n        }\r\n        if (rows.length === 0) {\r\n            return (\r\n                <Row isFooter={true} index={0}>{children}</Row>\r\n            )\r\n        } else {\r\n            return <Row/>\r\n        }\r\n    }\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams, jssSheet: {classes: css}}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row isFooter index={rowIndex} key={rowIndex} cssClasses={this.props.cssClasses}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    buildTableFooterHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}, joinCss} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header in tableFooter!\")\r\n            return null\r\n        }\r\n        return (<Row isFooter>\r\n            {columnsCss.map((column, index) => {\r\n                return <Column cssClasses={css[column.columnSizeClass]} key={index}>{index}</Column>\r\n            })}\r\n        </Row>)\r\n    }\r\n\r\n    render() {\r\n        const {data, tableContext, tableContext: {joinCss, jssSheet: {classes}}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={classes.hideHeader}>\r\n                {this.buildTableFooterHeader()}\r\n                </thead>\r\n                <tfoot className={this.tfootInnerStyles(tableContext).join(\" \")}>\r\n                {data ? this.parseData(data) : this.props.children}\r\n                </tfoot>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n}\r\nTableFooter.defaultProps = {}\r\n\r\nexport default tableConnect(TableFooter)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\n\r\nclass Footer extends PureComponent {\r\n    innerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.footerContainer, css.footerContainerDc]\r\n    }\r\n\r\n    render() {\r\n        const {tableContext} = this.props\r\n        return (\r\n            <div className={this.innerStyles(tableContext).join(\" \")}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    pagination: PropTypes.bool\r\n};\r\nFooter.defaultProps = {\r\n    pagination: true\r\n};\r\n\r\nexport default tableConnect(Footer);\r\n","const customStyles = {\r\n    option: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: \"2px 5px\",\r\n        })\r\n    },\r\n    container: (base, state) => {\r\n        return ({\r\n            ...base,\r\n        })\r\n    },\r\n    control: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            minHeight: 15,\r\n        })\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: 0\r\n        })\r\n    },\r\n    input: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            margin: 0,\r\n            padding: 0\r\n        })\r\n    },\r\n}\r\nexport default customStyles","export const DEFAULT_VALUE_INDEX = 2\r\nexport const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 310,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50\r\n}\r\nexport const SELECT_OPTIONS = [\r\n    { value: 10, label: 10 },\r\n    { value: 50, label: 50 },\r\n    { value: 100, label: 100 },\r\n    { value: 200, label: 200 },\r\n    { value: 500, label: 500 },\r\n    { value: -1, label: \"All\" }\r\n]\r\n","import {color, darkenColor, lightenColor} from './Utils'\r\n\r\nconst hexCode = {\r\n    blue:   '#007bff',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1 ',\r\n    pink:   '#e83e8c ',\r\n    red:    '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green:  '#28a745',\r\n    teal:   '#20c997',\r\n    cyan:   '#17a2b8',\r\n    white:    '#fff',\r\n    gray:   '#808080',\r\n    black:    '#010101',\r\n}\r\nconst index = {\r\n\r\n    tableBgColor: color(hexCode.white), //is applied to table container\r\n    tableTextColor: lightenColor(hexCode.black, 0.01), //is applied to table container\r\n\r\n    headerBgColor: color(hexCode.blue),\r\n    headerTextColor: darkenColor(hexCode.white, 0.01),\r\n\r\n    bodyBgColor: darkenColor(hexCode.white, 0.1),\r\n    bodyTextColor: lightenColor(hexCode.black, 0.01),\r\n\r\n    tableFooterBgColor: lightenColor(hexCode.green, 1.3),\r\n    tableFooterTextColor: darkenColor(hexCode.gray, 0.3),\r\n\r\n    footerBgColor: lightenColor(hexCode.blue, 0.4),\r\n    footerTextColor: darkenColor(hexCode.gray, 0.8),\r\n\r\n    footerIconColor: hexCode.black,\r\n\r\n    disabledColor: hexCode.gray,\r\n\r\n    border: `1px solid ${lightenColor(hexCode.gray, 0.4)}`,\r\n\r\n    stripedColorFactor: 0.08,\r\n    hoverColorFactor: 0.2,\r\n\r\n    paddingHeaderCell: [5, 10],\r\n    paddingBodyCell: [5, 10],\r\n    paddingTableFooterCell: [5, 10],\r\n\r\n    selectedRowBgColor: lightenColor(hexCode.yellow, 0.7),\r\n    selectedRowTextColor: darkenColor(hexCode.gray, 0.8)\r\n}\r\n\r\nexport default index","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\nimport customStyles from './selectReactCustomStyle'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport * as PAGINATION from './paginationConstants'\r\nimport theme from '../Theme'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: PAGINATION.STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: PAGINATION.STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: PAGINATION.STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[theme.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: theme.footerIconColor\r\n    },\r\n}\r\n\r\nclass Pagination extends PureComponent {\r\n\r\n    defaultValueRecordsOnPage = () => {\r\n        const {selectDefaultValueIndex} = this.props\r\n        const index = (selectDefaultValueIndex > 0 && selectDefaultValueIndex <= PAGINATION.SELECT_OPTIONS.length) ? selectDefaultValueIndex : PAGINATION.DEFAULT_VALUE_INDEX\r\n        return PAGINATION.SELECT_OPTIONS[index]\r\n    }\r\n\r\n    state = {\r\n        selectOptions: this.props.selectOptions,\r\n        currentPage: 1,\r\n        pageNumberInput: '1',\r\n        totalPages: 99,\r\n        rowsOnPage: this.defaultValueRecordsOnPage().value,\r\n    }\r\n\r\n    pageNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                Page<input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.pageNumberInput}/><span>of {this.state.totalPages}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {pageNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.totalPages)) ? value : prevState.pageNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                pageNumberInput: this.state.pageNumberInput === \"\" ? \"1\" : this.state.pageNumberInput,\r\n                currentPage: this.state.pageNumberInput === \"\" ? 1 : parseInt(this.state.pageNumberInput)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSelect = (opt) => {\r\n        this.setState({rowsOnPage: opt.value})\r\n    }\r\n    onClickNextPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === prevState.totalPages ? prevState.currentPage : prevState.currentPage + 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickPrevPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === 1 ? prevState.currentPage : prevState.currentPage - 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickFirstPage = () => {this.setState(prevState => {\r\n        const newPage = 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickLastPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.totalPages\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const selectProps = {\r\n            styles: customStyles,\r\n            options: this.state.selectOptions,\r\n            defaultValue: this.defaultValueRecordsOnPage(),\r\n            menuPlacement: 'auto'\r\n        }\r\n        const {currentPage, totalPages} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.pageNumberBlock(classes)}\r\n                <div className=\"rowsOnPage\"><Select {...selectProps} onChange={this.onChangeSelect} /></div>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n    }\r\n    componentDidUpdate() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n        this.props.tableContext.updateData()\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    selectWidth: PropTypes.number, //react-select width in px\r\n    selectDefaultValueIndex: PropTypes.number,\r\n    selectOptions: PropTypes.array,\r\n};\r\nPagination.defaultProps = {\r\n    selectWidth: 70,\r\n    selectDefaultValueIndex: PAGINATION.DEFAULT_VALUE_INDEX,\r\n    selectOptions: PAGINATION.SELECT_OPTIONS,\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination2 extends PureComponent {\r\n    state = {\r\n        // currentItemIdx: 1,\r\n        itemNumberInput: '1',\r\n        lastItemIdx: 0,\r\n    }\r\n    currentItemIdx = 0\r\n\r\n    resetState = ((prevItemList) => (currentItemList) => {\r\n        if (prevItemList === currentItemList) return\r\n        //TODO restore state of tree\r\n        if (currentItemList.length && currentItemList.length > 0) {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '1',\r\n                lastItemIdx: currentItemList.length - 1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n\r\n        } else {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                lastItemIdx: -1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n        }\r\n    })([])\r\n\r\n    updateCurrentItemInput = ((prevIdx) => () => {\r\n        const {filterCursor} = this.props\r\n        if (filterCursor === undefined) return\r\n        if (filterCursor === prevIdx)  return\r\n        prevIdx = filterCursor\r\n        if (this.currentItemIdx !== filterCursor) this.currentItemIdx = filterCursor\r\n        if (this.state.itemNumberInput !== '' + (filterCursor + 1)) this.setState({itemNumberInput: '' + (filterCursor + 1)})\r\n    })(null)\r\n\r\n    currentNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {this.state.lastItemIdx + 1}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.lastItemIdx + 1)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            const {setFilterCursor} = this.props\r\n            const newState = {itemNumberInput: this.state.itemNumberInput === \"\" ? \"1\" : this.state.itemNumberInput}\r\n            this.currentItemIdx = this.state.itemNumberInput === \"\" ? 0 : parseInt(this.state.itemNumberInput) - 1\r\n            this.setState(newState)\r\n            setFilterCursor(this.currentItemIdx)\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === this.state.lastItemIdx ? this.currentItemIdx : this.currentItemIdx + 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === 0 ? this.currentItemIdx : this.currentItemIdx - 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = 0\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickLastPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.state.lastItemIdx\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.lastItemIdx < 0) return null\r\n        const {classes} = this.props\r\n        const {lastItemIdx} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n}\r\n\r\nPagination2.propTypes = {\r\n    filterItemList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n    setFilterCursor: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n\r\n    filterResults: PropTypes.shape({\r\n        itemList: PropTypes.array,\r\n        hostStateBackups: PropTypes.object,\r\n        netStateBackups: PropTypes.object,\r\n        cursor: PropTypes.number\r\n    }),\r\n    lastItemIdx: PropTypes.number,\r\n};\r\nPagination2.defaultProps = {\r\n    lastItemIdx: -1,\r\n    onChange: (current) => {console.log('current - ', current)}\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination2));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination3 extends PureComponent {\r\n    state = {\r\n        itemNumberInput: '',\r\n        isVisible: false,\r\n        current: 0, // index of current item in filteredItemsList. Start from 0!\r\n        itemsList: {}\r\n    }\r\n\r\n    updateState = ((prevItemList) => (newItemList) => {\r\n        if (prevItemList === newItemList && check.array(newItemList) && newItemList.length > 0) {\r\n            this.props.onChange(this.state.current)\r\n            return\r\n        }\r\n        if (prevItemList === newItemList && !this.state.isVisible) {\r\n            this.props.onHideFilter()\r\n            return\r\n        }\r\n        if (check.array(newItemList) && newItemList.length > 0) {\r\n            prevItemList = newItemList\r\n            const newState = {\r\n                itemNumberInput: '1',\r\n                isVisible: true,\r\n                current: 0,\r\n                itemsList: newItemList\r\n            }\r\n            this.setState(newState)\r\n            this.props.onNewItemsList()\r\n        } else {\r\n            prevItemList = newItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                isVisible: false,\r\n                current: 0,\r\n                itemsList: newItemList\r\n            })\r\n        }\r\n    })()\r\n\r\n    currentNumberBlock = (classes) => {\r\n        const listLength = this.props.filteredItemsList.length\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {listLength}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * only change text in input field of current page number, but doesn't change value of 'current' in state!\r\n     * @param e\r\n     */\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        const inputListLength = check.array(this.props.filteredItemsList) ?  this.props.filteredItemsList.length : 0\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: (value === \"\" || (parseInt(value) > 0 && parseInt(value) <= inputListLength)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    /**\r\n     * change text in input field and value of 'current' in state\r\n     * @param e\r\n     */\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState((prevState) => {\r\n                const itemNumberInput = prevState.itemNumberInput === \"\" ? \"1\" : prevState.itemNumberInput\r\n                return {itemNumberInput, current: parseInt(itemNumberInput) - 1}\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {current} = this.state\r\n        const listLength = this.props.filteredItemsList.length\r\n        if (current < listLength) {\r\n            const newCurrent = current + 1\r\n            this.setState({\r\n                itemNumberInput: (newCurrent + 1).toString(),\r\n                current: newCurrent\r\n            })\r\n        }\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {current} = this.state\r\n        if (current > 0) {\r\n            const newCurrent = current - 1\r\n            this.setState({\r\n                itemNumberInput: (newCurrent + 1).toString(),\r\n                current: newCurrent\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const newCurrent = 0\r\n        this.setState({\r\n            itemNumberInput: (newCurrent + 1).toString(),\r\n            current: newCurrent\r\n        })\r\n    }\r\n    onClickLastPage = () => {\r\n        const newCurrent = this.props.filteredItemsList.length - 1\r\n        this.setState({\r\n            itemNumberInput: (newCurrent + 1).toString(),\r\n            current: newCurrent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {classes, filteredItemsList} = this.props\r\n        const listLength = check.array(filteredItemsList) ?  filteredItemsList.length : 0\r\n        const {current} = this.state\r\n        if (listLength === 0) return null\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={current === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={current === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={current === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={current === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={current === listLength - 1} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={(current === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={current === listLength - 1} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={(current === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n}\r\n\r\nPagination3.propTypes = {\r\n    filteredItemsList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            ip: PropTypes.string,\r\n            rec_type: PropTypes.string,\r\n            ip_path: PropTypes.string\r\n        })\r\n    ),\r\n    onChange: PropTypes.func,\r\n    onHideFilter: PropTypes.func,\r\n    onNewItemsList: PropTypes.func\r\n};\r\nPagination3.defaultProps = {\r\n    /**\r\n     * is invoked for non empty filteredItemsList\r\n     * @param current\r\n     */\r\n    onChange: (current) => console.log('ON CHANGE FILTER: current - ', current),\r\n    /**\r\n     * is invoked if filteredItemsList got empty and paginator will be hide\r\n     */\r\n    onHideFilter: () => console.log('ON HIDE FILTER: default function'),\r\n    /**\r\n     * is invoked when pass new filteredItemsList (new search result)\r\n     */\r\n    onNewItemsList: () => console.log('ON NEW ITEMS LIST')\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination3));\r\n","import {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\n\r\n// const jss = create({plugins: [camelCase(), vendorPrefixer(), defaultUnit(), jssNested()]})\r\nconst jss = create(preset())\r\nexport default jss","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n);\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport ScrollbarSize from 'react-scrollbar-size'\r\nimport {darkenColor} from './Theme/Utils'\r\n\r\nimport Header from './Header'\r\nimport Body from './Body'\r\nimport TableFooter from './TableFooter'\r\nimport Footer from './Footer'\r\nimport Row from './Row'\r\nimport Column from './Column'\r\nimport Pagination from './Pagination'\r\nimport Pagination2 from './Pagination2'\r\nimport Pagination3 from './Pagination3'\r\nimport './fontAwesome/faLibrary.js'\r\n\r\nimport {TableProvider} from './TableContext'\r\nimport {DEFAULT_VALUES, DEFAULT_TABLE_STYLE, DEFAULT_CSS_CLASS_NAMES} from './tableConstants'\r\nimport theme from './Theme'\r\n\r\nimport jss from './jssInstance'\r\n\r\nclass Table extends PureComponent {\r\n\r\n    state = {\r\n        tableBodyData: [],\r\n        tableFooterData: [],\r\n    }\r\n\r\n    tableRefs = {\r\n        container: React.createRef(),\r\n        bodyContainer: React.createRef(),\r\n        rows: {}\r\n    }\r\n    scroll = {\r\n        width: 17,\r\n        height: 17,\r\n        cellWidth: 17,\r\n        bodyCellWidth: 0,\r\n    }\r\n\r\n    tableStyles = {\r\n        //LVL 0\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            boxSizing: 'border-box',\r\n            '& table, & thead, & tbody, & tfoot, & tr, & th, & td': {boxSizing: 'border-box',}\r\n        },\r\n        // LVL 1\r\n        tableContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            overflowX: 'auto',\r\n            boxSizing: 'border-box',\r\n        },\r\n        footerContainer: {\r\n            display: 'flex',\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n            justifyContent: 'space-between',\r\n            boxSizing: 'border-box',\r\n        },\r\n        // LVL 2\r\n        tableHeaderBodyContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n        },\r\n        tableFooterContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        // LVL 3\r\n        tableHeaderContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        tableBodyContainer: {\r\n            //position: 'relative',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n            overflowY: 'scroll'\r\n        },\r\n        // LVL 4\r\n        table: {\r\n            tableLayout: 'fixed'\r\n        },\r\n\r\n        tableHeader: {\r\n\r\n        },\r\n        tableBody: {\r\n        },\r\n        tableFooter: {},\r\n\r\n// DECORATION STYLES\r\n        tableContainerDc: {\r\n            backgroundColor: theme.tableBgColor,\r\n            color: theme.tableTextColor,\r\n        },\r\n        tableBodyContainerDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n        },\r\n        tableHeaderRowDc: {\r\n            backgroundColor: theme.headerBgColor,\r\n            color: theme.headerTextColor,\r\n            '& th': {\r\n                padding: theme.paddingHeaderCell\r\n            },\r\n        },\r\n        tableBodyDc:{\r\n            backgroundColor: theme.bodyBgColor,\r\n            color: theme.bodyTextColor\r\n        },\r\n        tableBodyRowDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ? darkenColor(theme.bodyBgColor, theme.stripedColorFactor) : theme.bodyBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingBodyCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.bodyBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        tableFooterDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            color: theme.tableFooterTextColor,\r\n        },\r\n        tableFooterRowDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ?\r\n                    darkenColor(theme.tableFooterBgColor, theme.stripedColorFactor)\r\n                    : theme.tableFooterBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingTableFooterCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.tableFooterBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        footerContainerDc: {\r\n            padding: '5px 5px',\r\n            backgroundColor: theme.footerBgColor\r\n        },\r\n// SIZE STYLES\r\n        containerSz: {\r\n            height: '100%'\r\n        },\r\n        tableBodyContainerSz: {width: null},\r\n        tableFooterContainerSz: {width: null},\r\n        tableHeaderSz: {width: null},\r\n        tableBodySz: {width: null},\r\n        scrollSz: {width: null},\r\n        scrollBodySz: {},\r\n// SPECIAL STYLES\r\n        hideHeader: {\r\n            fontSize: [[0], '!important'],\r\n            height: [[0], '!important'],\r\n            '& tr': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& td': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& th': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            }\r\n        },\r\n        selectedRow: {\r\n            backgroundColor: theme.selectedRowBgColor + ' !important',\r\n            color: theme.selectedRowTextColor + ' !important',\r\n        }\r\n    }\r\n    jssSheet = jss.createStyleSheet(this.tableStyles, {link: true})\r\n\r\n    /**\r\n     * join inner and external css classes lists into array\r\n     * @param {(string|string[])} innerCssClasses\r\n     * @param {(string|string[])} extCssClasses\r\n     * @returns {string[]}\r\n     */\r\n    static joinCss(innerCssClasses, extCssClasses) {\r\n        // convert  innerCssClasses to array\r\n        innerCssClasses = check.array(innerCssClasses) ? innerCssClasses : (\r\n            check.nonEmptyString(innerCssClasses) ? [innerCssClasses] : []\r\n        )\r\n        // convert extCssClasses to array\r\n        extCssClasses = check.nonEmptyString(extCssClasses) ? [extCssClasses] : (\r\n            check.array(extCssClasses) ? extCssClasses : []\r\n        )\r\n\r\n        return [...innerCssClasses, ...extCssClasses]\r\n    }\r\n\r\n    /**\r\n     * @param children\r\n     * @param {Object} component that instances should be filtered\r\n     * @param {Object} injectedProps this props will be injected into filtered children\r\n     * @param {boolean} injectIndex if true - prop index will be injected\r\n     * @returns {Array}\r\n     */\r\n    filterComponentsByType(children, component, injectedProps = {}, injectIndex = true) {\r\n        const result = []\r\n        React.Children.forEach(children, (child, index) => {\r\n            if (child.type === component) {\r\n                if (injectIndex) injectedProps.index = index\r\n                result.push(React.cloneElement(child, {...injectedProps, key: index}))\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    updateColumnsSizesInDOM = () => {\r\n        const {dimensions, dimensions: {columnsSizes}, columnsCss} = this.tableContext\r\n        columnsCss.forEach((columnSet, index) => {\r\n            this.jssSheet.getRule(columnSet.columnSizeClass).prop('width', columnsSizes[index].width)\r\n        })\r\n        this.jssSheet.getRule('tableHeaderSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('tableBodySz').prop('width', dimensions.columnsWidth + this.scroll.bodyCellWidth)\r\n        this.jssSheet.getRule('tableBodyContainerSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollSz').prop('width', this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollBodySz').prop('width', this.scroll.bodyCellWidth)\r\n    }\r\n\r\n    updateDimensions = () => {\r\n\r\n        const {dimensions, dimensions: {columnsSizes}} = this.tableContext\r\n        dimensions.containerWidth = this.tableRefs.container.current.clientWidth\r\n        const sumOfMinWidth = columnsSizes.reduce((sum, column) => {\r\n            return sum + column.minWidth\r\n        }, 0 )\r\n        const scrollSize = this.scroll.width\r\n\r\n        //calculate free space for distribute\r\n        let freeSpace = Math.trunc(dimensions.containerWidth - sumOfMinWidth - scrollSize)\r\n        // if (freeSpace <=0) {\r\n        //     console.log('no free space')\r\n        //     console.log('--finished', Date.now() - startTime, this.tableContext.dimensions)\r\n        // }\r\n\r\n        // let counter = 0\r\n        let numberOfExtendableColumns = 0\r\n        //reset width of columns to minWidth\r\n        columnsSizes.forEach(column => column.width = column.minWidth)\r\n\r\n        while (freeSpace > 0) {\r\n            //if don't have columns that can be extended - break cycle\r\n            numberOfExtendableColumns = columnsSizes.reduce((sum, column) => {\r\n                return column.fixed || column.width >= column.maxWidth ? sum : ++sum\r\n            }, 0)\r\n            if (numberOfExtendableColumns === 0) {\r\n                break\r\n            }\r\n            //if few free space - distribute by 1 per column\r\n            if (freeSpace < numberOfExtendableColumns) {\r\n                for (const column of columnsSizes) {\r\n                    if (column.fixed || column.width >= column.maxWidth) continue\r\n                    column.width++\r\n                    freeSpace--\r\n                    if (freeSpace <= 0) {\r\n                        // console.log('distributed by 1 per column')\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            //if free space enough to distribute between extendable columns\r\n            const spacePerColumn = Math.trunc(freeSpace/numberOfExtendableColumns)\r\n            for (let column of columnsSizes) {\r\n                if (column.fixed || column.width >= column.maxWidth) continue\r\n                let additionWidth = column.maxWidth - column.width >= spacePerColumn ? spacePerColumn : column.maxWidth - column.width\r\n                freeSpace -= additionWidth\r\n                column.width += additionWidth\r\n            }\r\n            // ++counter\r\n        }\r\n        //calculate new scroll cell width, table width\r\n        const columnsWidth = columnsSizes.reduce((sum, column) => {return sum + column.width}, 0)\r\n        this.scroll.cellWidth =\r\n            columnsWidth + this.scroll.width > dimensions.containerWidth ?\r\n                this.scroll.width :\r\n                dimensions.containerWidth - columnsWidth\r\n        this.scroll.bodyCellWidth = this.scroll.cellWidth - this.scroll.width\r\n        dimensions.columnsWidth = columnsWidth\r\n    }\r\n\r\n    updateColumns = () => {\r\n        this.updateDimensions()\r\n        this.updateColumnsSizesInDOM()\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parse result of fetchData function.\r\n     * If it object:\r\n     *  1) find key 'body'. If key exists and type of value is Array, write to state.tableBodyData\r\n     *  2) find key 'footer'. If key exists and type of value is Array, write to state.tableFooterData\r\n     * If it array, consider it as body data and write to state.tableBodyData\r\n     * @param data\r\n     */\r\n    parseFetchedResult(data) {\r\n        const {bodyDataKey, footerDataKey} = this.props\r\n        if (check.object(data)) {\r\n            if (data[bodyDataKey])  this.setState({tableBodyData: data[bodyDataKey]})\r\n            if (data[footerDataKey])  this.setState({tableFooterData: data[footerDataKey]})\r\n        } else if (check.array(data)) {\r\n            this.setState({tableBodyData: data})\r\n        } else {\r\n            throw new Error('Invalid data format')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fetch data using this.props.fetchData function and update Body of Table\r\n     * @returns {Promise<void>}\r\n     */\r\n    updateData = async () => {\r\n        try {\r\n            const data = this.props.data ? this.props.data : await this.props.fetchData(this.tableContext.states.pagination)\r\n            this.parseFetchedResult(data)\r\n        } catch (e) {\r\n            console.log('---!!! Table: fetch data error! ', e)\r\n        }\r\n    }\r\n\r\n    formBodyData = (data, columnsParams) => {\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    createRowRef = (id) => {\r\n        const ref = React.createRef()\r\n        this.tableRefs.rows[id] = ref\r\n        // console.log('***************')\r\n        return ref\r\n    }\r\n\r\n\r\n    tableContext = {\r\n        theme: theme,\r\n        states: {},\r\n        shareState: (state,name) => {this.tableContext.states[name] = state},\r\n        getState: (name) => this.tableContext.states[name],\r\n        updateData: this.updateData,\r\n        formBodyData: this.props.formBodyData ? this.props.formBodyData : this.formBodyData,\r\n        cssStyles: this.tableStyles,\r\n        dimensions: {\r\n            containerWidth: 0,\r\n            columnsSizes: [],\r\n            columnsWidth: 0, // sum of current columns width\r\n        },\r\n        columnsCss: [],\r\n        columnsParams: [],\r\n        jssSheet: this.jssSheet,\r\n        filterComponentsByType: this.filterComponentsByType,\r\n        joinCss: Table.joinCss,\r\n        createRowRef: this.createRowRef,\r\n        tableRefs: this.tableRefs,\r\n        scrollPosition: this.props.scrollPosition\r\n    }\r\n\r\n    setColumnsCss(header) {\r\n        const {columnsCss} = this.tableContext\r\n        const {children: hdChildren} = header.props\r\n        // case if Header have rows as children\r\n        const rows = this.filterComponentsByType(hdChildren, Row)\r\n        let columns = []\r\n        if (rows.length > 0) {\r\n        //    get last Row as source of header format info\r\n            const lastRowChildren = rows[rows.length - 1].props.children\r\n            columns = this.filterComponentsByType(lastRowChildren, Column)\r\n        } else {\r\n        //  if direct children of Header are Column's instances\r\n            columns = this.filterComponentsByType(hdChildren, Column)\r\n        }\r\n\r\n        if (columns.length === 0) {\r\n            console.log(\"Header doesn't have any Column's components as children\" )\r\n            return []\r\n        }\r\n\r\n        const columnCssPrefix = DEFAULT_CSS_CLASS_NAMES.column\r\n        const columnSizeCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnSz\r\n        const columnDecoCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnDc\r\n\r\n        columns.forEach((column, index) => {\r\n            const params = {\r\n                    columnClass: columnCssPrefix + index,\r\n                    columnSizeClass: columnSizeCssPrefix + index,\r\n                    columnDecoClass: columnDecoCssPrefix + index\r\n            }\r\n            this.jssSheet.addRules({\r\n                [params.columnClass] : {},\r\n                [params.columnSizeClass] : {width: null},\r\n                [params.columnDecoClass] : {},\r\n            })\r\n            columnsCss[index] = params\r\n        })\r\n    }\r\n\r\n    scrollbarSizeLoad = (scrollSizes) => {\r\n        this.scroll.width = scrollSizes.scrollbarWidth\r\n        this.scroll.height = scrollSizes.scrollbarHeight\r\n    }\r\n\r\n    scrollToRow(rowId, alignment, offset = 0) {\r\n        const row = this.tableRefs.rows[rowId]\r\n        if (!row) return\r\n        const body = this.tableRefs.bodyContainer\r\n        const bodyXY = body.current.getBoundingClientRect()\r\n        const rowXY = row.current.getBoundingClientRect()\r\n        // body.current.scrollTop = rowXY.y - bodyXY.y - offset\r\n        body.current.scrollBy(0, rowXY.y - bodyXY.y - offset)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} container - box that will be scrolled (ref)\r\n     * @param {Object} element - element that will be positioned relative top or bottom of box\r\n     * @param {('top'|'bottom')} position - where's measured offset from\r\n     * @param {number} [offset] - offset from 'position' in px\r\n     */\r\n    scrollAt(container, element, position, offset = 0) {\r\n        if (!(position && container && container.current && element && element.current)) return\r\n        let yScroll = 0\r\n        const el = element.current.getBoundingClientRect()\r\n        const box = container.current.getBoundingClientRect()\r\n        switch (position.toLowerCase()) {\r\n            case 'top':\r\n                yScroll = el.top - box.top - offset\r\n                break\r\n            case 'bottom':\r\n                yScroll = el.bottom - box.bottom + offset\r\n                break\r\n            default:\r\n\r\n        }\r\n        if (yScroll === 0) return\r\n        container.current.scrollBy(0, yScroll)\r\n    }\r\n\r\n\r\n    render() {\r\n        // const store = window.store.getState()\r\n        const {classes: css} = this.jssSheet\r\n        const {children} = this.props\r\n        this.setColumnsCss(this.filterComponentsByType(children, Header)[0])\r\n        return (\r\n            <TableProvider value={this.tableContext}>\r\n                <ScrollbarSize\r\n                    onLoad={this.scrollbarSizeLoad}\r\n                />\r\n                <div className={[css.container, css.containerSz].join(\" \")} ref={this.tableRefs.container}>\r\n                    <div className={[css.tableContainer, css.tableContainerDc].join(\" \")}>\r\n                        <div className={[css.tableHeaderBodyContainer].join(\" \")}>\r\n                            <div className={[css.tableHeaderContainer]}>\r\n                                {this.filterComponentsByType(children, Header)}\r\n                            </div>\r\n                            <div className={[css.tableBodyContainer, css.tableBodyContainerSz, css.tableBodyContainerDc].join(\" \")} ref={this.tableRefs.bodyContainer}>\r\n                                {this.filterComponentsByType(children, Body, {data: this.state.tableBodyData, scrollPosition: this.props.scrollPosition})}\r\n                            </div>\r\n                        </div>\r\n                        <div className={[css.tableFooterContainer, css.tableFooterContainerSz].join(\" \")}>\r\n                            {this.filterComponentsByType(children, TableFooter, {data: this.state.tableFooterData})}\r\n                        </div>\r\n                    </div>\r\n                        {this.filterComponentsByType(children, Footer)}\r\n                </div>\r\n            </TableProvider>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const bodyContainer = this.tableRefs.bodyContainer\r\n        const targetRow = this.tableRefs.rows[this.props.scrollPosition]\r\n\r\n        this.jssSheet.attach()\r\n        window.addEventListener('resize', this.updateColumns)\r\n\r\n        this.updateColumns()\r\n        await this.updateData()\r\n        // this.scrollToRow(this.props.scrollPosition)\r\n        this.scrollAt(bodyContainer, targetRow, 'bottom', 0)\r\n\r\n        window.tabRefs = this.tableRefs\r\n    }\r\n\r\n    //should be called only when pass data via props and this data change\r\n    async componentDidUpdate(prevProps) {\r\n        const bodyContainer = this.tableRefs.bodyContainer\r\n        const targetRow = this.tableRefs.rows[this.props.scrollPosition]\r\n\r\n        if (prevProps.data !== this.props.data) {\r\n             await this.updateData()\r\n        }\r\n        // this.scrollToRow(this.props.scrollPosition)\r\n        this.scrollAt(bodyContainer, targetRow, 'bottom', 20)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumns)\r\n    }\r\n}\r\n\r\nTable.Caption = (props) => {\r\n    return <caption>{props.children}</caption>\r\n}\r\n\r\n\r\nTable.propTypes = {\r\n    fetchData: PropTypes.func, //function that will be fetch data from remote source. Has to be async and return Promise\r\n    formBodyData: PropTypes.func, //function that will be used to form Body content from fetched data\r\n    bodyDataKey: PropTypes.string, // name of key for body data in object that return fetchData function\r\n    footerDataKey: PropTypes.string, // name of key for footer data in object that return fetchData function\r\n\r\n    width: PropTypes.string, //width of table's container\r\n    height: PropTypes.string, //height of table's container\r\n    miWidth: PropTypes.string, //min width of table container\r\n    minHeight: PropTypes.string, //min height of table container\r\n\r\n    bordered: PropTypes.bool,\r\n    bodyStriped: PropTypes.bool,\r\n\r\n    isStretch: PropTypes.bool, //allow stretch table\r\n\r\n    scrollPosition: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) //ref to row. if value is defined - scroll to this row\r\n};\r\nTable.defaultProps = {\r\n    fetchData: DEFAULT_VALUES.fetchData.method,\r\n    bodyDataKey: DEFAULT_VALUES.fetchData.bodyDataKey,\r\n    footerDataKey: DEFAULT_VALUES.fetchData.footerDataKey,\r\n\r\n    width: DEFAULT_TABLE_STYLE.tableWidth,\r\n    minWidth: DEFAULT_TABLE_STYLE.tableMinWidth,\r\n    height: DEFAULT_TABLE_STYLE.tableHeight,\r\n    minHeight: DEFAULT_TABLE_STYLE.tableMinHeight,\r\n\r\n    bordered: true,\r\n    bodyStriped: true,\r\n\r\n    isStretch: true\r\n};\r\n\r\n\r\nexport {Header, Body, TableFooter, Footer, Row, Column, Pagination, Pagination2, Pagination3}\r\nexport default Table;\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\nimport './style.css'\r\n\r\nclass NetRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        let {id, classes, ipAddress, netmask,comment,vrfName, netLocations, netChildren, hostChildren, isFetching, isExpanded, isSelected, toggleIconHandler, rowId} = this.props\r\n        // let {id, classes, ipAddress, netmask,comment, vrfId, vrfName, vrfRd, netLocations, netChildren, hostChildren, isFetching, isExpanded, isSelected, toggleIconHandler, rowId} = this.props\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <Row rowId={rowId} isSelected={isSelected}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            let locations = []\r\n            netLocations = check.object(netLocations) ? netLocations : {}\r\n            for (let [key, location] of Object.entries(netLocations)) {\r\n                locations.push(location)\r\n            }\r\n            const icon = isExpanded ?\r\n                <FontAwesomeIcon icon={\"minus\"} className={classes.icon} onClick={toggleIconHandler(id)}/> :\r\n                <FontAwesomeIcon icon={\"plus\"}  className={classes.icon} onClick={toggleIconHandler(id)}/>\r\n            return (\r\n                <Row rowId={rowId} isSelected={isSelected}>\r\n                    <Column>{this.lvlIndent()}{icon}{ipAddress}</Column>\r\n                    {/*<Column>{this.lvlIndent()}{icon}{ipAddress} - {rowId}</Column>*/}\r\n                    <Column>{netChildren.length}/{hostChildren.length}</Column>\r\n                    <Column>{netmask}</Column>\r\n                    <Column></Column>\r\n                    <Column>{locations.join(\"; \")}</Column>\r\n                    <Column>{vrfName}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column>{comment}</Column>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nNetRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    isFetching: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    netChildren: PropTypes.array,\r\n    hostChildren: PropTypes.array,\r\n    netLocations: PropTypes.object,\r\n    toggleIconHandler: PropTypes.func,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nNetRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n    netChildren: [],\r\n    hostChildren: [],\r\n};\r\n\r\nexport default injectSheet(style)(NetRecordRow)\r\n\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\n\r\nclass HostRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        // const {id, ipAddress, macAddress, comment, isFetching, isExpanded, isSelected, rowId} = this.props\r\n        const {ipAddress, isFetching, isSelected, rowId} = this.props\r\n\r\n        if (isFetching) {\r\n            return (\r\n                <Row rowId={rowId} isSelected={isSelected}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return (\r\n                <Row rowId={rowId} isSelected={isSelected}>\r\n                    {/*<Column>{this.lvlIndent()}{ipAddress} - {id}</Column>*/}\r\n                    <Column>{this.lvlIndent()}{ipAddress}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nHostRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isFetching: PropTypes.bool,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    macAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nHostRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n};\r\n\r\nexport default injectSheet(style)(HostRecordRow)\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport RowsContainer from '../RowsContainer'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChildrenRowsContainer extends PureComponent {\r\n    render() {\r\n        const {netsIds, hostsIds, lvl} = this.props\r\n        return (\r\n           <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={lvl} />\r\n        );\r\n    }\r\n}\r\n\r\nChildrenRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nexport default ChildrenRowsContainer;\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {fetchElementsIfNeeded, netItemToggleExpandCollapse} from '../../../actions'\r\nimport NetRecordRow from \"../NetRecordRow\";\r\nimport HostRecordRow from \"../HostRecordRow\";\r\nimport ChildrenRowsContainer from \"../ChildrenRowsContainer\";\r\n\r\nclass RowsContainer extends PureComponent {\r\n\r\n    childrenNetsIds = []\r\n    childrenHostsIds = []\r\n\r\n    render() {\r\n        const {netsData, hostsData, toggleIconHandler, lvl} = this.props\r\n        const netRows = netsData.map(data => {\r\n            if (data.isExpanded) {\r\n                this.childrenNetsIds = this.childrenNetsIds.concat(data.netChildren)\r\n                this.childrenHostsIds = this.childrenHostsIds.concat(data.hostChildren)\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={'net-' + data.id}/>\r\n                        <ChildrenRowsContainer netsIds={data.netChildren} hostsIds={data.hostChildren} lvl={lvl + 1} />\r\n                    </React.Fragment>\r\n\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={'net-' + data.id} />\r\n                    </React.Fragment>\r\n                )\r\n            }})\r\n        const hostRows = hostsData.map(data => {\r\n            return (\r\n                <HostRecordRow {...data} lvl={lvl} key={'n' + data.id} rowId={'host-' + data.id} />\r\n            )})\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {netRows}\r\n                {hostRows}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n    componentDidUpdate() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n}\r\n\r\nconst selectorFactory = (dispatch) => {\r\n\r\n    const updateDataIfNeeded = ({netsIds, hostsIds}) => {\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n    const toggleIconHandler = (id) => () => {\r\n        dispatch(netItemToggleExpandCollapse(id))\r\n    }\r\n\r\n    return (state, ownProps) => {\r\n        const {netsIds, hostsIds, lvl} = ownProps\r\n        const netsData = []\r\n        const hostsData = []\r\n        for (let id of netsIds) {\r\n            const itemData = state.netData.networks[id]\r\n            if (itemData) netsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n        for (let id of hostsIds) {\r\n            const itemData = state.netData.hosts[id]\r\n            if (itemData) hostsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n\r\n        return {netsData, hostsData, lvl, updateDataIfNeeded, toggleIconHandler}\r\n    }\r\n}\r\n\r\nRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nRowsContainer.defaultProps = {\r\n    netsIds: [],\r\n    hostsIds: []\r\n}\r\n\r\nexport default connectAdvanced(selectorFactory)(RowsContainer)","import {createSelector} from 'reselect'\r\n\r\nconst getRootNetsIds = state => state.rootElementsIds.netsIds\r\nconst getRootHostsIds = state => state.rootElementsIds.hostsIds\r\n\r\nconst getNetworksDataStore = state => state.netData.networks\r\nconst getHostsDataStore = state => state.netData.hosts\r\n\r\nconst getFilterStore = state => state.filter\r\nexport const getFilterItemList = state => state.filter.itemList\r\nexport const getFilterCursor = state => state.filter.cursor\r\n\r\n// const getNetworkItemDataStore = (state, props) => {\r\n//\r\n// }\r\n//\r\n// const makeGetNetworkData = () => {\r\n//     return createSelector(\r\n//         []\r\n//     )\r\n// }\r\n\r\nexport const getRootRowsData = createSelector(\r\n    [getRootNetsIds, getRootHostsIds, getNetworksDataStore, getHostsDataStore],\r\n    (rootNetsIds, rootHostsIds, networksData, hostsData) => {\r\n        const rootNetsData = []\r\n        for (let id of rootNetsIds) {\r\n            const netData = networksData[id]\r\n            if (netData) {\r\n                netData.id = id\r\n                rootNetsData.push(netData)\r\n            }\r\n        }\r\n        const rootHostsData = []\r\n        for (let id of rootHostsIds) {\r\n            const hostData = hostsData[id]\r\n            if (hostData) rootHostsData.push(hostData)\r\n        }\r\n        return {netsData: rootNetsData, hostsData: rootHostsData}\r\n    }\r\n)\r\n\r\nexport const getRootIds = createSelector(\r\n    [getRootNetsIds, getRootHostsIds],\r\n    (netsIds, hostsIds) => {\r\n        return {netsIds: netsIds, hostsIds: hostsIds}\r\n    }\r\n)\r\n\r\nexport const getFilterResults = createSelector(\r\n    [getFilterStore],\r\n    (filter) => {\r\n        return filter\r\n    }\r\n)\r\n\r\n","export const MIN_SEARCH_LENGTH = 3\r\nexport const SEARCH_TIMEOUT = 800","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {MIN_SEARCH_LENGTH, SEARCH_TIMEOUT} from './constants'\r\nimport check from \"check-types\"\r\n\r\n/**\r\n * in this class is used customized bootstrap classes\r\n */\r\nclass SimpleSearch extends PureComponent {\r\n    state = {\r\n        searchBy: this.props.accessorList,\r\n        statement: this.props.defaultStatement,\r\n        value: ''\r\n    }\r\n    timerId = ''\r\n\r\n    isEmpty = ((minSearchLength) => (filterState) => {\r\n        switch (filterState.statement) {\r\n            case '=':\r\n            case '!=':\r\n            case '>':\r\n            case '>=':\r\n            case '<':\r\n            case '<=':\r\n            case 'beginWith':\r\n            case 'endWith':\r\n                return filterState.value.length < minSearchLength\r\n            default:\r\n                return true\r\n        }\r\n    })(MIN_SEARCH_LENGTH)\r\n\r\n    //update state of this filter in filters store of Filter factory\r\n    updateParentState = () => {\r\n        if (this.isEmpty(this.state)) {\r\n            this.props.updateFilterState({})\r\n        } else {\r\n            this.props.updateFilterState(this.state)\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {width, placeholder} = this.props\r\n        const style = {width}\r\n\r\n        return (\r\n            <div>\r\n                <input className='search-bar-form-control' style={style} placeholder={placeholder} value={this.state.value} onChange={this.onChangeHandler} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        this.timerId = setTimeout(this.updateParentState, SEARCH_TIMEOUT)\r\n    }\r\n}\r\n\r\nSimpleSearch.propTypes = {\r\n    accessorList: PropTypes.array.isRequired,\r\n    defaultStatement: PropTypes.string,\r\n    minLengthForSearch: PropTypes.number,\r\n    options: PropTypes.shape({\r\n        width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    }),\r\n    placeholder: PropTypes.string,\r\n    hideUnusedRows: PropTypes.bool,\r\n    updateFilterState: PropTypes.func,\r\n    statementSet: PropTypes.object.isRequired,\r\n}\r\n\r\nSimpleSearch.defaultProps = {\r\n    defaultStatement: '=',\r\n    minLengthForSearch: MIN_SEARCH_LENGTH,\r\n    options: {\r\n        width: '150px'\r\n    },\r\n    placeholder: 'search....'\r\n}\r\n\r\nexport default SimpleSearch","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport SimpleSearch from \"./SimpleSearch\"\r\nimport check from 'check-types'\r\n\r\nclass FilterFactory {\r\n\r\n    filtersStore = []\r\n    listeners = []\r\n    statementSet = {\r\n        '=': '=',\r\n        '!=': '!=',\r\n        '>': '>',\r\n        '>=': '>=',\r\n        '<': '<',\r\n        '<=': '<=',\r\n        'beginWith': 'begin with',\r\n        'endWith': 'end with',\r\n        'empty': 'empty',\r\n        'notEmpty': 'not empty'\r\n    }\r\n\r\n    subscribe = (callBack) => {\r\n        if (! check.function(callBack)) return\r\n        const listenerId = this.listeners.length\r\n        this.listeners.push(callBack)\r\n        return listenerId\r\n    }\r\n    unsubscribe = (listenerID) => {\r\n        if (! this.listeners[listenerID]) return false\r\n        delete this.listeners[listenerID]\r\n        return true\r\n    }\r\n\r\n    updateFilterState = (id, filtersStore) => (state) => {\r\n        if (check.emptyObject(state)) {\r\n            if (check.emptyObject(filtersStore[id])) return\r\n            filtersStore[id] = {}\r\n        } else {\r\n            const {searchBy, statement, value} = state\r\n            filtersStore[id] = Object.assign({}, filtersStore[id], {searchBy, statement, value})\r\n        }\r\n        //invoke listener's functions\r\n        for (const listener of this.listeners) {\r\n            listener(filtersStore)\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param filterType\r\n     * @param accessorList\r\n     * @param {Object} options\r\n     * @param {String} options.width\r\n     * @param {String} options.defaultStatement\r\n     * @param {Number} options.minLengthForSearch\r\n     * @param {String} options.placeholder\r\n     * @param {Boolean} options.hideUnusedRows\r\n     * @returns {*}\r\n     */\r\n    createFilter = (filterType, accessorList, options) => {\r\n        const filterProps = {accessorList, ...options}\r\n        //check defaultStatement is correct\r\n        if (Object.keys(this.statementSet).indexOf(filterProps.defaultStatement) < 0 ) {\r\n            console.log('--- incorrect default statement for filter: ', filterProps.defaultStatement)\r\n            return\r\n        }\r\n        switch (filterType) {\r\n            case 'simpleSearch':\r\n                const filterId = this.filtersStore.length\r\n                this.filtersStore[filterId] = {}\r\n                return <SimpleSearch\r\n                    {...filterProps}\r\n                    updateFilterState={this.updateFilterState(filterId, this.filtersStore)}\r\n                    statementSet={this.statementSet}\r\n                />\r\n            default:\r\n        }\r\n    }\r\n}\r\n\r\nFilterFactory.propTypes = {}\r\n\r\nexport default FilterFactory","import React, {Component} from 'react'\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n// import {check} from 'check-types'\r\nimport isEqual from 'lodash/isEqual'\r\nimport {\r\n    invalidateElements,\r\n    fetchElementsIfNeeded,\r\n    forceUpdateRootElements,\r\n    forceUpdateRootElementsIds,\r\n    setFilter,\r\n    setCursor,\r\n} from '../../actions'\r\n\r\nimport {showFilteredItem, restoreSavedStates} from '../../actions'\r\n\r\nimport Table from '../Table'\r\nimport {Header, Body, Row, Column, Footer, Pagination3} from '../Table'\r\nimport RowsContainer from './RowsContainer'\r\nimport {getRootIds, getFilterResults, getFilterItemList, getFilterCursor} from './selectors'\r\nimport FilterFactory from '../FilterFactory'\r\nimport axios from 'axios'\r\nimport {URL_FILTERED_SEARCH} from '../../constants/IpamTable'\r\n\r\n\r\nclass IpamTable extends Component {\r\n\r\n    factory = new FilterFactory()\r\n\r\n    onChangeFiltersState = async (filterStatements) => {\r\n        const {updateFilterStore} = this.props\r\n        try {\r\n            // let config = {\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json'\r\n            //     }\r\n            // };\r\n            let response = await axios.post(URL_FILTERED_SEARCH, filterStatements)\r\n            const {searchResult = []} = response.data\r\n\r\n            updateFilterStore({searchResult})\r\n        } catch (error) {\r\n            console.log('Error: ', error.response)\r\n        }\r\n    }\r\n\r\n    filter = this.factory.createFilter('simpleSearch', ['ip'], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n    // filter2 = this.factory.createFilter('simpleSearch', ['ip', 'net_ip', 'office'], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n\r\n\r\n    renderBodyData = function(data){\r\n        const {netsIds = [], hostsIds = []} = data\r\n        return (\r\n            <React.Fragment>\r\n                <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={0} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const data = {body: {netsIds: this.props.netsIds, hostsIds: this.props.hostsIds}}\r\n        const {filteredItemsList} = this.props\r\n\r\n        window.fact = this.factory\r\n\r\n        return (\r\n            <Table width={'100%'} data={data} formBodyData={this.renderBodyData} fetchData={this.fetchData} >\r\n                <Header>\r\n                    <Row>\r\n                        <Column accessor={'address'} minWidth={'200px'} maxWidth={'400px'}>IP address</Column>\r\n                        <Column accessor={'mask'} minWidth={'100px'} fixed>Statistics<br/>(Nets/Hosts)</Column>\r\n                        <Column accessor={'mask'} minWidth={'130px'} fixed>Network mask</Column>\r\n                        <Column accessor={'tags'} minWidth={'100px'} maxWidth={'200px'}>Tags</Column>\r\n                        <Column accessor={'locations'} minWidth={'200px'} maxWidth={'500px'}>Locations</Column>\r\n                        <Column accessor={'vrf'} minWidth={'80px'} fixed>VRF</Column>\r\n                        <Column accessor={'vrf'} minWidth={'60px'} fixed>VLAN</Column>\r\n                        <Column accessor={'vrf'} minWidth={'60px'} fixed>vxlan vni</Column>\r\n                        <Column accessor={'comment'} minWidth={'100px'} maxWidth={'500px'}>Comment</Column>\r\n                    </Row>\r\n                </Header>\r\n                <Body />\r\n                <Footer>\r\n                    <div style={{display: 'flex'}}>\r\n                        {this.filter}\r\n                        {/*<Pagination3 filteredItemsList={filteredItemsList} onChange={this.props.showCurrentFilteredItem} />*/}\r\n                        <Pagination3 filteredItemsList={filteredItemsList} onChange={this.props.showCurrentFilteredItem} onNewItemsList={this.props.restoreStateFromFilter} onHideFilter={this.props.restoreStateFromFilter} />\r\n                    </div>\r\n                    <div> </div>\r\n                </Footer>\r\n            </Table>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.factory.subscribe(this.onChangeFiltersState);\r\n        const {forceUpdateRootItems} = this.props\r\n        forceUpdateRootItems()\r\n    }\r\n}\r\n\r\n\r\n    function selectorFactory(dispatch) {\r\n        let result = {}\r\n        function forceUpdateRootItems () {\r\n            dispatch(forceUpdateRootElements())\r\n        }\r\n        function forceUpdateRootIds () {\r\n            dispatch (forceUpdateRootElementsIds())\r\n        }\r\n        // function updateElements ({netsIds, hostsIds}) {\r\n        //     dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n        // }\r\n        // function forceUpdateElements ({netsIds, hostsIds}) {\r\n        //     dispatch(invalidateElements({netsIds, hostsIds}))\r\n        //     dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n        // }\r\n        function updateFilterStore ({searchResult}) {\r\n            dispatch(setFilter({searchResult}))\r\n        }\r\n        function setFilterCursor (position) {\r\n            dispatch(setCursor(position))\r\n        }\r\n        function showCurrentFilteredItem (idx) {\r\n            dispatch(showFilteredItem(idx))\r\n        }\r\n        function restoreStateFromFilter () {\r\n            dispatch(restoreSavedStates())\r\n        }\r\n        return (state, ownProps) => {\r\n            const {netsIds, hostsIds} = getRootIds(state)\r\n            const filterStore = getFilterResults(state)\r\n            const filteredItemsList = getFilterItemList(state)\r\n            const filterCursor = getFilterCursor(state)\r\n            const nextResult = {\r\n                forceUpdateRootItems,\r\n                forceUpdateRootIds,\r\n                updateFilterStore,\r\n                setFilterCursor,\r\n                showCurrentFilteredItem,\r\n                restoreStateFromFilter,\r\n                filterStore,\r\n                filteredItemsList,\r\n                filterCursor,\r\n                netsIds,\r\n                hostsIds\r\n            }\r\n            if (!isEqual(result, nextResult)) result = nextResult\r\n            return result\r\n        }\r\n}\r\n\r\n\r\nIpamTable.propTypes = {\r\n    //from dispatchToProps\r\n    forceUpdateRoot: PropTypes.func,\r\n    forceUpdateRootIds: PropTypes.func,\r\n    updateRootElementsId: PropTypes.func,\r\n    updateElements: PropTypes.func,\r\n    updateFilterStore: PropTypes.func,\r\n    setFilterCursor: PropTypes.func,\r\n    showCurrentFilteredItem: PropTypes.func,\r\n    filterStore: PropTypes.object,\r\n    filteredItemsList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n\r\n    //from stateToProps\r\n    rootnetsIds: PropTypes.array,\r\n    rootHostsId: PropTypes.array,\r\n};\r\nIpamTable.defaultProps = {\r\n    rootnetsIds: [],\r\n    rootHostsId: []\r\n};\r\n\r\n\r\nexport default connectAdvanced(selectorFactory)(IpamTable)","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    fas\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    fas\r\n);\r\n","import check from 'check-types'\r\n/**\r\n * convert string to int array and return items that >= 0\r\n * @param dataString\r\n * @returns {Array}\r\n */\r\nexport function convertToIntArray(dataString) {\r\n    if (check.array(dataString)) return dataString\r\n    if (!check.string(dataString)) return []\r\n\r\n    const idArray = dataString.split(\",\")\r\n    const filteredIds = []\r\n    for (let id of idArray) {\r\n        id = parseInt(id.trim(), 10)\r\n        if (id >= 0) filteredIds.push(id)\r\n    }\r\n    return filteredIds\r\n}\r\n\r\nexport function isItterable(obj) {\r\n    // checks for null and undefined\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    return typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n","import {convertToIntArray} from '../helperFunctions'\r\nimport {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    netsIds: [],\r\n    hostsIds: [],\r\n    isFetching: false,\r\n    didInvalidate: false\r\n}\r\n\r\nconst rootElementsIds = (rootElements = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case REQUEST_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            })\r\n        case RECEIVE_ROOT_ELEMENTS_ID:\r\n            const {netsIds, hostsIds} = payload\r\n            return Object.assign({}, rootElements, {\r\n                netsIds: convertToIntArray(netsIds),\r\n                hostsIds: convertToIntArray(hostsIds),\r\n                isFetching: false,\r\n                didInvalidate: false\r\n            })\r\n        case INVALIDATE_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: false,\r\n                didInvalidate: true\r\n            })\r\n        default:\r\n            return rootElements\r\n    }\r\n}\r\nexport default rootElementsIds","import cloneDeep from 'lodash/cloneDeep'\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {convertToIntArray, isItterable} from '../helperFunctions'\r\n\r\nconst initialDataStore = {\r\n    networks: {},\r\n    hosts: {},\r\n    selectedNets: [],\r\n    selectedHosts: []\r\n}\r\nconst networkElementInitialState = {\r\n    netLocations: {},\r\n    netChildren: [],\r\n    hostChildren: [],\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\nconst hostElementInitialState = {\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param netData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleNetworkElement = (stateOfElement = networkElementInitialState, actionType, netData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {netId: id, address: ipAddress, netmask, comment, vrfId, vrfName, vrfRd, netLocations, net_children: netChildren, host_children: hostChildren} = netData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                netmask,\r\n                comment,\r\n                vrfId,\r\n                vrfName,\r\n                vrfRd,\r\n                netLocations: JSON.parse(netLocations),\r\n                netChildren: convertToIntArray(netChildren),\r\n                hostChildren: convertToIntArray(hostChildren),\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            return Object.assign({}, stateOfElement, {\r\n                isExpanded: !stateOfElement.isExpanded,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst handleHostElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, ipAddress, comment, macAddress} = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                macAddress,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst expandNetworkElement = (element) => {\r\n    return Object.assign({...cloneDeep(element), isExpanded: true})\r\n}\r\nconst selectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: true})\r\n}\r\nconst deselectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: false})\r\n}\r\n\r\nconst netData = (store = initialDataStore, action) => {\r\n    const {type, payload = {}} = action\r\n    const {networks, hosts, selectedNets, selectedHosts} = store\r\n\r\n    const {netsIds = [], networksData = {}, hostsIds = [], hostsData = {}, id} = payload\r\n\r\n    const updatedNetworkElements = {}\r\n    const updatedHostElements = {}\r\n    let updatedSelectedNets = []\r\n    let updatedSelectedHosts = []\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = {...handleNetworkElement(networks[id], type), id}\r\n            })\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = {...handleHostElement(hosts[id], type), id}\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case RECEIVE_ELEMENTS:\r\n            if (isItterable(networksData)) {\r\n                for (const data of networksData) {\r\n                    const {netId: id} = data\r\n                    updatedNetworkElements[id] = handleNetworkElement(networks[id], type,data)\r\n                }\r\n            }\r\n            if (isItterable(hostsData)) {\r\n                for (const data of hostsData) {\r\n                    const {__id: id} = data\r\n                    updatedHostElements[id] = handleHostElement(hosts[id], type,data)\r\n                }\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            updatedNetworkElements[id] = handleNetworkElement(networks[id], type)\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case NET_ITEMS_EXPAND:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = expandNetworkElement(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case SELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = selectItem(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: netsIds})\r\n         case DESELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = deselectItem(networks[id])\r\n            })\r\n            updatedSelectedNets = selectedNets.filter(id => !netsIds.includes(id))\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: updatedSelectedNets})\r\n        case SELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = selectItem(hosts[id])\r\n            })\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: hostsIds})\r\n        case DESELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = deselectItem(hosts[id])\r\n            })\r\n            updatedSelectedHosts = selectedHosts.filter(id => !hostsIds.includes(id))\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: updatedSelectedHosts})\r\n        case UPDATE_NET_ITEMS:\r\n            const {itemsState = {}} = payload\r\n            for (const [id, item] of Object.entries(itemsState)) {\r\n                const fromStore = store.networks[id]\r\n                if (!fromStore) continue\r\n                updatedNetworkElements[id] = Object.assign(cloneDeep(fromStore), item)\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        default:\r\n            return store\r\n    }\r\n}\r\n\r\nexport default netData\r\n","import {\r\n    SET_CURSOR,\r\n    SET_FILTER,\r\n    SHOW_RESULT_ITEM,\r\n    BACKUP_NET_ITEMS\r\n} from '../constants/actions'\r\n\r\nconst initialFilterStore = {\r\n    itemList: [],\r\n    hostIdBackupList: [],\r\n    netIdBackupList: [],\r\n    hostItemsBackup: {},\r\n    netItemsBackup: {},\r\n    cursor: 0,\r\n}\r\n\r\nconst filter = (store = initialFilterStore, action) => {\r\n    const {type, payload} = action\r\n    // const {itemList, hostStateBackups, netStateBackup, cursor} = store\r\n\r\n    switch (type) {\r\n        case SET_FILTER:\r\n            const {searchResult} = payload\r\n            return {...store, itemList: searchResult, cursor: 0}\r\n        case SET_CURSOR:\r\n            const {position} = payload\r\n            return {...store, cursor: position}\r\n        case BACKUP_NET_ITEMS:\r\n            const {itemsState} = payload\r\n            const netIdBackupList = Object.keys(itemsState).map(id => parseInt(id))\r\n            return {...store, netItemsBackup: itemsState, netIdBackupList}\r\n        case SHOW_RESULT_ITEM:\r\n        default:\r\n            return store\r\n    }\r\n}\r\nexport default filter","import {combineReducers} from 'redux'\r\nimport rootElementsIds from './rootElementsIds'\r\nimport netData from './netData'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    rootElementsIds,\r\n    netData,\r\n    filter\r\n})\r\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport 'isomorphic-fetch'\n\nimport './globalStyles/bootstrap/custBootstrap.scss'\n\nimport App from \"./components/App\";\nimport AppNavbar from './components/AppNavbar'\nimport IpamTable from './components/IpamTable'\nimport './components/fontAwesome/faLibrary.js'\nimport configureStore from './configureStore'\nimport {URL_REQUEST_ROOT_ELEMENTS_ID, URL_REQUEST_NET_ELEMENTS_BY_ID, URL_REQUEST_HOST_ELEMENTS_BY_ID} from './constants/IpamTable'\n\nconst store = configureStore()\n//debug only\nwindow.store = store\nconsole.log('API_GET_ROOT_IDS', URL_REQUEST_ROOT_ELEMENTS_ID)\nconsole.log('API_GET_NET_ELEMENTS_BY_ID', URL_REQUEST_NET_ELEMENTS_BY_ID)\nconsole.log('API_GET_HOST_ELEMENTS_BY_ID', URL_REQUEST_HOST_ELEMENTS_BY_ID)\n\nrender(\n    <Provider store={store}>\n        <App>\n            <App.Header>\n                <AppNavbar />\n            </App.Header>\n            <App.Body>\n                <IpamTable/>\n            </App.Body>\n            {/*<App.Footer>*/}\n\n            {/*</App.Footer>*/}\n        </App>\n    </Provider>,\n    document.getElementById(\"root\"));","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default function configureStore() {\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        return createStore(\r\n            reducer,\r\n            compose(\r\n                applyMiddleware(\r\n                    thunkMiddleware\r\n                ),\r\n                window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            )\r\n\r\n        )\r\n    }\r\n    return createStore(\r\n        reducer,\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n\r\n}"],"sourceRoot":""}