{"version":3,"sources":["components/NetModalWindow/style.module.css","components/Base/Input2/style.module.css","components/Base/Select/style.module.css","img/logo_brs_small.png","components/AppNavbar/navBar.module.css","components/App/appContext.js","components/App/styles.js","components/App/index.js","components/AppNavbar/index.js","components/AppNavbar/URLs.js","constants/actions.js","constants/IpamTable.js","actions/netItems.js","actions/rootElementsIds.js","actions/filter.js","components/Table/Theme/Utils/index.js","components/Table/TableContext/index.js","components/Table/tableConstants.js","components/Table/Column/index.js","components/Table/Row/index.js","components/Table/Header/index.js","components/Table/Body/index.js","components/Table/TableFooter/index.js","components/Table/Footer/index.js","components/Table/Pagination/selectReactCustomStyle.js","components/Table/Pagination/paginationConstants.js","components/Table/Theme/index.js","components/Table/Pagination/index.js","components/Table/Pagination2/styles.js","components/Table/Pagination2/index.js","components/Table/Pagination3/styles.js","components/Table/Pagination3/index.js","components/Table/jssInstance.js","components/Table/fontAwesome/faLibrary.js","components/Table/index.js","components/IpamTable/NetRecordRow/styles.js","components/IpamTable/NetRecordRow/index.js","components/IpamTable/HostRecordRow/styles.js","components/IpamTable/HostRecordRow/index.js","components/IpamTable/ChildrenRowsContainer/index.js","components/IpamTable/RowsContainer/index.js","components/IpamTable/selectors/index.js","components/FilterFactory/SimpleSearch/constants.js","components/FilterFactory/SimpleSearch/index.js","components/FilterFactory/index.js","components/Base/Input2/index.js","components/Base/Select/index.js","components/NetModalWindow/index.js","components/IpamTable/index.js","components/fontAwesome/faLibrary.js","helperFunctions/index.js","reducer/rootElementsIds.js","reducer/netData.js","reducer/filter.js","reducer/index.js","index.js","configureStore.js"],"names":["module","exports","modalBody","modalBodySmall","formGroupZeroMargin","indents","size","__webpack_require__","p","customHeader","AppContext","React","createContext","styles","app","height","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","msGridColumns","msGridRows","header","gridArea","msGridRow","msGridColumn","body","overflowY","footer","cssSheet","create","preset","createStyleSheet","attach","App","appRefs","_this2","this","css","classes","react_default","a","createElement","className","ref","el","appContext","Provider","value","props","children","Component","Header","_Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this3","Consumer","_ref","Body","_Component3","_this4","_ref2","Footer","_Component4","_this5","_ref3","imgStyle","width","AppNavbar","react_bootstrap_es","fluid","Brand","href","src","logo","style","alt","eventKey","title","id","pullRight","divider","REQUEST_ROOT_ELEMENTS_ID","RECEIVE_ROOT_ELEMENTS_ID","INVALIDATE_ROOT_ELEMENTS_ID","REQUEST_ELEMENTS","RECEIVE_ELEMENTS","INVALIDATE_ELEMENTS","NET_ITEM_TOGGLE_EXPAND_COLLAPSE","NET_ITEMS_EXPAND","UPDATE_NET_ITEMS","SELECT_NET_ITEMS","DESELECT_NET_ITEMS","SELECT_HOST_ITEMS","DESELECT_HOST_ITEMS","BASE_URL","protocol","window","location","hostname","port","concat","URL_REQUEST_ROOT_ELEMENTS_ID","URL_REQUEST_NET_ELEMENTS_BY_ID","URL_REQUEST_HOST_ELEMENTS_BY_ID","URL_FILTERED_SEARCH","NET_DATA_URL","VRF_LIST_URL","NET_SUBMIT_URL","GET_NET_PARENT","LAST_UPDATE_SHIFT_HOURS","requestElements","netsIds","hostsIds","type","payload","receiveElements","networksData","hostsData","updateNetItems","itemsState","getInvalidatedData","store","elementsIds","length","filter","didInvalidate","fetchElementsIfNeeded","_ref4","dispatch","getState","filteredNetsIds","netData","networks","filteredHostsIds","hosts","_ref5","_ref6","asyncToGenerator","regenerator_default","mark","_callee2","requestsArray","netsFormData","netsDataRequest","hostsFormData","hostsDataRequest","pArray","fetchResult","result","wrap","_context2","prev","next","FormData","append","Request","mode","method","push","abrupt","map","_ref7","_callee","request","response","_context","fetch","sent","json","stop","_x2","Promise","all","reduce","acc","assign","t0","console","log","message","_x","fetchNetData","receiveRootElementsId","data","fetchRootElementsId","res","rootElementsIds","axios","get","prevIdx","setFilter","searchResult","setCursor","position","backupNetItems","showFilteredItem","idx","itemList","netIdBackupList","currentItem","prewItem","undefined","check","not","object","rec_type","ip_path","path","string","split","item","parseInt","netPathIds","toConsumableArray","restoreNetIdList","netId","includes","restBackupNetIdList","backupNetIdList","netItemsForRestoring","itemsIds","forEach","itemId","netItemsBackup","_filter$netItemsBacku","isSelected","isExpanded","netItemsFilterStoreSlice","netItemsForBackuping","_netItemsBackup$itemI","_netData$networks$ite","netItemsDataSlice","emptyObject","deselectNetItems","deselectHostItems","selectNetItems","selectHostItems","color","Color","rgb","toString","darkenColor","ratio","darken","lightenColor","lighten","TableContext","tableConnect","_PureComponent","WithTableContext","_this","tableContext","PureComponent","TableProvider","DEFAULT_TABLE_STYLE","DEFAULT_VALUES","fetchData","_method","resolve","bodyDataKey","footerDataKey","DEFAULT_CSS_CLASS_NAMES","Column","innerStyles","_this$props","index","minWidth","maxWidth","fixed","accessor","filterable","sortable","_this$props$tableCont","columnsParams","dimensions","columnsSizes","_this$props2","cssClasses","isHeader","writeParams","joinCss","saveColumnParams","join","hint","defaultProps","padding","changeWidth","order","Row","jssSheet","isFooter","tableHeaderRowDc","tableFooterRowDc","tableBodyRowDc","selectedRow","rowType","_this$props2$tableCon","filterComponentsByType","createRowRef","injectedProps","es6","disable","holdToDisplay","contextMenuId","renderTag","attributes","data-row-type","data-id","collect","scrollSz","scrollBodySz","_this$props3","_this$props3$id","deleteRowRef","tableInnerStyles","table","tableHeaderSz","headerInnerStyles","columnsCss","rows","lastRow","columns","column","columnClasses","innerCss","columnClass","columnSizeClass","columnDecoClass","cloneElement","buildHeaderRows","tbodyInnerStyles","tableBody","tableBodyDc","tableBodySz","parseData","array","rowData","rowIndex","Table_Row","colIndex","Table_Column","buildBodyHeader","cssClass","bodyref","tbodyRef","_this$props$tableCont2","formBodyData","hideHeader","TableFooter","tfootInnerStyles","tableFooter","tableFooterDc","childrenWrapper","Children","count","buildTableFooterHeader","footerContainer","footerContainerDc","pagination","customStyles","option","base","state","objectSpread","container","control","minHeight","dropdownIndicator","input","margin","DEFAULT_VALUE_INDEX","STYLE","SELECT_OPTIONS","label","hexCode","tableBgColor","tableTextColor","headerBgColor","headerTextColor","bodyBgColor","bodyTextColor","tableFooterBgColor","tableFooterTextColor","footerBgColor","footerTextColor","footerIconColor","disabledColor","border","stripedColorFactor","hoverColorFactor","paddingHeaderCell","paddingBodyCell","paddingTableFooterCell","selectedRowBgColor","selectedRowTextColor","justifyContent","alignItems","PAGINATION","& .rowsOnPage","containerDc","fontSize","backgroundColor","pageNumber","& input","pageNumberDc","borderRadius","disabled","theme","navButton","Pagination","defaultValueRecordsOnPage","selectDefaultValueIndex","selectOptions","currentPage","pageNumberInput","totalPages","rowsOnPage","pageNumberBlock","onChange","onChangePageNumberBlock","onKeyUp","onKeyUpPageNumberBlock","e","target","setState","prevState","keyCode","onChangeSelect","opt","onClickNextPage","newPage","String","onClickPrevPage","onClickFirstPage","onClickLastPage","selectProps","options","defaultValue","menuPlacement","_this$state","onClick","index_es","icon","react_select_esm","shareState","updateData","selectWidth","injectSheet","Pagination2","prevItemList","itemNumberInput","lastItemIdx","currentItemIdx","resetState","currentItemList","updateCurrentItemInput","filterCursor","currentNumberBlock","setFilterCursor","newState","_this$props$filterIte","filterItemList","_this$props$filterIte2","current","Pagination3","isVisible","updateState","newItemList","onNewItemsList","onHideFilter","listLength","filteredItemsList","inputListLength","newFilterCursor","_this$props4","searchingState","jss","library","add","faFastBackward","faBackward","faForward","faFastForward","faSquare","faCheck","Table","tableBodyData","tableFooterData","tableRefs","createRef","bodyContainer","scroll","cellWidth","bodyCellWidth","scrollPosition","tableStyles","flexDirection","boxSizing","& table, & thead, & tbody, & tfoot, & tr, & th, & td","tableContainer","flexGrow","overflowX","flexShrink","tableHeaderBodyContainer","flexBasis","tableFooterContainer","tableHeaderContainer","tableBodyContainer","tableLayout","tableHeader","tableContainerDc","tableBodyContainerDc","& th","&:nth-child(odd)","bodyStriped","& td","wordWrap","& td.scrollBodyCell","&:hover","containerSz","tableBodyContainerSz","tableFooterContainerSz","& tr","link","updateColumnsSizesInDOM","_this$tableContext","columnSet","getRule","prop","columnsWidth","updateDimensions","_this$tableContext2","containerWidth","clientWidth","sumOfMinWidth","sum","scrollSize","freeSpace","Math","trunc","numberOfExtendableColumns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","spacePerColumn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","additionWidth","updateColumns","states","parseFetchedResult","t1","number","scrollbarSizeLoad","scrollSizes","scrollbarWidth","scrollbarHeight","name","cssStyles","scrollToRow","component","injectIndex","child","Error","hdChildren","lastRowChildren","columnCssPrefix","columnSizeCssPrefix","columnDecoCssPrefix","_this2$jssSheet$addRu","params","addRules","defineProperty","rowId","alignment","offset","rowRef","getRowRef","bodyRef","scrollAt","element","yScroll","getBoundingClientRect","box","toLowerCase","top","bottom","scrollBy","setColumnsCss","react_scrollbar_size_default","onLoad","addEventListener","tabRefs","prevProps","prevData","targetRow","removeEventListener","innerCssClasses","extCssClasses","nonEmptyString","Caption","bordered","isStretch","LVL_INDENT_WIDTH","lvlBlock","marginRight","cursor","NetRecordRow","lvlIndent","lvl","ip","netmask","comment","vrfName","bgpAs","netLocations","netChildren","hostChildren","isFetching","toggleIconHandler","rowProps","locations","_arr","values","_i","bgOldDevice","HostRecordRow","convertLastUpdate","lastUpdate","lastUpdateMs","date","Date","setHours","getHours","dateFormat","mask","masklen","ipCidr","portDescr","portComment","portName","devName","devType","age","dns","ChildrenRowsContainer","parentNetId","IpamTable_RowsContainer","RowsContainer","netIdsForUpdate","hostIdsForUpdate","netsData","netRows","Fragment","IpamTable_NetRecordRow","IpamTable_ChildrenRowsContainer","hostRows","IpamTable_HostRecordRow","updateDataIfNeeded","connectAdvanced","ownProps","itemData","getFilterItemList","getFilterCursor","getCurrentFilteredItem","createSelector","getRootIds","rootNetsIds","rootHostsIds","rootNetsData","rootHostsData","hostData","roots","MIN_SEARCH_LENGTH","SimpleSearch","minSearchLength","searchBy","accessorList","statement","defaultStatement","timerId","isEmpty","filterState","updateParentState","updateFilterState","onChangeHandler","onKeyUpHandler","clearTimeout","placeholder","setTimeout","minLengthForSearch","FilterFactory","filtersStore","listeners","statementSet","=","!=",">",">=","<","<=","beginWith","endWith","empty","notEmpty","subscribe","callBack","function","listenerId","unsubscribe","listenerID","listener","createFilter","filterType","filterProps","keys","indexOf","filterId","FilterFactory_SimpleSearch","propTypes","Input2","clearMargin","addOnPosition","addOnText","controlLabel","emptyString","formControl","readOnly","customSize","leftAddOn","Addon","rightAddOn","react","controlId","bsClass","Select","prevValue","prevFilter","isLoading","optionsInvalidate","optionList","setDefaultSelected","handleChange","isNaN","defaultSelectedValue","checkSelected","checkFilter","isEqual","invokeListeners","JSON","stringify","cloneDeep","subscriber","buildOptionList","emptyOption","emptyValue","emptyLabel","optionsSet","isAsync","updateRemoteOptionList","updateLocalOptionList","remoteDataFetch","remoteDataFetchDefault","remoteSourceUrl","post","_context3","componentClass","smallSize","updateIfNeeded","defaultSelected","selected","NetModalWindow","prevVisibleState","initialState","prevVrfData","prevList","netIp","netComment","dataLoading","dataReady","saving","vrfId","vrfList","initialNetData","currentNetData","delNet","newNet","getParentNetworkId","errors","clearStateIfGetInvisible","clearState","vrfData","vrf","vrf_id","vrf_name","vrf_rd","vrf_comment","handleClose","onClose","dataValidate","_this$state2","handleSubmit","nonEmptyArray","alert","onSubmit","_callee3","fetchVrfList","_callee4","_context4","ipFormat","RegExp","test","onChangeNetIp","onChangeNetComment","onChangeVrf","_this$state3","align","md","Base_Input2","Base_Select","modalTitle","show","onHide","closeButton","Title","custCss","bsStyle","bsSize","response1","vrfRawData","net_ip","net_comment","serverData","net_id","_context6","prevNetData","updatedNetData","IpamTable","searching","isNetModalVisible","onCloseNetModal","onSubmitNetData","newNetData","netIds","Set","invalidateElementsInStore","has","forceUpdateRootItems","factory","onChangeFiltersState","filterStatements","updateFilterStore","_response$data$search","nets","host_ports","hideUnusedRows","renderBodyData","_data$netsIds","_data$hostsIds","showCurrentFilteredItem","restoreStateFromFilter","currentFilteredItem","fact","components_Table","Table_Header","Table_Body","Table_Footer","Table_Pagination3","foo","components_NetModalWindow","rootnetsIds","rootHostsId","_getState","_getState$rootElement","_x4","_x5","forceUpdateRootIds","_x6","_x7","invalidateElements","nonEmptyObject","_getRootIds","fas","convertToIntArray","dataString","idArray","filteredIds","trim","isItterable","obj","rootElements","action","initialDataStore","selectedNets","selectedHosts","hostElementInitialState","handleNetworkElement","stateOfElement","actionType","net_mask","vrfRd","net_children","host_children","net_location","bgp_as","parse","handleHostElement","port_id","port_ip","maskLen","port_masklen","port_mask","port_ip_cidr","mac","port_mac","dev_location","port_comment","port_desc","port_name","dev_title","dev_type","dev_hostname","dev_last_update","dev_last_update_ms","dev_age_h","selectItem","deselectItem","_action$payload","_payload$netsIds","_payload$networksData","_payload$hostsIds","_payload$hostsData","updatedNetworkElements","updatedHostElements","updatedSelectedNets","updatedSelectedHosts","_payload$itemsState","entries","slicedToArray","fromStore","initialFilterStore","hostIdBackupList","hostItemsBackup","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","createStore","reducer","compose","applyMiddleware","thunkMiddleware","render","es","components_App","components_AppNavbar","components_IpamTable","document","getElementById"],"mappings":"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","file":"static/js/main.5d7cc78b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"style_modalBody__2wfq7\",\"modalBodySmall\":\"style_modalBodySmall__3SHRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__2ctIA\",\"indents\":\"style_indents__1vRt1\",\"size\":\"style_size__2UtDY style_indents__1vRt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__3amkx\",\"indents\":\"style_indents__2vdkK\",\"size\":\"style_size__15Llz style_indents__2vdkK\"};","module.exports = __webpack_public_path__ + \"static/media/logo_brs_small.9f0fd020.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customHeader\":\"navBar_customHeader__1B2rr\"};","import React from 'react'\r\nconst AppContext = React.createContext()\r\nexport default AppContext","const styles = {\r\n    app: {\r\n        height: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        gridTemplateRows: 'auto 1fr auto',\r\n        gridTemplateAreas: \"'header' 'body' 'footer'\",\r\n\r\n        msGridColumns: '1fr',\r\n        msGridRows: 'auto 1fr auto',\r\n    },\r\n    header: {\r\n        gridArea: 'header',\r\n\r\n        msGridRow: 1,\r\n        msGridColumn: 1\r\n    },\r\n    body: {\r\n        gridArea: 'body',\r\n        overflowY: 'auto',\r\n        msGridRow: 2,\r\n        msGridColumn: 1,\r\n    },\r\n    footer: {\r\n        gridArea: 'footer',\r\n\r\n        msGridRow: 3,\r\n        msGridColumn: 1\r\n    }\r\n}\r\nexport default styles","import React, {Component} from 'react'\r\nimport AppContext from './appContext'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\nimport styles from './styles'\r\n\r\nimport '../../globalStyles/bootstrap/custBootstrap.scss'\r\n\r\nconst jss = create(preset())\r\nconst cssSheet = jss\r\n    .createStyleSheet(styles)\r\n    .attach()\r\n\r\nclass App extends Component{\r\n    appRefs = {\r\n        app: null,\r\n        header: null,\r\n        body: null,\r\n        footer: null\r\n    }\r\n\r\n    render() {\r\n        const {classes: css} = cssSheet\r\n        return (\r\n            <div className={css.app} ref={el => this.appRefs.app = el}>\r\n                <AppContext.Provider value={{\r\n                    appRefs: this.appRefs,\r\n                    css\r\n                }}>\r\n                    {this.props.children}\r\n                </AppContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n}\r\n\r\nApp.Header = class Header extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.header} ref={el => appRefs.header = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Body = class Body extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.body} ref={el => appRefs.body = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Footer = class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.footer} ref={el => appRefs.footer = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    appRefs: PropTypes.shape({\r\n        app: PropTypes.node,\r\n        header: PropTypes.node,\r\n        body: PropTypes.node,\r\n        footer: PropTypes.node\r\n    })\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {Navbar, Nav, NavItem, NavDropdown, MenuItem} from 'react-bootstrap'\r\nimport logo from '../../img/logo_brs_small.png'\r\nimport styles from './navBar.module.css'\r\n// import CSSModules from 'react-css-modules'\r\nimport * as URL from './URLs'\r\n\r\nconst imgStyle = {\r\n    width: 38\r\n}\r\n\r\nconst AppNavbar = () => {\r\n    return (\r\n        <Navbar fluid>\r\n            <Navbar.Header>\r\n                <Navbar.Brand className={styles.customHeader} >\r\n                    <a href={URL.root}><img src={logo} style={imgStyle} alt=\"img\"/></a>\r\n                </Navbar.Brand>\r\n            </Navbar.Header>\r\n\r\n            <Nav>\r\n                <NavItem eventKey={1} href={URL.offices}>\r\n                    Офисы\r\n                </NavItem>\r\n                <NavItem eventKey={2} href={URL.devices}>\r\n                    Оборудование\r\n                </NavItem>\r\n                <NavDropdown eventKey={7} title=\"Phones\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={7.1} href={URL.PhonesInfo}>Телефоны Инфо</MenuItem>\r\n                    <MenuItem eventKey={7.1} href={URL.PhonesAndUsers}>Телефоны по ФИО</MenuItem>\r\n                </NavDropdown>\r\n                <NavDropdown eventKey={3} title=\"IP Planing\" id=\"basic-nav-dropdown-2\">\r\n                    <MenuItem eventKey={3.1} href={URL.ip_ipam}>IPAM</MenuItem>\r\n                </NavDropdown>\r\n                <NavItem eventKey={4} href={URL.reports}>\r\n                    Reports\r\n                </NavItem>\r\n                <NavDropdown eventKey={5} title=\"Phone Reports\" id=\"basic-nav-dropdown-3\">\r\n                    <MenuItem eventKey={5.1} href={URL.reportPhoneByModels}>По моделям</MenuItem>\r\n                    <MenuItem eventKey={5.2} href={URL.reportPhoneByClusters}>По кластерам</MenuItem>\r\n                    <MenuItem eventKey={5.3} href={URL.reportPhoneByNotUsed}>По неиспользуемым</MenuItem>\r\n                </NavDropdown>\r\n\r\n            </Nav>\r\n\r\n            <Nav pullRight>\r\n                <NavDropdown eventKey={6} title=\"Справочники\" id=\"basic-nav-dropdown-2\">\r\n                    <MenuItem eventKey={6.1} href={URL.dictRegions}>Регионы</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictCities}>Города</MenuItem>\r\n                    <MenuItem eventKey={6.3} href={URL.dictOffice_stats}>Статусы офисов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.dictDevices}>Оборудование</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictPortTypes}>Типы портов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.HwLogs}>Логи Hardware</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.PhonesLogs}>Логи Phones</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.4} href={URL.dictVRFs}>VRF</MenuItem>\r\n                    <MenuItem eventKey={6.4} href={URL.dictNetworksTable}>Networks(Table)</MenuItem>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default AppNavbar\r\n","export const root = \"/\"\r\nexport const offices = \"/locations\"\r\nexport const devices = \"/device/info\"\r\nexport const ip_ipam = \"/network/ipam\"\r\nexport const reports = \"/report/new\"\r\n\r\nexport const reportPhoneByModels = \"/report/phoneStatsReport\"\r\nexport const reportPhoneByClusters = \"/report/phoneStatsByClustersReport\"\r\nexport const reportPhoneByNotUsed = \"/report/phoneStatsByNotUsedReport\"\r\n\r\nexport const dictRegions = \"/admin/regions\"\r\nexport const dictCities = \"/admin/cities\"\r\nexport const dictOffice_stats = \"/admin/officeStatuses\"\r\nexport const dictDevices = \"/admin/devparts\"\r\nexport const dictPortTypes = \"/admin/portTypes\"\r\nexport const dictVRFs = \"/admin/vrf\"\r\nexport const dictNetworksTable = \"/admin/NetworksTab\"\r\n\r\nexport const HwLogs = \"/logs\"\r\nexport const PhonesLogs = \"/logs/phones\"\r\n\r\nexport const PhonesInfo = \"/basePhone\"\r\nexport const PhonesAndUsers = \"/usersPhone\"\r\n","export const REQUEST_ROOT_ELEMENTS_ID = 'REQUEST_ROOT_ELEMENTS_ID'\r\nexport const RECEIVE_ROOT_ELEMENTS_ID = 'RECEIVE_ROOT_ELEMENTS_ID'\r\nexport const INVALIDATE_ROOT_ELEMENTS_ID = 'INVALIDATE_ROOT_ELEMENTS_ID'\r\n\r\nexport const REQUEST_ELEMENTS = 'REQUEST_ELEMENTS'\r\nexport const RECEIVE_ELEMENTS = 'RECEIVE_ELEMENTS'\r\nexport const INVALIDATE_ELEMENTS = 'INVALIDATE_ELEMENTS'\r\n\r\nexport const NET_ITEM_TOGGLE_EXPAND_COLLAPSE = 'NET_ITEM_TOGGLE_EXPAND_COLLAPSE'\r\nexport const NET_ITEMS_EXPAND = 'NET_ITEMS_EXPAND'\r\nexport const UPDATE_NET_ITEMS = 'UPDATE_NET_ITEMS'\r\n\r\n\r\nexport const SET_FILTER = 'SET_FILTER'\r\nexport const SET_CURSOR = 'SET_CURSOR'\r\nexport const SHOW_RESULT_ITEM = 'SHOW_RESULT_ITEM'\r\nexport const BACKUP_NET_ITEMS = 'BACKUP_NET_ITEMS'\r\n// export const REFRESH_STATE_AND_BACKUP = 'REFRESH_STATE_AND_BACKUP'\r\n\r\nexport const SELECT_NET_ITEMS = 'SELECT_NET_ITEMS'\r\nexport const DESELECT_NET_ITEMS = 'DESELECT_NET_ITEMS'\r\nexport const SELECT_HOST_ITEMS = 'SELECT_HOST_ITEMS'\r\nexport const DESELECT_HOST_ITEMS = 'DESELECT_HOST_ITEMS'\r\n\r\n","const DEVELOPED_BASE_URL = 'netcmdb-loc.rs.ru:8082'\r\n// console.log('location ', window.location)\r\nconst BASE_URL = (() => {\r\n    const protocol = window.location.protocol\r\n    const hostname = window.location.hostname\r\n    const port = window.location.port\r\n    const developMode = hostname === 'localhost'\r\n    return developMode ? `${protocol}//${DEVELOPED_BASE_URL}` : `${protocol}//${hostname}${port==='' ? '' : ':'}${port}`\r\n})()\r\n\r\nexport const URL_REQUEST_ROOT_ELEMENTS_ID = `${BASE_URL}/ipam/rootElements.json`\r\n// export const URL_REQUEST_NET_ELEMENTS_BY_ID = `http://netcmdb-loc.rs.ru:8082/ipam/netElementsByIds.json`\r\n// export const URL_REQUEST_HOST_ELEMENTS_BY_ID = `http://netcmdb-loc.rs.ru:8082/ipam/hostElementsByIds.json`\r\nexport const URL_REQUEST_NET_ELEMENTS_BY_ID = `${BASE_URL}/ipam/netElementsByIds.json`\r\nexport const URL_REQUEST_HOST_ELEMENTS_BY_ID = `${BASE_URL}/ipam/hostElementsByIds.json`\r\nexport const URL_FILTERED_SEARCH = `${BASE_URL}/ipam/search.json`\r\nexport const NET_DATA_URL = `${BASE_URL}/api/getNetData.json`\r\nexport const VRF_LIST_URL= `${BASE_URL}/api/getVrfList.json`\r\nexport const NET_SUBMIT_URL = `${BASE_URL}/api/saveNetData.json`\r\nexport const CHECK_ABILITY_DELETE_NETWORK = `${BASE_URL}/api/saveNetData.json`\r\nexport const GET_NET_PARENT = `${BASE_URL}/api/getNetParent.json`\r\n\r\nexport const MAX_DEV_AGE = 72\r\nexport const LAST_UPDATE_SHIFT_HOURS = 4","// import {convertToIntArray, isDebug} from '../helperFunctions'\r\n\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS\r\n} from '../constants/actions'\r\nimport {\r\n    URL_REQUEST_NET_ELEMENTS_BY_ID, //should return JSON object like {netData: [array of data for each net ID]}\r\n    URL_REQUEST_HOST_ELEMENTS_BY_ID, //should return JSON object like {hostData: [array of data for each net ID]}\r\n} from '../constants/IpamTable'\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of int ID], hostsIds: [array of int ID}\r\n * @returns {{type: string, payload: {ids: *}}}\r\n */\r\nexport function requestElements({netsIds, hostsIds}) {\r\n    return {type: REQUEST_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function invalidateElements({netsIds, hostsIds}) {\r\n    return {type: INVALIDATE_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function receiveElements({networksData, hostsData}) {\r\n    return {type: RECEIVE_ELEMENTS, payload: {networksData, hostsData}}\r\n}\r\n\r\nexport function netItemToggleExpandCollapse(netItemId) {\r\n    return {type: NET_ITEM_TOGGLE_EXPAND_COLLAPSE, payload: {id: netItemId}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function selectNetItems(netsIds) {\r\n    return {type: SELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\nexport function deselectNetItems(netsIds) {\r\n    return {type: DESELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\n\r\nexport function updateNetItems(itemsState) {\r\n    return {type: UPDATE_NET_ITEMS, payload: {itemsState}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} hostsIds\r\n * @return {{type: string, payload: {hostsIds: number[]}}}\r\n */\r\nexport function selectHostItems(hostsIds) {\r\n    return {type: SELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\nexport function deselectHostItems(hostsIds) {\r\n    return {type: DESELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function netItemsExpand(netsIds) {\r\n    return {type: NET_ITEMS_EXPAND, payload: {netsIds}}\r\n}\r\n\r\n\r\n\r\n/**\r\n * check each element according elementsId in a given part of store and return array of ids that should be update\r\n * @param store object\r\n * @param elementsIds array\r\n */\r\nfunction getInvalidatedData(store, elementsIds) {\r\n    if (!elementsIds || elementsIds.length === 0) return []\r\n    return elementsIds.filter(id => {\r\n        return !store[id] || store[id].didInvalidate\r\n    })\r\n}\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of ids], hostsIds: [array of ids]}\r\n * @returns function\r\n */\r\nexport function fetchElementsIfNeeded({netsIds, hostsIds}) {\r\n    return (dispatch, getState) => {\r\n        const filteredNetsIds = getInvalidatedData(getState().netData.networks ,netsIds)\r\n        const filteredHostsIds = getInvalidatedData(getState().netData.hosts ,hostsIds)\r\n        if (filteredNetsIds.length > 0 || filteredHostsIds.length > 0) {\r\n            dispatch(fetchNetData({netsIds: filteredNetsIds, hostsIds: filteredHostsIds}))\r\n        }\r\n    }\r\n}\r\n\r\nfunction fetchNetData({netsIds, hostsIds}) {\r\n    return async (dispatch) => {\r\n        dispatch(requestElements({netsIds, hostsIds}))\r\n        const requestsArray = []\r\n        if (netsIds.length > 0) {\r\n            const netsFormData = new FormData()\r\n            netsFormData.append(\"netsIds\", netsIds)\r\n            const netsDataRequest = new Request(URL_REQUEST_NET_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: netsFormData,\r\n            })\r\n            requestsArray.push(netsDataRequest)\r\n        }\r\n        if (hostsIds.length > 0) {\r\n            const hostsFormData = new FormData()\r\n            hostsFormData.append(\"hostsIds\", hostsIds)\r\n            const hostsDataRequest = new Request(URL_REQUEST_HOST_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: hostsFormData,\r\n            })\r\n            requestsArray.push(hostsDataRequest)\r\n        }\r\n        if (requestsArray.length === 0) return\r\n\r\n        try {\r\n            const pArray = requestsArray.map(async request => {\r\n                const response = await fetch(request)\r\n                return response.json()\r\n            })\r\n            const fetchResult = await Promise.all(pArray)\r\n            const result = fetchResult.reduce((acc, result) => {return Object.assign(acc, result)}, {})\r\n            dispatch(receiveElements(result))\r\n        } catch (error) {\r\n            console.log('---FETCH ELEMENTS ERROR!: ', error.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded} from './netItems'\r\nimport axios from 'axios'\r\nimport {URL_REQUEST_ROOT_ELEMENTS_ID} from '../constants/IpamTable'\r\n\r\nexport function requestRootElementsId() {\r\n    return {type: REQUEST_ROOT_ELEMENTS_ID}\r\n}\r\n\r\nexport function receiveRootElementsId(data) {\r\n    const {netsIds, hostsIds} = data\r\n    return {type: RECEIVE_ROOT_ELEMENTS_ID, payload: {netsIds, hostsIds}}\r\n}\r\nexport function invalidateRootElementsId() {\r\n    return {type: INVALIDATE_ROOT_ELEMENTS_ID}\r\n}\r\nfunction fetchRootElementsId() {\r\n    return async (dispatch) => {\r\n        dispatch(requestRootElementsId())\r\n        const res = await axios.get(URL_REQUEST_ROOT_ELEMENTS_ID)\r\n        const {rootElementsIds} = res.data\r\n        dispatch(receiveRootElementsId(rootElementsIds))\r\n    }\r\n}\r\nfunction shouldFetchRootElementsId(state) {\r\n    const {rootElements} = state\r\n    return !rootElements || rootElements.didInvalidate\r\n}\r\n\r\nexport function fetchRootElementsIdIfNeeded() {\r\n    return async (dispatch, getState) => {\r\n        if (shouldFetchRootElementsId(getState())) {\r\n            await dispatch(fetchRootElementsId())\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    }\r\n}\r\nexport function forceUpdateRootElements() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        await dispatch(fetchRootElementsId())\r\n        const {rootElementsIds: {netsIds, hostsIds}} = getState()\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n}\r\nexport function forceUpdateRootElementsIds() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        dispatch(fetchRootElementsId())\r\n    }\r\n}","import check from 'check-types'\r\nimport {\r\n    SET_FILTER,\r\n    SET_CURSOR,\r\n    BACKUP_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded, netItemsExpand, selectNetItems, deselectNetItems, selectHostItems, deselectHostItems, updateNetItems} from '../actions/netItems'\r\n\r\nexport const setFilter = ({searchResult}) => ({type: SET_FILTER, payload: {searchResult}})\r\nexport const setCursor = (position) => ({type: SET_CURSOR, payload: {position}})\r\nexport const backupNetItems = (itemsState) => ({type: BACKUP_NET_ITEMS, payload: {itemsState}})\r\n// export const refreshStateAndBackup = (backupList, restoreList) => ({type: REFRESH_STATE_AND_BACKUP, payload: {backupList, restoreList}})\r\n\r\nconst netItemsDataSlice = (itemsIds, store) => {\r\n    const {netData, filter: {netItemsBackup}} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        } else {\r\n            const {isSelected, isExpanded} = netData.networks[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n\r\n    })\r\n    return result\r\n}\r\nconst netItemsFilterStoreSlice = (itemsIds, store) => {\r\n    const {filter} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (filter.netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = filter.netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n    })\r\n    return result\r\n}\r\n// const hostItemsDataSlice = (itemsIds, store) => {\r\n//     const {netData} = store\r\n//     const result = {}\r\n//     itemsIds.forEach((itemId) => {\r\n//         const {id, isSelected, isExpanded} = netData.hosts[itemId]\r\n//         result[id] = {isSelected, isExpanded}\r\n//     })\r\n//     return result\r\n// }\r\n\r\nexport const showFilteredItem = ((prevItemList, prevIdx) => (idx) => {\r\n    // if (prevIdx === idx) return () => {}\r\n\r\n    return (dispatch, getState) => {\r\n        const {filter} = getState()\r\n        const {itemList, netIdBackupList} = filter\r\n        if (!itemList || (itemList.length && itemList.length === 0)) return\r\n        const currentItem = itemList[idx]\r\n        const prewItem = prevIdx !==undefined ? itemList[prevIdx] : {}\r\n\r\n        if (check.not.object(currentItem)) return\r\n\r\n        const {id, rec_type, ip_path} = currentItem\r\n        const path = check.string(ip_path) ? ip_path.split(',').map((item) => parseInt(item)) : []\r\n        const netPathIds = [...path]\r\n        const hostsIds = []\r\n        if (rec_type === 'network') {\r\n            netPathIds.push(id)\r\n        } else if (rec_type === 'host') {\r\n            hostsIds.push(id)\r\n        }\r\n        dispatch(fetchElementsIfNeeded({netsIds: netPathIds, hostsIds}))\r\n        //backup states\r\n        const restoreNetIdList = netIdBackupList.filter(netId => !netPathIds.includes(netId))\r\n        const restBackupNetIdList = netIdBackupList.filter(netId => !restoreNetIdList.includes(netId))\r\n        const backupNetIdList = netPathIds.filter(netId => !restBackupNetIdList.includes(netId)).concat(restBackupNetIdList)\r\n\r\n        const netItemsForRestoring = netItemsFilterStoreSlice(restoreNetIdList, getState())\r\n        const netItemsForBackuping = netItemsDataSlice(backupNetIdList, getState())\r\n        if (check.not.emptyObject(netItemsForRestoring)) {\r\n            dispatch(updateNetItems(netItemsForRestoring))\r\n        }\r\n        if (check.not.emptyObject(netItemsForBackuping)) {\r\n            dispatch(backupNetItems(netItemsForBackuping))\r\n        }\r\n        dispatch(netItemsExpand(path))\r\n        if (prewItem && prewItem.id !== undefined) {\r\n            if (prewItem.rec_type === 'network') {\r\n                dispatch(deselectNetItems([prewItem.id]))\r\n            } else if (prewItem.rec_type === 'host') {\r\n                dispatch(deselectHostItems([prewItem.id]))\r\n            }\r\n        }\r\n        if (rec_type === 'network') {\r\n            dispatch(selectNetItems([id]))\r\n        } else if (rec_type === 'host') {\r\n            dispatch(selectHostItems([id]))\r\n        }\r\n\r\n        prevIdx = idx\r\n    }\r\n})()\r\n\r\nexport function restoreSavedStates () {\r\n    return (dispatch, getState) => {\r\n        const {filter} = getState()\r\n        const {netItemsBackup} = filter\r\n        // const {selectedNets, selectedHosts} = netData\r\n        // if (selectedNets.length > 0) dispatch(deselectNetItems(selectedNets))\r\n        // if (selectedHosts.length > 0) dispatch(deselectHostItems(selectedHosts))\r\n        if (check.nonEmptyObject(netItemsBackup)) {\r\n            // console.log('restoreSavedStates')\r\n            dispatch(updateNetItems(netItemsBackup))\r\n            dispatch(backupNetItems({}))\r\n        }\r\n    }\r\n}\r\n","import Color from 'color'\r\n\r\nconst color = (color) => {\r\n    return Color(color).rgb().toString()\r\n}\r\nconst darkenColor = (color, ratio) => {\r\n    return Color(color).darken(ratio).rgb().toString()\r\n}\r\nconst lightenColor = (color, ratio) => {\r\n    return Color(color).lighten(ratio).rgb().toString()\r\n}\r\n\r\nexport {color, darkenColor, lightenColor}","import React, {PureComponent} from 'react'\r\nconst TableContext = React.createContext()\r\n\r\nexport const tableConnect = (Component)  => {\r\n    return class WithTableContext extends PureComponent {\r\n        render() {\r\n            return (<TableContext.Consumer>\r\n                {tableContext => <Component {...this.props} tableContext={tableContext} />}\r\n            </TableContext.Consumer>)\r\n        }\r\n    }\r\n}\r\n// export const tableConnect = (Component)  => {\r\n//     return function connectedComponent(props) {\r\n//         return (<TableContext.Consumer>\r\n//             {tableContext => <Component {...props} tableContext={tableContext} />}\r\n//         </TableContext.Consumer>)\r\n//     }\r\n// }\r\n\r\nexport const TableProvider =  TableContext.Provider\r\n\r\n","export const DEFAULT_TABLE_STYLE = {\r\n    columnPadding: '5px',\r\n\r\n    tableWidth: '100%',\r\n    tableMinWidth: '400px',\r\n    tableHeight: '100%',\r\n    tableMinHeight: '300px',\r\n\r\n    bordered: true,\r\n    border: '1px solid darkgray',\r\n\r\n    padding: '5px 10px',\r\n\r\n    columnMinWidth: '100px',\r\n    columnMaxWidth: 300,\r\n    scrollWidthPx: 17,\r\n\r\n    backgroundColor: {\r\n        table: '#d9d9d9',\r\n        header: '#d9d9d9',\r\n        body: '#d9d9d9',\r\n        tableFooter: '#d9d9d9',\r\n        footer: '#d9d9d9',\r\n    },\r\n    tablePadding: '10px',\r\n\r\n    pagination: {\r\n        visible: true,\r\n        width: 200\r\n    }\r\n}\r\n\r\nexport const DEFAULT_VALUES = {\r\n    fetchData: {\r\n        method: async () => Promise.resolve([]),\r\n        bodyDataKey: 'body',\r\n        footerDataKey: 'footer'\r\n    }\r\n}\r\n\r\n\r\nexport const DEFAULT_CSS_CLASS_NAMES = {\r\n    // header: 'thead',\r\n    // body: 'tbody',\r\n    // tableFooter: 'tfoot',\r\n    // footer: 'footer',\r\n    // row: 'row',\r\n    column: 'col_',\r\n    columnSz: 'colSz_',\r\n    columnDc: 'colDc_'\r\n}\r\n\r\nexport const CLASS_NAMES = {\r\n    table: 'Table',\r\n    header: 'Header',\r\n    body: 'Body',\r\n    tableFooter: 'TableFooter',\r\n    footer: 'Footer',\r\n    row: 'Row',\r\n    column: 'Column'\r\n}\r\n\r\nexport const CHROME_CONTAINER_PADDING = '17px'\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport {DEFAULT_TABLE_STYLE} from \"../tableConstants\";\r\n\r\nclass Column extends Component {\r\n\r\n    innerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    saveColumnParams() {\r\n        const {index, minWidth, maxWidth, fixed, accessor, filterable, sortable,  tableContext: {columnsParams, dimensions: {columnsSizes}}} = this.props\r\n        columnsSizes[index] = {\r\n            minWidth: parseInt(minWidth),\r\n            width: parseInt(minWidth),\r\n            maxWidth: parseInt(maxWidth),\r\n            fixed,\r\n        }\r\n        columnsParams[index] = {\r\n            accessor,\r\n            filterable,\r\n            sortable\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, cssClasses, children, isHeader, writeParams, tableContext: {joinCss}} = this.props\r\n        const innerStyles = this.innerStyles()\r\n            if (isHeader) {\r\n                if (writeParams) this.saveColumnParams()\r\n                return <th className={joinCss(innerStyles, cssClasses).join(\" \")}>{title ? title : children}</th>\r\n            } else {\r\n                return <td className={joinCss(innerStyles, cssClasses).join(\" \")} title={this.props.hint}>{children}</td>\r\n            }\r\n    }\r\n}\r\n\r\nColumn.propTypes = {\r\n    //from Row\r\n    isHeader: PropTypes.bool, //injected by Row\r\n    //from Header\r\n    writeParams: PropTypes.bool, // for internal use only! if set column have to write its params into tableContext.columnsParams (params like width ...)\r\n    //\r\n    title: PropTypes.string, //if not set will be used children\r\n    hint: PropTypes.string, //if not set will be used children\r\n    accessor: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.string),\r\n        PropTypes.string\r\n    ]),\r\n    minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    padding: PropTypes.string,\r\n    fixed: PropTypes.bool, // fix size of column\r\n    sortable: PropTypes.bool,\r\n    filterable: PropTypes.bool,\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    order: PropTypes.number, //can be used for columns reorder\r\n    index: PropTypes.number, //index number of column in config array\r\n}\r\nColumn.defaultProps = {\r\n    minWidth: DEFAULT_TABLE_STYLE.columnMinWidth,\r\n    maxWidth: DEFAULT_TABLE_STYLE.columnMaxWidth,\r\n    padding: DEFAULT_TABLE_STYLE.columnPadding,\r\n    fixed: false,\r\n    changeWidth: true,\r\n    sortable: false,\r\n    filterable: false,\r\n    order: 0,\r\n}\r\n\r\nexport default tableConnect(Column)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {tableConnect} from '../TableContext'\r\nimport Column from '../Column'\r\nimport {ContextMenuTrigger} from \"react-contextmenu\"\r\n\r\nclass Row extends Component {\r\n    innerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        const {isHeader, isFooter, isSelected} = this.props\r\n        let result = []\r\n        if (!isHeader && !isFooter) {\r\n            result.push(css.tableBodyRowDc)\r\n        } else if (isHeader) {\r\n            result.push(css.tableHeaderRowDc)\r\n        } else if (isFooter) {\r\n            result.push(css.tableFooterRowDc)\r\n        }\r\n        if (isSelected) result.push(css.selectedRow)\r\n        return result\r\n\r\n    }\r\n    // rowId = null\r\n\r\n    render() {\r\n        const {isHeader, isFooter, rowType, id, tableContext: {filterComponentsByType, joinCss, jssSheet: {classes: css}, createRowRef}} = this.props\r\n        // const {isHeader, isFooter, rowId} = this.props\r\n        const injectedProps = isHeader ? {isHeader: true, } : (isFooter ? {isFooter: true, } : {})\r\n        const contextMenuId = (rowType) => {\r\n            if (rowType === 'network') return 'netRowMenu'\r\n            if (rowType === 'host') return 'hostRowMenu'\r\n            return ''\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger disable={isHeader || isFooter} holdToDisplay={-1} id={contextMenuId(rowType)} renderTag=\"tr\" attributes={{\r\n                className: joinCss(this.innerStyles(), this.props.cssClasses).join(\" \"), \"data-row-type\": rowType, \"data-id\": id,\r\n            }} collect={()=>({rowType, id})}>\r\n                {filterComponentsByType(this.props.children, Column, injectedProps)}\r\n                {isHeader || isFooter ? <td className={css.scrollSz} /> : <td className={'scrollBodyCell ' + css.scrollBodySz}  ref={id ? createRowRef(id, rowType) : null} />}\r\n            </ContextMenuTrigger>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        //this.rowId = this.props.rowId\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {rowType, id = null, tableContext: {deleteRowRef}} = this.props\r\n        // console.log('unmount ', this.rowId)\r\n        //TODO implement removing ref of row in DidUnmount\r\n        deleteRowRef(id, rowType)\r\n    }\r\n}\r\n\r\nRow.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    rowId: PropTypes.any, //if exists, is used by createRowRef for creating ref\r\n    rowType: PropTypes.oneOf(['network', 'host']),\r\n    id: PropTypes.number, //item's id (DB id)\r\n    isSelected: PropTypes.bool,\r\n}\r\nRow.defaultProps = {}\r\n\r\nexport default tableConnect(Row)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n// import {ContextMenu, ContextMenuTrigger, MenuItem} from 'react-contextmenu'\r\n\r\n\r\n\r\nclass Header extends PureComponent {\r\n\r\n    tableInnerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n    headerInnerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * wrap columns in Row if need\r\n     * join inner css classes with users classes\r\n     *\r\n     * @returns Array array of rows that can be rendered\r\n     */\r\n    buildHeaderRows() {\r\n        const {children, tableContext: {filterComponentsByType, columnsCss, jssSheet, joinCss}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Header lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n\r\n        const rows = filterComponentsByType(children, Row, {isHeader: true})\r\n        if (rows.length > 0) {\r\n        //    add appropriated css classes from columnsParams to each column in last row\r\n            let lastRow = rows[rows.length - 1]\r\n            let columns = filterComponentsByType(lastRow.props.children, Column)\r\n            columns = columns.map(column => {\r\n                const {index} = column.props\r\n                //get css classes for this column from tableContext.columnsParams\r\n                const columnClasses = columnsCss[index]\r\n                const innerCss = [\r\n                    css[columnClasses.columnClass],\r\n                    css[columnClasses.columnSizeClass],\r\n                    css[columnClasses.columnDecoClass],\r\n                ]\r\n                //join with cssClasses of column\r\n                const cssClasses = joinCss(innerCss, column.props.cssClasses)\r\n                return React.cloneElement(column, {cssClasses: cssClasses.join(\" \"), writeParams: true})\r\n            })\r\n            // build new last row and replace it in rows array\r\n            rows[rows.length - 1] = React.cloneElement(\r\n                lastRow,\r\n                {},\r\n                [...columns]\r\n            )\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const {cssClasses, tableContext: {joinCss}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles().join(\" \")}>\r\n                <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n                {this.buildHeaderRows()}\r\n                </thead>\r\n            </table>\r\n        )\r\n        //return (\r\n        //    <ContextMenuTrigger id={\"headerTableMenu\"} renderTag=\"table\" attributes={{className: joinCss(this.headerInnerStyles(), cssClasses)}} collect={()=>({'baz': 'test'})}>\r\n        //        <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n        //        {this.buildHeaderRows()}\r\n        //        </thead>\r\n        //    </ContextMenuTrigger>\r\n        //)\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    style: PropTypes.object,\r\n}\r\nHeader.defaultProps = {}\r\n\r\nexport default tableConnect(Header)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport check from 'check-types'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n// import scrollToComponent from 'react-scroll-to-component'\r\n\r\n\r\nclass Body extends PureComponent {\r\n\r\n\r\n    tbodyInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableBody, css.tableBodyDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableBodySz]\r\n    }\r\n\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n    buildBodyHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n        return (<tr>\r\n            {columnsCss.map((column, index) => {\r\n                const cssClass = css[column.columnSizeClass]\r\n                return <th className={cssClass} key={index}>{index}</th>\r\n            })}\r\n        </tr>)\r\n    }\r\n    //\r\n    // scrollIntoView = (node, offset = 0) => {\r\n    //     // console.log('offset', node.scrollIntoView(true))\r\n    //     console.log('offset', this.tbodyRef.current)\r\n    // }\r\n    //\r\n    // scrollToRow = (rowId) => {\r\n    //     const {tableRefs: {rows, bodyContainer}} = this.props.tableContext\r\n    //     const id = rows[rowId]\r\n    //\r\n    //     if (id) {\r\n    //         console.log('--row', ReactDOM.findDOMNode(id.current))\r\n    //         console.log(rowId, ': ', id)\r\n    //         window.rowref = id\r\n    //         window.bodyContainer = bodyContainer\r\n    //         const rowNode = ReactDOM.findDOMNode(id.current)\r\n    //         if (rowNode) {\r\n    //             // this.scrollIntoView(rowNode)\r\n    //             scrollToComponent(id.current)\r\n    //         }\r\n    //     }\r\n    //\r\n    //     console.log('---scroll to row: ', this.props.scrollPosition)\r\n    // }\r\n\r\n    render() {\r\n        window.bodyref = this.tbodyRef\r\n\r\n        const {data, tableContext, tableContext: {jssSheet, joinCss, formBodyData, columnsParams}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={css.hideHeader}>\r\n                {this.buildBodyHeader()}\r\n                </thead>\r\n                <tbody className={joinCss(this.tbodyInnerStyles(tableContext), this.props.cssClasses).join(\" \")}>\r\n                {data ? formBodyData(data, columnsParams) : this.props.children}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nBody.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    data: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.object\r\n    ]), //data from server\r\n}\r\nBody.defaultProps = {}\r\n\r\nexport default tableConnect(Body)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport check from \"check-types\";\r\n\r\nclass TableFooter extends PureComponent {\r\n    tfootInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableFooter, css.tableFooterDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n\r\n    /**\r\n     * wrap children into Row tag if need\r\n     * @param children\r\n     * @param {function} filterComponentsByType\r\n     * @returns {*}\r\n     */\r\n    childrenWrapper = (children, filterComponentsByType ) => {\r\n        if (React.Children.count(children) === 0) {\r\n            return <Row/>\r\n        }\r\n        const rows = filterComponentsByType(children, Row, {isFooter: true})\r\n        if (rows.length > 0) {\r\n            return rows\r\n        }\r\n        if (rows.length === 0) {\r\n            return (\r\n                <Row isFooter={true} index={0}>{children}</Row>\r\n            )\r\n        } else {\r\n            return <Row/>\r\n        }\r\n    }\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row isFooter index={rowIndex} key={rowIndex} cssClasses={this.props.cssClasses}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    buildTableFooterHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header in tableFooter!\")\r\n            return null\r\n        }\r\n        return (<Row isFooter>\r\n            {columnsCss.map((column, index) => {\r\n                return <Column cssClasses={css[column.columnSizeClass]} key={index}>{index}</Column>\r\n            })}\r\n        </Row>)\r\n    }\r\n\r\n    render() {\r\n        const {data, tableContext, tableContext: {jssSheet: {classes}}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={classes.hideHeader}>\r\n                {this.buildTableFooterHeader()}\r\n                </thead>\r\n                <tfoot className={this.tfootInnerStyles(tableContext).join(\" \")}>\r\n                {data ? this.parseData(data) : this.props.children}\r\n                </tfoot>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n}\r\nTableFooter.defaultProps = {}\r\n\r\nexport default tableConnect(TableFooter)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\n\r\nclass Footer extends PureComponent {\r\n    innerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.footerContainer, css.footerContainerDc]\r\n    }\r\n\r\n    render() {\r\n        const {tableContext} = this.props\r\n        return (\r\n            <div className={this.innerStyles(tableContext).join(\" \")}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    pagination: PropTypes.bool\r\n};\r\nFooter.defaultProps = {\r\n    pagination: true\r\n};\r\n\r\nexport default tableConnect(Footer);\r\n","const customStyles = {\r\n    option: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: \"2px 5px\",\r\n        })\r\n    },\r\n    container: (base, state) => {\r\n        return ({\r\n            ...base,\r\n        })\r\n    },\r\n    control: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            minHeight: 15,\r\n        })\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: 0\r\n        })\r\n    },\r\n    input: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            margin: 0,\r\n            padding: 0\r\n        })\r\n    },\r\n}\r\nexport default customStyles","export const DEFAULT_VALUE_INDEX = 2\r\nexport const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 310,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50\r\n}\r\nexport const SELECT_OPTIONS = [\r\n    { value: 10, label: 10 },\r\n    { value: 50, label: 50 },\r\n    { value: 100, label: 100 },\r\n    { value: 200, label: 200 },\r\n    { value: 500, label: 500 },\r\n    { value: -1, label: \"All\" }\r\n]\r\n","import {color, darkenColor, lightenColor} from './Utils'\r\n\r\nconst hexCode = {\r\n    blue:   '#007bff',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1 ',\r\n    pink:   '#e83e8c ',\r\n    red:    '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green:  '#28a745',\r\n    teal:   '#20c997',\r\n    cyan:   '#17a2b8',\r\n    white:    '#fff',\r\n    gray:   '#808080',\r\n    black:    '#010101',\r\n}\r\nconst index = {\r\n\r\n    tableBgColor: color(hexCode.white), //is applied to table container\r\n    tableTextColor: lightenColor(hexCode.black, 0.01), //is applied to table container\r\n\r\n    headerBgColor: color(hexCode.blue),\r\n    headerTextColor: darkenColor(hexCode.white, 0.01),\r\n\r\n    bodyBgColor: darkenColor(hexCode.white, 0.1),\r\n    bodyTextColor: lightenColor(hexCode.black, 0.01),\r\n\r\n    tableFooterBgColor: lightenColor(hexCode.green, 1.3),\r\n    tableFooterTextColor: darkenColor(hexCode.gray, 0.3),\r\n\r\n    footerBgColor: lightenColor(hexCode.blue, 0.4),\r\n    footerTextColor: darkenColor(hexCode.gray, 0.8),\r\n\r\n    footerIconColor: hexCode.black,\r\n\r\n    disabledColor: hexCode.gray,\r\n\r\n    border: `1px solid ${lightenColor(hexCode.gray, 0.4)}`,\r\n\r\n    stripedColorFactor: 0.08,\r\n    hoverColorFactor: 0.2,\r\n\r\n    paddingHeaderCell: [5, 10],\r\n    paddingBodyCell: [5, 10],\r\n    paddingTableFooterCell: [5, 10],\r\n\r\n    selectedRowBgColor: lightenColor(hexCode.yellow, 0.7),\r\n    selectedRowTextColor: darkenColor(hexCode.gray, 0.8)\r\n}\r\n\r\nexport default index","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\nimport customStyles from './selectReactCustomStyle'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport * as PAGINATION from './paginationConstants'\r\nimport theme from '../Theme'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: PAGINATION.STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: PAGINATION.STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: PAGINATION.STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[theme.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: theme.footerIconColor\r\n    },\r\n}\r\n\r\nclass Pagination extends PureComponent {\r\n\r\n    defaultValueRecordsOnPage = () => {\r\n        const {selectDefaultValueIndex} = this.props\r\n        const index = (selectDefaultValueIndex > 0 && selectDefaultValueIndex <= PAGINATION.SELECT_OPTIONS.length) ? selectDefaultValueIndex : PAGINATION.DEFAULT_VALUE_INDEX\r\n        return PAGINATION.SELECT_OPTIONS[index]\r\n    }\r\n\r\n    state = {\r\n        selectOptions: this.props.selectOptions,\r\n        currentPage: 1,\r\n        pageNumberInput: '1',\r\n        totalPages: 99,\r\n        rowsOnPage: this.defaultValueRecordsOnPage().value,\r\n    }\r\n\r\n    pageNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                Page<input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.pageNumberInput}/><span>of {this.state.totalPages}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {pageNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.totalPages)) ? value : prevState.pageNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                pageNumberInput: this.state.pageNumberInput === \"\" ? \"1\" : this.state.pageNumberInput,\r\n                currentPage: this.state.pageNumberInput === \"\" ? 1 : parseInt(this.state.pageNumberInput)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSelect = (opt) => {\r\n        this.setState({rowsOnPage: opt.value})\r\n    }\r\n    onClickNextPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === prevState.totalPages ? prevState.currentPage : prevState.currentPage + 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickPrevPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === 1 ? prevState.currentPage : prevState.currentPage - 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickFirstPage = () => {this.setState(prevState => {\r\n        const newPage = 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickLastPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.totalPages\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const selectProps = {\r\n            styles: customStyles,\r\n            options: this.state.selectOptions,\r\n            defaultValue: this.defaultValueRecordsOnPage(),\r\n            menuPlacement: 'auto'\r\n        }\r\n        const {currentPage, totalPages} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.pageNumberBlock(classes)}\r\n                <div className=\"rowsOnPage\"><Select {...selectProps} onChange={this.onChangeSelect} /></div>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n    }\r\n    componentDidUpdate() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n        this.props.tableContext.updateData()\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    selectWidth: PropTypes.number, //react-select width in px\r\n    selectDefaultValueIndex: PropTypes.number,\r\n    selectOptions: PropTypes.array,\r\n};\r\nPagination.defaultProps = {\r\n    selectWidth: 70,\r\n    selectDefaultValueIndex: PAGINATION.DEFAULT_VALUE_INDEX,\r\n    selectOptions: PAGINATION.SELECT_OPTIONS,\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination2 extends PureComponent {\r\n    state = {\r\n        // currentItemIdx: 1,\r\n        itemNumberInput: '1',\r\n        lastItemIdx: 0,\r\n    }\r\n    currentItemIdx = 0\r\n\r\n    resetState = ((prevItemList) => (currentItemList) => {\r\n        if (prevItemList === currentItemList) return\r\n        //TODO restore state of tree\r\n        if (currentItemList.length && currentItemList.length > 0) {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '1',\r\n                lastItemIdx: currentItemList.length - 1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n\r\n        } else {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                lastItemIdx: -1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n        }\r\n    })([])\r\n\r\n    updateCurrentItemInput = ((prevIdx) => () => {\r\n        const {filterCursor} = this.props\r\n        if (filterCursor === undefined) return\r\n        if (filterCursor === prevIdx)  return\r\n        prevIdx = filterCursor\r\n        if (this.currentItemIdx !== filterCursor) this.currentItemIdx = filterCursor\r\n        if (this.state.itemNumberInput !== '' + (filterCursor + 1)) this.setState({itemNumberInput: '' + (filterCursor + 1)})\r\n    })(null)\r\n\r\n    currentNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {this.state.lastItemIdx + 1}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.lastItemIdx + 1)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            const {setFilterCursor} = this.props\r\n            const newState = {itemNumberInput: this.state.itemNumberInput === \"\" ? \"1\" : this.state.itemNumberInput}\r\n            this.currentItemIdx = this.state.itemNumberInput === \"\" ? 0 : parseInt(this.state.itemNumberInput) - 1\r\n            this.setState(newState)\r\n            setFilterCursor(this.currentItemIdx)\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === this.state.lastItemIdx ? this.currentItemIdx : this.currentItemIdx + 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === 0 ? this.currentItemIdx : this.currentItemIdx - 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = 0\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickLastPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.state.lastItemIdx\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.lastItemIdx < 0) return null\r\n        const {classes} = this.props\r\n        const {lastItemIdx} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n}\r\n\r\nPagination2.propTypes = {\r\n    filterItemList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n    setFilterCursor: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n\r\n    filterResults: PropTypes.shape({\r\n        itemList: PropTypes.array,\r\n        hostStateBackups: PropTypes.object,\r\n        netStateBackups: PropTypes.object,\r\n        cursor: PropTypes.number\r\n    }),\r\n    lastItemIdx: PropTypes.number,\r\n};\r\nPagination2.defaultProps = {\r\n    lastItemIdx: -1,\r\n    onChange: (current) => {console.log('current - ', current)}\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination2));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination3 extends PureComponent {\r\n    state = {\r\n        itemNumberInput: '',\r\n        isVisible: false,\r\n        // current: 0, // index of current item in filteredItemsList. Start from 0!\r\n        // itemsList: {}\r\n    }\r\n\r\n    updateState = ((prevItemList) => (newItemList) => {\r\n        if (prevItemList === newItemList && check.array(newItemList) && newItemList.length > 0) {\r\n            this.props.onChange(this.props.filterCursor)\r\n            return\r\n        }\r\n        if (prevItemList === newItemList && !this.state.isVisible) {\r\n            this.props.onHideFilter()\r\n            return\r\n        }\r\n\r\n        if (check.array(newItemList) && newItemList.length > 0) {\r\n            prevItemList = newItemList\r\n            const newState = {\r\n                itemNumberInput: '1',\r\n                isVisible: true,\r\n                // current: 0,\r\n                // itemsList: newItemList\r\n            }\r\n            this.setState(newState)\r\n            this.props.onNewItemsList()\r\n            this.props.onChange(this.props.filterCursor)\r\n        } else {\r\n            prevItemList = newItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                isVisible: false,\r\n                // current: 0,\r\n                // itemsList: newItemList\r\n            })\r\n        }\r\n    })()\r\n\r\n    currentNumberBlock = (classes) => {\r\n        const {filteredItemsList} = this.props\r\n        const listLength = filteredItemsList.length\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {listLength}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * only change text in input field of current page number, but doesn't change value of 'current' in state!\r\n     * @param e\r\n     */\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        const {filteredItemsList} = this.props\r\n        const inputListLength = check.array(filteredItemsList) ?  filteredItemsList.length : 0\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: (value === \"\" || (parseInt(value) > 0 && parseInt(value) <= inputListLength)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    /**\r\n     * change text in input field and value of 'current' in state\r\n     * @param e\r\n     */\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            const itemNumberInput = this.state.itemNumberInput === \"\" ? \"1\" : this.state.itemNumberInput\r\n            // this.setState({itemNumberInput})\r\n            this.props.setFilterCursor(parseInt(itemNumberInput) - 1)\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {setFilterCursor, filterCursor, filteredItemsList} = this.props\r\n        const listLength = filteredItemsList.length\r\n        if (filterCursor < listLength) {\r\n            const newFilterCursor = filterCursor + 1\r\n            this.setState({\r\n                itemNumberInput: (newFilterCursor + 1).toString(),\r\n            })\r\n            setFilterCursor(newFilterCursor)\r\n        }\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {setFilterCursor, filterCursor} = this.props\r\n        if (filterCursor > 0) {\r\n            const newFilterCursor = filterCursor - 1\r\n            this.setState({\r\n                itemNumberInput: (newFilterCursor + 1).toString(),\r\n            })\r\n            setFilterCursor(newFilterCursor)\r\n        }\r\n\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        const newFilterCursor = 0\r\n        this.setState({\r\n            itemNumberInput: (newFilterCursor + 1).toString(),\r\n        })\r\n        setFilterCursor(newFilterCursor)\r\n    }\r\n    onClickLastPage = () => {\r\n        const {setFilterCursor, filteredItemsList} = this.props\r\n        const listLength = filteredItemsList.length\r\n        const newFilterCursor = listLength - 1\r\n        this.setState({\r\n            itemNumberInput: (newFilterCursor + 1).toString(),\r\n        })\r\n        setFilterCursor(newFilterCursor)\r\n    }\r\n\r\n    render() {\r\n        const {classes, filteredItemsList} = this.props\r\n        const listLength = check.array(filteredItemsList) ?  filteredItemsList.length : 0\r\n        const {filterCursor: current} = this.props\r\n        if (this.props.searchingState) {\r\n            return (\r\n                <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                    <span>...Searching</span>\r\n                </div>\r\n            )\r\n        }\r\n        if (listLength === 0) return null\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={parseInt(current) === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={parseInt(current) === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={parseInt(current) === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={parseInt(current) === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={parseInt(current) === listLength - 1} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={(parseInt(current) === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={parseInt(current) === listLength - 1} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={(parseInt(current) === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n}\r\n\r\nPagination3.propTypes = {\r\n    searchingState: PropTypes.bool,\r\n    filteredItemsList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            ip: PropTypes.string,\r\n            rec_type: PropTypes.string,\r\n            ip_path: PropTypes.string\r\n        })\r\n    ),\r\n    setFilterCursor: PropTypes.func,\r\n    filterCursor: PropTypes.number,\r\n    onChange: PropTypes.func,\r\n    onHideFilter: PropTypes.func,\r\n    onNewItemsList: PropTypes.func\r\n};\r\nPagination3.defaultProps = {\r\n    /**\r\n     * is invoked for non empty filteredItemsList\r\n     * @param current\r\n     */\r\n    onChange: (current) => console.log('ON CHANGE FILTER: current - ', current),\r\n    /**\r\n     * is invoked if filteredItemsList got empty and paginator will be hide\r\n     */\r\n    onHideFilter: () => console.log('ON HIDE FILTER: default function'),\r\n    /**\r\n     * is invoked when pass new filteredItemsList (new search result)\r\n     */\r\n    onNewItemsList: () => console.log('ON NEW ITEMS LIST')\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination3));\r\n","import {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\n\r\n// const jss = create({plugins: [camelCase(), vendorPrefixer(), defaultUnit(), jssNested()]})\r\nconst jss = create(preset())\r\nexport default jss","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n);\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport ScrollbarSize from 'react-scrollbar-size'\r\nimport {darkenColor} from './Theme/Utils'\r\n\r\nimport Header from './Header'\r\nimport Body from './Body'\r\nimport TableFooter from './TableFooter'\r\nimport Footer from './Footer'\r\nimport Row from './Row'\r\nimport Column from './Column'\r\nimport Pagination from './Pagination'\r\nimport Pagination2 from './Pagination2'\r\nimport Pagination3 from './Pagination3'\r\nimport './fontAwesome/faLibrary.js'\r\n\r\nimport {TableProvider} from './TableContext'\r\nimport {DEFAULT_VALUES, DEFAULT_TABLE_STYLE, DEFAULT_CSS_CLASS_NAMES} from './tableConstants'\r\nimport theme from './Theme'\r\n\r\nimport jss from './jssInstance'\r\n\r\nclass Table extends PureComponent {\r\n\r\n    state = {\r\n        tableBodyData: [],\r\n        tableFooterData: [],\r\n    }\r\n\r\n    tableRefs = {\r\n        container: React.createRef(),\r\n        bodyContainer: React.createRef(),\r\n        rows: {}\r\n    }\r\n    scroll = {\r\n        width: 17,\r\n        height: 17,\r\n        cellWidth: 17,\r\n        bodyCellWidth: 0,\r\n    }\r\n\r\n    scrollPosition = {}\r\n\r\n    tableStyles = {\r\n        //LVL 0\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            boxSizing: 'border-box',\r\n            '& table, & thead, & tbody, & tfoot, & tr, & th, & td': {boxSizing: 'border-box',}\r\n        },\r\n        // LVL 1\r\n        tableContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            overflowX: 'auto',\r\n            boxSizing: 'border-box',\r\n        },\r\n        footerContainer: {\r\n            display: 'flex',\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n            justifyContent: 'space-between',\r\n            boxSizing: 'border-box',\r\n        },\r\n        // LVL 2\r\n        tableHeaderBodyContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n        },\r\n        tableFooterContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        // LVL 3\r\n        tableHeaderContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        tableBodyContainer: {\r\n            //position: 'relative',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n            overflowY: 'scroll'\r\n        },\r\n        // LVL 4\r\n        table: {\r\n            tableLayout: 'fixed'\r\n        },\r\n\r\n        tableHeader: {\r\n\r\n        },\r\n        tableBody: {\r\n        },\r\n        tableFooter: {},\r\n\r\n// DECORATION STYLES\r\n        tableContainerDc: {\r\n            backgroundColor: theme.tableBgColor,\r\n            color: theme.tableTextColor,\r\n        },\r\n        tableBodyContainerDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n        },\r\n        tableHeaderRowDc: {\r\n            backgroundColor: theme.headerBgColor,\r\n            color: theme.headerTextColor,\r\n            '& th': {\r\n                padding: theme.paddingHeaderCell\r\n            },\r\n        },\r\n        tableBodyDc:{\r\n            backgroundColor: theme.bodyBgColor,\r\n            color: theme.bodyTextColor\r\n        },\r\n        tableBodyRowDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ? darkenColor(theme.bodyBgColor, theme.stripedColorFactor) : theme.bodyBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingBodyCell,\r\n                wordWrap: 'break-word'\r\n            },\r\n            '& td.scrollBodyCell': {\r\n                padding: 0\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.bodyBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        tableFooterDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            color: theme.tableFooterTextColor,\r\n        },\r\n        tableFooterRowDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ?\r\n                    darkenColor(theme.tableFooterBgColor, theme.stripedColorFactor)\r\n                    : theme.tableFooterBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingTableFooterCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.tableFooterBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        footerContainerDc: {\r\n            padding: '5px 5px',\r\n            backgroundColor: theme.footerBgColor\r\n        },\r\n// SIZE STYLES\r\n        containerSz: {\r\n            height: '100%'\r\n        },\r\n        tableBodyContainerSz: {width: null},\r\n        tableFooterContainerSz: {width: null},\r\n        tableHeaderSz: {width: null},\r\n        tableBodySz: {width: null},\r\n        scrollSz: {width: null},\r\n        scrollBodySz: {},\r\n// SPECIAL STYLES\r\n        hideHeader: {\r\n            fontSize: [[0], '!important'],\r\n            height: [[0], '!important'],\r\n            '& tr': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& td': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& th': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            }\r\n        },\r\n        selectedRow: {\r\n            backgroundColor: theme.selectedRowBgColor + ' !important',\r\n            color: theme.selectedRowTextColor + ' !important',\r\n        }\r\n    }\r\n    jssSheet = jss.createStyleSheet(this.tableStyles, {link: true})\r\n\r\n    /**\r\n     * join inner and external css classes lists into array\r\n     * @param {(string|string[])} innerCssClasses\r\n     * @param {(string|string[])} extCssClasses\r\n     * @returns {string[]}\r\n     */\r\n    static joinCss(innerCssClasses, extCssClasses) {\r\n        // convert  innerCssClasses to array\r\n        innerCssClasses = check.array(innerCssClasses) ? innerCssClasses : (\r\n            check.nonEmptyString(innerCssClasses) ? [innerCssClasses] : []\r\n        )\r\n        // convert extCssClasses to array\r\n        extCssClasses = check.nonEmptyString(extCssClasses) ? [extCssClasses] : (\r\n            check.array(extCssClasses) ? extCssClasses : []\r\n        )\r\n\r\n        return [...innerCssClasses, ...extCssClasses]\r\n    }\r\n\r\n    /**\r\n     * @param children\r\n     * @param {Object} component that instances should be filtered\r\n     * @param {Object} injectedProps this props will be injected into filtered children\r\n     * @param {boolean} injectIndex if true - prop index will be injected\r\n     * @returns {Array}\r\n     */\r\n    filterComponentsByType(children, component, injectedProps = {}, injectIndex = true) {\r\n        const result = []\r\n        React.Children.forEach(children, (child, index) => {\r\n            if (child.type === component) {\r\n                if (injectIndex) injectedProps.index = index\r\n                result.push(React.cloneElement(child, {...injectedProps, key: index}))\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    updateColumnsSizesInDOM = () => {\r\n        const {dimensions, dimensions: {columnsSizes}, columnsCss} = this.tableContext\r\n        columnsCss.forEach((columnSet, index) => {\r\n            this.jssSheet.getRule(columnSet.columnSizeClass).prop('width', columnsSizes[index].width)\r\n        })\r\n        this.jssSheet.getRule('tableHeaderSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('tableBodySz').prop('width', dimensions.columnsWidth + this.scroll.bodyCellWidth)\r\n        this.jssSheet.getRule('tableBodyContainerSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollSz').prop('width', this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollBodySz').prop('width', this.scroll.bodyCellWidth)\r\n    }\r\n\r\n    updateDimensions = () => {\r\n\r\n        const {dimensions, dimensions: {columnsSizes}} = this.tableContext\r\n        dimensions.containerWidth = this.tableRefs.container.current.clientWidth\r\n        const sumOfMinWidth = columnsSizes.reduce((sum, column) => {\r\n            return sum + column.minWidth\r\n        }, 0 )\r\n        const scrollSize = this.scroll.width\r\n        window.scrollSize = scrollSize\r\n\r\n        //calculate free space for distribute\r\n        let freeSpace = Math.trunc(dimensions.containerWidth - sumOfMinWidth - scrollSize)\r\n        // if (freeSpace <=0) {\r\n        //     console.log('no free space')\r\n        //     console.log('--finished', Date.now() - startTime, this.tableContext.dimensions)\r\n        // }\r\n\r\n        // let counter = 0\r\n        let numberOfExtendableColumns = 0\r\n        //reset width of columns to minWidth\r\n        columnsSizes.forEach(column => column.width = column.minWidth)\r\n\r\n        while (freeSpace > 0) {\r\n            //if don't have columns that can be extended - break cycle\r\n            numberOfExtendableColumns = columnsSizes.reduce((sum, column) => {\r\n                return column.fixed || column.width >= column.maxWidth ? sum : ++sum\r\n            }, 0)\r\n            if (numberOfExtendableColumns === 0) {\r\n                break\r\n            }\r\n            //if few free space - distribute by 1 per column\r\n            if (freeSpace < numberOfExtendableColumns) {\r\n                for (const column of columnsSizes) {\r\n                    if (column.fixed || column.width >= column.maxWidth) continue\r\n                    column.width++\r\n                    freeSpace--\r\n                    if (freeSpace <= 0) {\r\n                        // console.log('distributed by 1 per column')\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            //if free space enough to distribute between extendable columns\r\n            const spacePerColumn = Math.trunc(freeSpace/numberOfExtendableColumns)\r\n            for (let column of columnsSizes) {\r\n                if (column.fixed || column.width >= column.maxWidth) continue\r\n                let additionWidth = column.maxWidth - column.width >= spacePerColumn ? spacePerColumn : column.maxWidth - column.width\r\n                freeSpace -= additionWidth\r\n                column.width += additionWidth\r\n            }\r\n            // ++counter\r\n        }\r\n        //calculate new scroll cell width, table width\r\n        const columnsWidth = columnsSizes.reduce((sum, column) => {return sum + column.width}, 0)\r\n        this.scroll.cellWidth =\r\n            columnsWidth + this.scroll.width > dimensions.containerWidth ?\r\n                this.scroll.width :\r\n                dimensions.containerWidth - columnsWidth\r\n        this.scroll.bodyCellWidth = this.scroll.cellWidth - this.scroll.width\r\n        dimensions.columnsWidth = columnsWidth\r\n    }\r\n\r\n    updateColumns = () => {\r\n        this.updateDimensions()\r\n        this.updateColumnsSizesInDOM()\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parse result of fetchData function.\r\n     * If it object:\r\n     *  1) find key 'body'. If key exists and type of value is Array, write to state.tableBodyData\r\n     *  2) find key 'footer'. If key exists and type of value is Array, write to state.tableFooterData\r\n     * If it array, consider it as body data and write to state.tableBodyData\r\n     * @param data\r\n     */\r\n    parseFetchedResult(data) {\r\n        const {bodyDataKey, footerDataKey} = this.props\r\n        if (check.object(data)) {\r\n            if (data[bodyDataKey])  this.setState({tableBodyData: data[bodyDataKey]})\r\n            if (data[footerDataKey])  this.setState({tableFooterData: data[footerDataKey]})\r\n        } else if (check.array(data)) {\r\n            this.setState({tableBodyData: data})\r\n        } else {\r\n            throw new Error('Invalid data format')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fetch data using this.props.fetchData function and update Body of Table\r\n     * @returns {Promise<void>}\r\n     */\r\n    updateData = async () => {\r\n        try {\r\n            const data = this.props.data ? this.props.data : await this.props.fetchData(this.tableContext.states.pagination)\r\n            this.parseFetchedResult(data)\r\n        } catch (e) {\r\n            console.log('---!!! Table: fetch data error! ', e)\r\n        }\r\n    }\r\n\r\n    formBodyData = (data, columnsParams) => {\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    createRowRef = (id, rowType) => {\r\n        if (check.number(id) && !this.tableRefs.rows[`${id}_${rowType}`]) {\r\n            const ref = React.createRef()\r\n            this.tableRefs.rows[`${id}_${rowType}`] = ref\r\n            // console.log('created', id, rowType)\r\n            return ref\r\n        }\r\n        // console.log('exists', id, rowType)\r\n        return this.tableRefs.rows[`${id}_${rowType}`]\r\n    }\r\n\r\n    deleteRowRef = (id, rowType) => {\r\n        if (check.number(id) && this.tableRefs.rows[`${id}_${rowType}`]) {\r\n            delete this.tableRefs.rows[`${id}_${rowType}`]\r\n            // console.log('deleted', id, rowType)\r\n        }\r\n    }\r\n    getRowRef(id, rowType) {\r\n        return this.tableRefs.rows[`${id}_${rowType}`]\r\n    }\r\n\r\n    setColumnsCss(header) {\r\n        const {columnsCss} = this.tableContext\r\n        const {children: hdChildren} = header.props\r\n        // case if Header have rows as children\r\n        const rows = this.filterComponentsByType(hdChildren, Row)\r\n        let columns = []\r\n        if (rows.length > 0) {\r\n        //    get last Row as source of header format info\r\n            const lastRowChildren = rows[rows.length - 1].props.children\r\n            columns = this.filterComponentsByType(lastRowChildren, Column)\r\n        } else {\r\n        //  if direct children of Header are Column's instances\r\n            columns = this.filterComponentsByType(hdChildren, Column)\r\n        }\r\n\r\n        if (columns.length === 0) {\r\n            console.log(\"Header doesn't have any Column's components as children\" )\r\n            return []\r\n        }\r\n\r\n        const columnCssPrefix = DEFAULT_CSS_CLASS_NAMES.column\r\n        const columnSizeCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnSz\r\n        const columnDecoCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnDc\r\n\r\n        columns.forEach((column, index) => {\r\n            const params = {\r\n                    columnClass: columnCssPrefix + index,\r\n                    columnSizeClass: columnSizeCssPrefix + index,\r\n                    columnDecoClass: columnDecoCssPrefix + index\r\n            }\r\n            this.jssSheet.addRules({\r\n                [params.columnClass] : {},\r\n                [params.columnSizeClass] : {width: null},\r\n                [params.columnDecoClass] : {},\r\n            })\r\n            columnsCss[index] = params\r\n        })\r\n    }\r\n\r\n    scrollbarSizeLoad = (scrollSizes) => {\r\n        this.scroll.width = scrollSizes.scrollbarWidth\r\n        this.scroll.height = scrollSizes.scrollbarHeight\r\n    }\r\n\r\n    // scrollToRow(rowId, alignment, offset = 0) {\r\n    //     const row = this.tableRefs.rows[rowId]\r\n    //     if (!row) return\r\n    //     const body = this.tableRefs.bodyContainer\r\n    //     const bodyXY = body.current.getBoundingClientRect()\r\n    //     const rowXY = row.current.getBoundingClientRect()\r\n    //     // body.current.scrollTop = rowXY.y - bodyXY.y - offset\r\n    //     body.current.scrollBy(0, rowXY.y - bodyXY.y - offset)\r\n    // }\r\n    scrollToRow(rowId, rowType, alignment, offset = 0) {\r\n        const rowRef = this.getRowRef(rowId, rowType)\r\n        const bodyRef = this.tableRefs.bodyContainer\r\n        if (!rowRef || !bodyRef) return\r\n        this.scrollAt(bodyRef, rowRef, alignment, offset)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} container - box that will be scrolled (ref)\r\n     * @param {Object} element - element that will be positioned relative top or bottom of box(ref)\r\n     * @param {('top'|'bottom')} position - where's measured offset from\r\n     * @param {number} [offset] - offset from 'position' in px\r\n     */\r\n    scrollAt(container, element, position, offset = 0) {\r\n        if (!(position && (position === 'top' || position === 'bottom') && container && container.current && element && element.current)) return\r\n        let yScroll = 0\r\n        const el = element.current.getBoundingClientRect()\r\n        const box = container.current.getBoundingClientRect()\r\n        switch (position.toLowerCase()) {\r\n            case 'top':\r\n                yScroll = el.top - box.top - offset\r\n                break\r\n            case 'bottom':\r\n                yScroll = el.bottom - box.bottom + offset\r\n                break\r\n            default:\r\n\r\n        }\r\n        if (yScroll === 0) return\r\n        container.current.scrollBy(0, yScroll)\r\n    }\r\n\r\n    tableContext = {\r\n        theme: theme,\r\n        states: {},\r\n        shareState: (state,name) => {this.tableContext.states[name] = state},\r\n        getState: (name) => this.tableContext.states[name],\r\n        updateData: this.updateData,\r\n        formBodyData: this.props.formBodyData ? this.props.formBodyData : this.formBodyData,\r\n        cssStyles: this.tableStyles,\r\n        dimensions: {\r\n            containerWidth: 0,\r\n            columnsSizes: [],\r\n            columnsWidth: 0, // sum of current columns width\r\n        },\r\n        columnsCss: [],\r\n        columnsParams: [],\r\n        jssSheet: this.jssSheet,\r\n        filterComponentsByType: this.filterComponentsByType,\r\n        joinCss: Table.joinCss,\r\n        createRowRef: this.createRowRef,\r\n        deleteRowRef: this.deleteRowRef,\r\n        tableRefs: this.tableRefs,\r\n        scrollPosition: this.props.scrollPosition,\r\n        scrollToRow: this.scrollToRow\r\n    }\r\n\r\n\r\n    render() {\r\n        // const store = window.store.getState()\r\n        const {classes: css} = this.jssSheet\r\n        const {children} = this.props\r\n        this.setColumnsCss(this.filterComponentsByType(children, Header)[0])\r\n        return (\r\n            <TableProvider value={this.tableContext}>\r\n                <ScrollbarSize\r\n                    onLoad={this.scrollbarSizeLoad}\r\n                />\r\n                <div className={[css.container, css.containerSz].join(\" \")} ref={this.tableRefs.container}>\r\n                    <div className={[css.tableContainer, css.tableContainerDc].join(\" \")}>\r\n                        <div className={[css.tableHeaderBodyContainer].join(\" \")}>\r\n                            <div className={[css.tableHeaderContainer]}>\r\n                                {this.filterComponentsByType(children, Header)}\r\n                            </div>\r\n                            <div className={[css.tableBodyContainer, css.tableBodyContainerSz, css.tableBodyContainerDc].join(\" \")} ref={this.tableRefs.bodyContainer}>\r\n                                {this.filterComponentsByType(children, Body, {data: this.state.tableBodyData, scrollPosition: this.props.scrollPosition})}\r\n                            </div>\r\n                        </div>\r\n                        <div className={[css.tableFooterContainer, css.tableFooterContainerSz].join(\" \")}>\r\n                            {this.filterComponentsByType(children, TableFooter, {data: this.state.tableFooterData})}\r\n                        </div>\r\n                    </div>\r\n                        {this.filterComponentsByType(children, Footer)}\r\n                </div>\r\n            </TableProvider>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.jssSheet.attach()\r\n        window.addEventListener('resize', this.updateColumns)\r\n\r\n        this.updateColumns()\r\n        await this.updateData()\r\n        // this.scrollToRow(this.props.scrollPosition)\r\n        // this.scrollAt(bodyContainer, targetRow, 'bottom', 0)\r\n\r\n        window.tabRefs = this.tableRefs\r\n    }\r\n\r\n    //should be called only when pass data via props and this data change\r\n    async componentDidUpdate(prevProps) {\r\n        const {data: prevData} = prevProps\r\n        const {data, scrollPosition} = this.props\r\n        if (prevData !== data) {\r\n             await this.updateData()\r\n        }\r\n        if (!scrollPosition) {\r\n            this.scrollPosition = {}\r\n        }\r\n        if (scrollPosition && this.scrollPosition.id === scrollPosition.id && this.scrollPosition.rec_type === scrollPosition.rec_type) return\r\n        if (scrollPosition && scrollPosition.id ) {\r\n            const targetRow = this.getRowRef(scrollPosition.id, scrollPosition.rec_type)\r\n            // console.log('scroll to ', targetRow, this.tableRefs.bodyContainer)\r\n            if (targetRow && targetRow.current) {\r\n                this.scrollPosition = {\r\n                    id: scrollPosition.id,\r\n                    rec_type: scrollPosition.rec_type\r\n                }\r\n                const bodyContainer = this.tableRefs.bodyContainer\r\n                this.scrollAt(bodyContainer, targetRow, 'top', 60)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumns)\r\n    }\r\n}\r\n\r\nTable.Caption = (props) => {\r\n    return <caption>{props.children}</caption>\r\n}\r\n\r\n\r\nTable.propTypes = {\r\n    fetchData: PropTypes.func, //function that will be fetch data from remote source. Has to be async and return Promise\r\n    formBodyData: PropTypes.func, //function that will be used to form Body content from fetched data\r\n    bodyDataKey: PropTypes.string, // name of key for body data in object that return fetchData function\r\n    footerDataKey: PropTypes.string, // name of key for footer data in object that return fetchData function\r\n\r\n    width: PropTypes.string, //width of table's container\r\n    height: PropTypes.string, //height of table's container\r\n    miWidth: PropTypes.string, //min width of table container\r\n    minHeight: PropTypes.string, //min height of table container\r\n\r\n    bordered: PropTypes.bool,\r\n    bodyStriped: PropTypes.bool,\r\n\r\n    isStretch: PropTypes.bool, //allow stretch table\r\n\r\n    scrollPosition: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        ip: PropTypes.string,\r\n        rec_type: PropTypes.string,\r\n        ip_path: PropTypes.string\r\n    })\r\n};\r\nTable.defaultProps = {\r\n    fetchData: DEFAULT_VALUES.fetchData.method,\r\n    bodyDataKey: DEFAULT_VALUES.fetchData.bodyDataKey,\r\n    footerDataKey: DEFAULT_VALUES.fetchData.footerDataKey,\r\n\r\n    width: DEFAULT_TABLE_STYLE.tableWidth,\r\n    minWidth: DEFAULT_TABLE_STYLE.tableMinWidth,\r\n    height: DEFAULT_TABLE_STYLE.tableHeight,\r\n    minHeight: DEFAULT_TABLE_STYLE.tableMinHeight,\r\n\r\n    bordered: true,\r\n    bodyStriped: true,\r\n\r\n    isStretch: true\r\n};\r\n\r\n\r\nexport {Header, Body, TableFooter, Footer, Row, Column, Pagination, Pagination2, Pagination3}\r\nexport default Table;\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\nimport './style.css'\r\n\r\nclass NetRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        let {id, classes, ip, netmask, comment, vrfName, bgpAs, netLocations, netChildren, hostChildren, isFetching, isExpanded, isSelected, toggleIconHandler, rowId} = this.props\r\n        const rowProps = {id, rowId, isSelected, rowType: 'network'}\r\n        if (isFetching) {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            let locations = []\r\n            netLocations = check.object(netLocations) ? netLocations : {}\r\n            for (let location of Object.values(netLocations)) {\r\n                locations.push(location)\r\n            }\r\n            const icon = isExpanded ?\r\n                <FontAwesomeIcon icon={\"minus\"} className={classes.icon} onClick={toggleIconHandler(id)}/> :\r\n                <FontAwesomeIcon icon={\"plus\"}  className={classes.icon} onClick={toggleIconHandler(id)}/>\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}{icon}{ip}</Column>\r\n                    {/*<Column>{this.lvlIndent()}{icon}{ip} - {rowId}</Column>*/}\r\n                    <Column>{netChildren.length}/{hostChildren.length}</Column>\r\n                    <Column>{netmask}</Column>\r\n                    <Column>{locations.join(\"; \")}</Column>\r\n                    <Column>{comment}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column>{vrfName}</Column>\r\n                    <Column>{bgpAs}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nNetRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    isFetching: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    netChildren: PropTypes.array,\r\n    hostChildren: PropTypes.array,\r\n    netLocations: PropTypes.object,\r\n    toggleIconHandler: PropTypes.func,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nNetRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n    netChildren: [],\r\n    hostChildren: [],\r\n};\r\n\r\nexport default injectSheet(style)(NetRecordRow)\r\n\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON\r\n    },\r\n    bgOldDevice: {\r\n        color: '#f00 !important' ,\r\n        // backgroundColor: '#d9534f !important'\r\n    }\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\nimport dateFormat from 'dateformat'\r\nimport {MAX_DEV_AGE, LAST_UPDATE_SHIFT_HOURS} from '../../../constants/IpamTable'\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\n\r\nclass HostRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    convertLastUpdate = () => {\r\n        const {lastUpdate, lastUpdateMs} = this.props\r\n        if (lastUpdate) {\r\n            const date = new Date(parseInt(lastUpdateMs))\r\n            date.setHours(date.getHours() - LAST_UPDATE_SHIFT_HOURS)\r\n            return 'Last update: ' + dateFormat(date, \"d.mm.yyyy H:MM\")\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    render() {\r\n        // const {id, ipAddress, macAddress, comment, isFetching, isExpanded, isSelected, rowId} = this.props\r\n        const {id, ip, masklen, mask, ipCidr, location, portComment, portDescr, portName, devName, devType, hostname, age, vrfName, dns, isFetching, isSelected, rowId, classes} = this.props\r\n        const rowProps = {id, rowId, isSelected, rowType: 'host'}\r\n        if (isFetching) {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}{ipCidr}</Column>\r\n                    {/*<Column>{this.lvlIndent()}{ipCidr} - {id}</Column>*/}\r\n                    <Column></Column>\r\n                    <Column>{mask}</Column>\r\n                    <Column>{location}</Column>\r\n                    <Column>{portDescr}</Column>\r\n                    <Column>{portName}</Column>\r\n                    <Column cssClasses={age > MAX_DEV_AGE ? classes.bgOldDevice : ''} hint={this.convertLastUpdate()}>{devName}</Column>\r\n                    <Column>{vrfName}</Column>\r\n                    <Column></Column>\r\n                    <Column>{devType}</Column>\r\n                    <Column>{hostname}</Column>\r\n                    <Column>{dns}</Column>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nHostRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isFetching: PropTypes.bool,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    macAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nHostRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n};\r\n\r\nexport default injectSheet(style)(HostRecordRow)\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport RowsContainer from '../RowsContainer'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChildrenRowsContainer extends PureComponent {\r\n    render() {\r\n        const {parentNetId, netsIds, hostsIds, lvl} = this.props\r\n        return (\r\n           <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={lvl} parentNetId={parentNetId} />\r\n        );\r\n    }\r\n}\r\n\r\nChildrenRowsContainer.propTypes = {\r\n    parentNetId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nexport default ChildrenRowsContainer;\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {fetchElementsIfNeeded, netItemToggleExpandCollapse} from '../../../actions'\r\nimport NetRecordRow from \"../NetRecordRow\";\r\nimport HostRecordRow from \"../HostRecordRow\";\r\nimport ChildrenRowsContainer from \"../ChildrenRowsContainer\";\r\n\r\nclass RowsContainer extends PureComponent {\r\n\r\n    netIdsForUpdate = []\r\n    hostIdsForUpdate = []\r\n\r\n    render() {\r\n        const {netsData, hostsData, toggleIconHandler, lvl} = this.props\r\n        const netRows = netsData.map(data => {\r\n            if (data.isExpanded) {\r\n                if (data.didInvalidate) this.netIdsForUpdate.push(data.id)\r\n                this.netIdsForUpdate = this.netIdsForUpdate.concat(data.netChildren)\r\n                this.hostIdsForUpdate = this.hostIdsForUpdate.concat(data.hostChildren)\r\n                return (\r\n                    <React.Fragment key={'n' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={data.id} />\r\n                        <ChildrenRowsContainer netsIds={data.netChildren} hostsIds={data.hostChildren} lvl={lvl + 1}/>\r\n                    </React.Fragment>\r\n\r\n                )\r\n            } else {\r\n                if (data.didInvalidate) this.netIdsForUpdate.push(data.id)\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={data.id} />\r\n                    </React.Fragment>\r\n                )\r\n            }})\r\n        const hostRows = hostsData.map(data => {\r\n            return (\r\n                <HostRecordRow {...data} lvl={lvl} key={'h' + data.id} rowId={data.id} />\r\n            )})\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {netRows}\r\n                {hostRows}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.netIdsForUpdate, hostsIds: this.hostIdsForUpdate})\r\n    }\r\n    componentDidUpdate() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.netIdsForUpdate, hostsIds: this.hostIdsForUpdate})\r\n    }\r\n}\r\n\r\nconst selectorFactory = (dispatch) => {\r\n\r\n    const updateDataIfNeeded = ({netsIds, hostsIds}) => {\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n    const toggleIconHandler = (id) => () => {\r\n        dispatch(netItemToggleExpandCollapse(id))\r\n    }\r\n\r\n    return (state, ownProps) => {\r\n        const {netsIds, hostsIds, lvl} = ownProps\r\n        const netsData = []\r\n        const hostsData = []\r\n        for (let id of netsIds) {\r\n            const itemData = state.netData.networks[id]\r\n            if (itemData) netsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n        for (let id of hostsIds) {\r\n            const itemData = state.netData.hosts[id]\r\n            if (itemData) hostsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n\r\n        return {netsData, hostsData, lvl, updateDataIfNeeded, toggleIconHandler}\r\n    }\r\n}\r\n\r\nRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nRowsContainer.defaultProps = {\r\n    netsIds: [],\r\n    hostsIds: []\r\n}\r\n\r\nexport default connectAdvanced(selectorFactory)(RowsContainer)","import {createSelector} from 'reselect'\r\n\r\nconst getRoots = state => state.rootElementsIds\r\nconst getRootNetsIds = state => state.rootElementsIds.netsIds\r\nconst getRootHostsIds = state => state.rootElementsIds.hostsIds\r\n\r\nconst getNetworksDataStore = state => state.netData.networks\r\nconst getHostsDataStore = state => state.netData.hosts\r\n\r\nexport const getFilterItemList = state => state.filter.itemList\r\nexport const getFilterCursor = state => state.filter.cursor\r\n\r\nexport const getCurrentFilteredItem = createSelector(\r\n    [getFilterItemList, getFilterCursor],\r\n    (filterItemList, filterCursor) => filterItemList[filterCursor]\r\n)\r\n\r\n\r\nexport const getRootRowsData = createSelector(\r\n    [getRootNetsIds, getRootHostsIds, getNetworksDataStore, getHostsDataStore],\r\n    (rootNetsIds, rootHostsIds, networksData, hostsData) => {\r\n        const rootNetsData = []\r\n        for (let id of rootNetsIds) {\r\n            const netData = networksData[id]\r\n            if (netData) {\r\n                netData.id = id\r\n                rootNetsData.push(netData)\r\n            }\r\n        }\r\n        const rootHostsData = []\r\n        for (let id of rootHostsIds) {\r\n            const hostData = hostsData[id]\r\n            if (hostData) rootHostsData.push(hostData)\r\n        }\r\n        return {netsData: rootNetsData, hostsData: rootHostsData}\r\n    }\r\n)\r\n\r\nexport const getRootIds = createSelector(\r\n    [getRoots],\r\n    (roots) => {\r\n        return {netsIds: roots.netsIds, hostsIds: roots.hostsIds}\r\n    }\r\n)\r\n\r\n\r\n","export const MIN_SEARCH_LENGTH = 3\r\nexport const SEARCH_TIMEOUT = 1200","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {MIN_SEARCH_LENGTH, SEARCH_TIMEOUT} from './constants'\r\n\r\n/**\r\n * in this class is used customized bootstrap classes\r\n */\r\nclass SimpleSearch extends PureComponent {\r\n    state = {\r\n        searchBy: this.props.accessorList,\r\n        statement: this.props.defaultStatement,\r\n        value: ''\r\n    }\r\n    timerId = ''\r\n\r\n    isEmpty = ((minSearchLength) => (filterState) => {\r\n        switch (filterState.statement) {\r\n            case '=':\r\n            case '!=':\r\n            case '>':\r\n            case '>=':\r\n            case '<':\r\n            case '<=':\r\n            case 'beginWith':\r\n            case 'endWith':\r\n                return filterState.value.length < minSearchLength\r\n            default:\r\n                return true\r\n        }\r\n    })(MIN_SEARCH_LENGTH)\r\n\r\n    //update state of this filter in filters store of Filter factory\r\n    updateParentState = () => {\r\n        if (this.isEmpty(this.state)) {\r\n            this.props.updateFilterState({})\r\n        } else {\r\n            this.props.updateFilterState(this.state)\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n    /**\r\n     * change text in input field and value of 'current' in state\r\n     * @param e\r\n     */\r\n    onKeyUpHandler = (e) => {\r\n        if (e.keyCode === 13) {\r\n            clearTimeout(this.timerId)\r\n            this.updateParentState()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {width, placeholder} = this.props\r\n        const style = {width}\r\n\r\n        return (\r\n            <div>\r\n                <input className='search-bar-form-control' style={style} placeholder={placeholder} value={this.state.value} onChange={this.onChangeHandler} onKeyUp={this.onKeyUpHandler} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        this.timerId = setTimeout(this.updateParentState, SEARCH_TIMEOUT)\r\n    }\r\n}\r\n\r\nSimpleSearch.propTypes = {\r\n    accessorList: PropTypes.array.isRequired,\r\n    defaultStatement: PropTypes.string,\r\n    minLengthForSearch: PropTypes.number,\r\n    options: PropTypes.shape({\r\n        width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    }),\r\n    placeholder: PropTypes.string,\r\n    hideUnusedRows: PropTypes.bool,\r\n    updateFilterState: PropTypes.func,\r\n    statementSet: PropTypes.object.isRequired,\r\n}\r\n\r\nSimpleSearch.defaultProps = {\r\n    defaultStatement: '=',\r\n    minLengthForSearch: MIN_SEARCH_LENGTH,\r\n    options: {\r\n        width: '150px'\r\n    },\r\n    placeholder: 'search....'\r\n}\r\n\r\nexport default SimpleSearch","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport SimpleSearch from \"./SimpleSearch\"\r\nimport check from 'check-types'\r\n\r\nclass FilterFactory {\r\n\r\n    filtersStore = []\r\n    listeners = []\r\n    statementSet = {\r\n        '=': '=',\r\n        '!=': '!=',\r\n        '>': '>',\r\n        '>=': '>=',\r\n        '<': '<',\r\n        '<=': '<=',\r\n        'beginWith': 'begin with',\r\n        'endWith': 'end with',\r\n        'empty': 'empty',\r\n        'notEmpty': 'not empty'\r\n    }\r\n\r\n    subscribe = (callBack) => {\r\n        if (! check.function(callBack)) return\r\n        const listenerId = this.listeners.length\r\n        this.listeners.push(callBack)\r\n        return listenerId\r\n    }\r\n    unsubscribe = (listenerID) => {\r\n        if (! this.listeners[listenerID]) return false\r\n        delete this.listeners[listenerID]\r\n        return true\r\n    }\r\n\r\n    updateFilterState = (id, filtersStore) => (state) => {\r\n        if (check.emptyObject(state)) {\r\n            if (check.emptyObject(filtersStore[id])) return\r\n            filtersStore[id] = {}\r\n        } else {\r\n            const {searchBy, statement, value} = state\r\n            filtersStore[id] = Object.assign({}, filtersStore[id], {searchBy, statement, value})\r\n        }\r\n        //invoke listener's functions\r\n        for (const listener of this.listeners) {\r\n            listener(filtersStore)\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param filterType\r\n     * @param accessorList\r\n     * @param {Object} options\r\n     * @param {String} options.width\r\n     * @param {String} options.defaultStatement\r\n     * @param {Number} options.minLengthForSearch\r\n     * @param {String} options.placeholder\r\n     * @param {Boolean} options.hideUnusedRows\r\n     * @returns {*}\r\n     */\r\n    createFilter = (filterType, accessorList, options) => {\r\n        const filterProps = {accessorList, ...options}\r\n        //check defaultStatement is correct\r\n        if (Object.keys(this.statementSet).indexOf(filterProps.defaultStatement) < 0 ) {\r\n            console.log('--- incorrect default statement for filter: ', filterProps.defaultStatement)\r\n            return\r\n        }\r\n        switch (filterType) {\r\n            case 'simpleSearch':\r\n                const filterId = this.filtersStore.length\r\n                this.filtersStore[filterId] = {}\r\n                return <SimpleSearch\r\n                    {...filterProps}\r\n                    updateFilterState={this.updateFilterState(filterId, this.filtersStore)}\r\n                    statementSet={this.statementSet}\r\n                />\r\n            default:\r\n        }\r\n    }\r\n}\r\n\r\nFilterFactory.propTypes = {}\r\n\r\nexport default FilterFactory","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport css from './style.module.css'\r\nimport {FormGroup, FormControl, ControlLabel, InputGroup} from 'react-bootstrap'\r\n\r\nclass Input2 extends PureComponent {\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {addOnPosition, addOnText} = this.props\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        const formControl = <FormControl\r\n            type=\"text\"\r\n            value={this.props.value}\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.props.onChange}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            className={this.props.customSize ? css.size : undefined}\r\n        />\r\n        if (addOnPosition && check.nonEmptyString(addOnText)) {\r\n            const leftAddOn = this.props.addOnPosition && this.props.addOnPosition === 'left' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            const rightAddOn = this.props.addOnPosition && this.props.addOnPosition === 'right' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        <InputGroup>\r\n                            {leftAddOn}\r\n                            {formControl}\r\n                            {rightAddOn}\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        {formControl}\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n}\r\n\r\nInput2.propTypes = {\r\n    customSize: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    controlId: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    addOnPosition: PropTypes.oneOf(['left', 'right']),\r\n    addOnText: PropTypes.string,\r\n    clearMargin: PropTypes.bool\r\n}\r\nInput2.defaultProps = {\r\n    disabled: false,\r\n    clearMargin: false\r\n}\r\nexport default Input2\r\n\r\n","import React, { PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FormControl, ControlLabel, FormGroup} from 'react-bootstrap'\r\nimport check from 'check-types'\r\nimport axios from \"axios\"\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport isEqual from 'lodash/isEqual'\r\nimport css from \"./style.module.css\"\r\n\r\nclass Select extends PureComponent {\r\n\r\n    state = {\r\n        value: '',\r\n        isLoading: false,\r\n        optionsInvalidate: true,\r\n    }\r\n    optionList = []\r\n\r\n    setDefaultSelected = ((prevValue) => (value) => {\r\n        if (value === undefined || value === null || this.state.optionsInvalidate || this.state.isLoading) return\r\n        if (prevValue === value) return\r\n        prevValue = value\r\n        if (this.optionList.filter((item) => item.value === value).length === 0) return\r\n        if (this.state.value === value) return\r\n        this.setState({value: prevValue})\r\n    })('')\r\n\r\n    handleChange = (e) => {\r\n        let value = parseInt(e.target.value)\r\n        if (!isNaN(value) && value.toString && value.toString() === e.target.value) {\r\n            this.setState({value})\r\n        }  else {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n    defaultSelectedValue = () => {\r\n        return this.optionList.length === 1 ? this.optionList[0].value : ''\r\n    }\r\n\r\n    checkSelected = () => {\r\n        if (this.state.isLoading || this.props.disabled) return\r\n        if (this.optionList.filter((item) => item.value === this.state.value).length === 0) this.setState({value: this.defaultSelectedValue()})\r\n    }\r\n    checkFilter = ((prevFilter) => () => {\r\n        const {filter} = this.props\r\n        if (isEqual(prevFilter, filter)) return\r\n        prevFilter = filter\r\n        return this.setState({optionsInvalidate: true})\r\n    })(this.props.filter)\r\n\r\n\r\n    invokeListeners = ((prevState) => () => {\r\n        if (JSON.stringify(this.state) === JSON.stringify(prevState)) return\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        prevState = cloneDeep(this.state)\r\n        for (const subscriber of onChange) {\r\n            subscriber(prevState)\r\n        }\r\n    })([])\r\n\r\n    async updateIfNeeded() {\r\n\r\n        const {isAsync, disabled} = this.props\r\n        const {isLoading, optionsInvalidate} = this.state\r\n\r\n        if (isLoading || disabled) return\r\n        this.checkFilter()\r\n        if (!optionsInvalidate) return\r\n        if (isAsync) {\r\n            this.setState({isLoading: true})\r\n            this.optionList = await this.updateRemoteOptionList()\r\n        } else {\r\n            this.optionList = this.updateLocalOptionList()\r\n        }\r\n        this.setState({isLoading: false, optionsInvalidate: false})\r\n    }\r\n\r\n    async updateRemoteOptionList() {\r\n        const {remoteDataFetch = this.remoteDataFetchDefault} = this.props\r\n        try {\r\n            const data = await remoteDataFetch(this.props.filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error in Select: ', error)\r\n        }\r\n\r\n\r\n    }\r\n    updateLocalOptionList() {\r\n        return this.props.optionList\r\n    }\r\n\r\n    async remoteDataFetchDefault() {\r\n        const {remoteSourceUrl, filter=[]} = this.props\r\n        try {\r\n            const {data} = await axios.post(remoteSourceUrl, filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error: ', error)\r\n        }\r\n    }\r\n\r\n    buildOptionList = () => {\r\n        const {isLoading} = this.state\r\n        if (isLoading) return <option value={null}>Loading...</option>\r\n\r\n        const emptyOption = <option value={this.props.emptyValue} key='empty'>{this.props.emptyLabel}</option>\r\n        const optionsSet = this.optionList.map(\r\n            ({value, label}, key) => {\r\n                return <option value={value} key={key}>{label}</option>\r\n            })\r\n        if (this.optionList.length === 1) {\r\n            return optionsSet\r\n        } else {\r\n            return this.props.emptyOption ? [emptyOption, ...optionsSet] : optionsSet\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {value} = this.state\r\n        const controlLabel = check.string(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        return (\r\n            <Fragment>\r\n                <FormGroup controlId={this.props.controlId} style={this.props.style} bsClass={clearMargin}>\r\n                    {controlLabel}\r\n                    <FormControl\r\n                        onChange={this.handleChange}\r\n                        componentClass=\"select\"\r\n                        placeholder=\"select item\"\r\n                        value={value}\r\n                        disabled={this.props.disabled}\r\n                        className={this.props.smallSize ? css.size : undefined}\r\n                    >\r\n                        {this.buildOptionList()}\r\n                    </FormControl>\r\n                </FormGroup>\r\n            </Fragment>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n    }\r\n    async componentDidUpdate() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * isAsync - if true, will be used  getDataUrl to get options list. optionList parameter will be ignored\r\n * onChange - function or array of functions, that will be invoke on state change\r\n */\r\nSelect.propTypes = {\r\n    controlId: PropTypes.string,\r\n    //local option list if isAsync = false\r\n    optionList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            value: PropTypes.oneOfType([\r\n                PropTypes.number,\r\n                PropTypes.string\r\n            ]),\r\n            label: PropTypes.string\r\n        }\r\n    )),\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    emptyOption: PropTypes.bool, //add or not empty option into list\r\n    emptyValue: PropTypes.string,\r\n    emptyLabel: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    isAsync: PropTypes.bool,\r\n    remoteSourceUrl: PropTypes.string,\r\n    remoteDataFetch: PropTypes.func,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    })),\r\n    style: PropTypes.object,\r\n    clearMargin: PropTypes.bool,\r\n    smallSize: PropTypes.bool\r\n}\r\nSelect.defaultProps = {\r\n    emptyOption: true,\r\n    optionList: [],\r\n    isAsync: false,\r\n    onChange: [],\r\n    emptyValue: '',\r\n    emptyLabel: '<Не выбрано>',\r\n    filter: [],\r\n    selected: ''\r\n}\r\n\r\nexport default Select\r\n","import React, {Fragment, Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport custCss from './style.module.css'\r\nimport axios from 'axios'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport {Row, Col, Button, Modal, ModalBody, ModalFooter, ModalHeader, } from 'react-bootstrap'\r\n\r\nimport Input2 from '../Base/Input2'\r\nimport Select from '../Base/Select'\r\nimport {NET_DATA_URL, VRF_LIST_URL, NET_SUBMIT_URL, GET_NET_PARENT} from '../../constants/IpamTable'\r\n\r\nclass NetModalWindow extends Component {\r\n    /**\r\n      * @typedef {{\r\n      *     vrf_id: number,\r\n      *     vrf_name: string,\r\n      *     vrf_rd: string\r\n      *     vrf_comment: string\r\n      * }} Vrf\r\n      */\r\n    /**\r\n     * @typedef {{\r\n     *     value: number,\r\n     *     label: string\r\n     * }} VrfListItem\r\n     */\r\n\r\n    /**\r\n     * @type {{\r\n     *     netIp: string,\r\n     *     netComment: string,\r\n     *     dataLoading: boolean,\r\n     *     dataReady: boolean,\r\n     *     saving: boolean,\r\n     *     vrfId: string|number,\r\n     *     vrfList: VrfListItem[]\r\n     * }} state\r\n     */\r\n    state = {\r\n        netIp: '',\r\n        netComment: '',\r\n        dataLoading: false,\r\n        dataReady: false,\r\n        saving: false,\r\n        vrfId: '',\r\n        vrfList: []\r\n    }\r\n\r\n    initialNetData = {}\r\n    currentNetData = () => {\r\n        const {netIp, netComment, vrfId} = this.state\r\n        const {delNet, newNet, netId} = this.props\r\n        return {\r\n            delNet,\r\n            newNet,\r\n            netId,\r\n            netIp,\r\n            netComment,\r\n            vrfId\r\n        }\r\n    }\r\n\r\n    getParentNetworkId = async (netId) => {\r\n        let res = {}\r\n        try {\r\n            const response = await axios.get(GET_NET_PARENT,{\r\n                params: {netId}\r\n            })\r\n            if (res.errors) {\r\n                throw new Error('Error update tree after saving data!')\r\n            }\r\n            const {parentNetId} = response.data\r\n            res = {parentNetId}\r\n        } catch (e) {\r\n            res.errors = [e]\r\n        }\r\n        return res\r\n    }\r\n\r\n\r\n    clearStateIfGetInvisible = ((prevVisibleState) => () => {\r\n        if (prevVisibleState !== this.props.isVisible) {\r\n            prevVisibleState = this.props.isVisible\r\n            if (this.props.isVisible === false) this.clearState()\r\n        }\r\n    })(this.props.isVisible)\r\n\r\n\r\n    clearState = ((initialState) => () => {\r\n        this.setState(cloneDeep(initialState))\r\n    })(cloneDeep(this.state))\r\n\r\n    vrfList = ((prevVrfData, prevList) => (vrfData) => {\r\n        if (JSON.stringify(prevVrfData) === JSON.stringify(vrfData))  return prevList\r\n        if (check.not.array(vrfData)) return prevList\r\n        prevVrfData = vrfData\r\n        prevList = vrfData.map((vrf) => {\r\n            const {vrf_id, vrf_rd, vrf_name, vrf_comment} = vrf\r\n            return {value: vrf_id, label: vrf_name}\r\n        })\r\n        return prevList\r\n    })([], [])\r\n\r\n    handleClose = () => {\r\n        this.props.onClose()\r\n    }\r\n    dataValidate = () => {\r\n        const errors = []\r\n        const {netIp, vrfId} = this.state\r\n        if (check.emptyString(netIp)) errors.push('Не указан адрес подсети')\r\n        if (check.emptyString(vrfId)) errors.push('Не выбран VRF')\r\n        return errors\r\n    }\r\n\r\n    handleSubmit = async() => {\r\n        const errors = this.dataValidate()\r\n        if (check.nonEmptyArray(errors)) {\r\n            alert(errors.join(\"\\n\"))\r\n            return\r\n        }\r\n        try {\r\n            this.setState({saving: true})\r\n\r\n            const result = await axios.post(NET_SUBMIT_URL, this.currentNetData())\r\n            const {data} = result\r\n            if (data.errors) throw data.errors.join(\"\\n\")\r\n            this.setState({saving: false})\r\n\r\n            const {netId, parentNetId} = data\r\n            this.props.onSubmit(this.initialNetData, {...this.currentNetData(), netId, parentNetId})\r\n            setTimeout(() => {this.handleClose()}, 700)\r\n        } catch (e) {\r\n            console.log('ERROR: ', e)\r\n            alert(e)\r\n            this.setState({saving: false})\r\n            if (this.currentNetData().delNet) {\r\n                setTimeout(() => {this.handleClose()}, 700)\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchNetData = async (netId) => {\r\n        try {\r\n\r\n            const res = await axios.get(NET_DATA_URL, {\r\n                params: {netId}\r\n            })\r\n            const {data} = res\r\n            if (!data.netData) {\r\n                console.log('ERROR: fetchNetworkData')\r\n                return {}\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchNetworkData', e.toString())\r\n            return {}\r\n        }\r\n    }\r\n    fetchVrfList = async () => {\r\n        try {\r\n            const res = await axios.get(VRF_LIST_URL, {\r\n                params: {}\r\n            })\r\n            const {data} = res\r\n            if (!data.vrfList) {\r\n                console.log('ERROR: fetchVrfList')\r\n                return []\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchVrfList', e.toString())\r\n            return []\r\n        }\r\n    }\r\n    ipFormat = (value) => {\r\n        const reg = new RegExp('^[0-9./]*$')\r\n        return reg.test(value)\r\n    }\r\n    onChangeNetIp = (e) => {\r\n        if (!(this.ipFormat(e.target.value))) return\r\n        this.setState({netIp: e.target.value})\r\n    }\r\n    onChangeNetComment = (e) => {\r\n        this.setState({netComment: e.target.value})\r\n    }\r\n    onChangeVrf = ({value}) => {\r\n        this.setState({vrfId: value})\r\n    }\r\n\r\n    render() {\r\n        const {isVisible, netId, newNet, delNet} = this.props\r\n        const {dataReady, dataLoading, vrfList, vrfId, netIp, netComment} = this.state\r\n        const modalBody = () => {\r\n            if (!isVisible || !dataReady) return null\r\n            if (dataLoading) return <h3 align=\"center\">Загрузка данных...</h3>\r\n            if (delNet) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h4 className=\"text-center\">Подтвердите удаление подсети <strong><mark>{netIp}</mark></strong></h4>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            return (\r\n                <Fragment>\r\n                    <Row>\r\n                        <Col md={4}><Input2 controlId='networkIp' addOnPosition=\"left\" addOnText=\"network IP\" onChange={this.onChangeNetIp} label=\"Адрес подсети\" value={netIp} placeholder='CIDR notation'/></Col>\r\n                        <Col md={8}><Input2 controlId='netComment' label=\"Комментарий\" onChange={this.onChangeNetComment} value={netComment} placeholder='Комментарий для подсети'/></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4}><Select label=\"VRF\" optionList={vrfList} defaultSelected={vrfId} onChange={this.onChangeVrf} /></Col>\r\n                    </Row>\r\n                </Fragment>\r\n            )\r\n        }\r\n        const modalTitle = () => delNet ? 'Удаление подсети' : (newNet ? 'Новая подсеть' : 'Редактирование подсети')\r\n        if (delNet) {\r\n            return (\r\n                <Modal show={isVisible} onHide={this.handleClose} >\r\n                    <ModalHeader closeButton>\r\n                        <Modal.Title>{modalTitle()}</Modal.Title>\r\n                    </ModalHeader>\r\n                    <ModalBody className={custCss.modalBodySmall} >\r\n                        {modalBody()}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Row>\r\n                            <Col md={8}>\r\n                                <h3 align=\"center\" style={{margin: 0}}>{this.state.saving ? 'Удаление...' : ''}</h3>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button onClick={this.handleClose} bsStyle=\"danger\" disabled={this.state.saving} >Отмена</Button>\r\n                                <Button onClick={this.handleSubmit} bsStyle=\"success\" disabled={this.state.saving}>Удалить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            )\r\n        }\r\n        return (\r\n            <Modal show={isVisible} onHide={this.handleClose} bsSize=\"large\" >\r\n                <ModalHeader closeButton>\r\n                    <Modal.Title>{modalTitle()}</Modal.Title>\r\n                </ModalHeader>\r\n                <ModalBody className={custCss.modalBody} >\r\n                    {modalBody()}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h3 align=\"center\" style={{margin: 0}}>{this.state.saving ? 'Сохранение данных...' : ''}</h3>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Button onClick={this.handleClose} bsStyle=\"danger\" disabled={this.state.saving} >Отмена</Button>\r\n                            <Button onClick={this.handleSubmit} bsStyle=\"success\" disabled={this.state.saving}>Сохранить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        this.clearStateIfGetInvisible()\r\n        const {netId, newNet, delNet, isVisible} = this.props\r\n        // this.updateStateFromProps()\r\n        const {dataReady, dataLoading} = this.state\r\n        if (isVisible && netId && !newNet && !delNet && !dataReady && !dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            try {\r\n                const response1 = await Promise.all([\r\n                    this.fetchNetData(netId),\r\n                    this.fetchVrfList(),\r\n                    this.getParentNetworkId(netId)\r\n                ])\r\n                const [{netData}, {vrfList: vrfRawData}, {parentNetId}] = response1\r\n                const {net_ip: netIp, net_comment: netComment, vrf_id: vrfId} = netData\r\n                this.initialNetData = ((serverData, parentNetId) => {\r\n                    const {net_id, net_ip, net_comment, vrf_id} = serverData\r\n                    return {\r\n                        parentNetId,\r\n                        netId: net_id,\r\n                        netIp: net_ip,\r\n                        netComment: net_comment,\r\n                        vrfId: vrf_id\r\n                    }\r\n                })(netData, parentNetId)\r\n                const vrfList = this.vrfList(vrfRawData)\r\n                this.setState({dataLoading: false, dataReady: true, netIp, netComment, vrfId, vrfList})\r\n            } catch (e) {\r\n                console.log('Loading net data ERROR', e.toString())\r\n            }\r\n\r\n        } else if (isVisible && newNet && !dataReady && !dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            this.initialNetData = null\r\n            const response1 = await this.fetchVrfList()\r\n            const {vrfList: vrfRawData} = response1\r\n            const vrfList = this.vrfList(vrfRawData)\r\n            this.setState({dataLoading: false, dataReady: true, vrfList})\r\n        } else if (isVisible && delNet && !dataReady && ! dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            const response = await Promise.all([\r\n                this.fetchNetData(netId),\r\n                this.getParentNetworkId(netId)\r\n            ])\r\n            const [{netData}, {parentNetId}] = response\r\n            const {net_ip: netIp, net_comment: netComment, vrf_id: vrfId} = netData\r\n            this.initialNetData = ((serverData, parentNetId) => {\r\n                const {net_id, net_ip, net_comment, vrf_id} = serverData\r\n                return {\r\n                    parentNetId,\r\n                    netId: net_id,\r\n                    netIp: net_ip,\r\n                    netComment: net_comment,\r\n                    vrfId: vrf_id\r\n                }\r\n            })(netData, parentNetId)\r\n            this.setState({dataLoading: false, dataReady: true, netIp, netComment, vrfId})\r\n        }\r\n    }\r\n}\r\n\r\nNetModalWindow.propTypes = {\r\n    isVisible: PropTypes.bool,\r\n    netId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    newNet: PropTypes.bool, // set mode of creation network\r\n    delNet: PropTypes.bool, // set mode of delete network\r\n    onClose: PropTypes.func,\r\n    onSubmit: PropTypes.func, //only if saving updated data is successful, this be invoked (if you need update table after store data i.e.)\r\n    onCreateSubmit: PropTypes.func, //only if saving new network is successful, this be invoked (if you need update table after store data i.e.)\r\n}\r\nNetModalWindow.defaultProps = {\r\n    isVisible: false,\r\n    onSubmit: (prevNetData, updatedNetData) => {\r\n        console.log(prevNetData, updatedNetData)\r\n    }\r\n}\r\n\r\nexport default NetModalWindow\r\n","import React, {Component, Fragment} from 'react'\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n// import {check} from 'check-types'\r\nimport {\r\n    invalidateElements,\r\n    forceUpdateRootElements,\r\n    forceUpdateRootElementsIds,\r\n    fetchElementsIfNeeded,\r\n    setFilter,\r\n    setCursor,\r\n} from '../../actions'\r\n\r\nimport {showFilteredItem, restoreSavedStates} from '../../actions'\r\n\r\nimport Table from '../Table'\r\nimport {Header, Body, Row, Column, Footer, Pagination3} from '../Table'\r\nimport RowsContainer from './RowsContainer'\r\nimport {getRootIds, getFilterItemList, getFilterCursor, getCurrentFilteredItem} from './selectors'\r\nimport FilterFactory from '../FilterFactory'\r\nimport axios from 'axios'\r\nimport {URL_FILTERED_SEARCH} from '../../constants/IpamTable'\r\nimport {ContextMenu, MenuItem} from \"react-contextmenu\"\r\nimport './contextMenu.css'\r\nimport NetModalWindow from '../NetModalWindow'\r\n\r\n\r\nclass IpamTable extends Component {\r\n\r\n    state = {\r\n        searching: false,\r\n        isNetModalVisible: false,\r\n        newNet: true,\r\n        delNet: false,\r\n        netId: ''\r\n    }\r\n\r\n    onCloseNetModal = () => {\r\n        this.setState({\r\n            isNetModalVisible: false,\r\n            netId: ''\r\n        })\r\n    }\r\n\r\n    onSubmitNetData = async (prevNetData, newNetData) => {\r\n        const netIds = new Set()\r\n        if (newNetData.netId) netIds.add(newNetData.netId)\r\n        netIds.add(newNetData.parentNetId)\r\n        if (prevNetData) {\r\n            if (prevNetData.delNet === false) netIds.add(prevNetData.netId)\r\n            netIds.add(prevNetData.parentNetId)\r\n        }\r\n        this.props.invalidateElementsInStore([...netIds].filter(item => item !== false), [])\r\n        //TODO remove deleted elements from store\r\n        if (netIds.has(false)) this.props.forceUpdateRootItems()\r\n    }\r\n\r\n    factory = new FilterFactory()\r\n\r\n    onChangeFiltersState = async (filterStatements) => {\r\n        const {updateFilterStore} = this.props\r\n        try {\r\n            this.setState({searching: true})\r\n            let response = await axios.post(URL_FILTERED_SEARCH, filterStatements)\r\n            const {searchResult = []} = response.data\r\n\r\n            updateFilterStore({searchResult})\r\n            this.setState({searching: false})\r\n        } catch (error) {\r\n            console.log('Error: ', error.response)\r\n            this.setState({searching: false})\r\n        }\r\n    }\r\n\r\n    filter = this.factory.createFilter('simpleSearch', [{\"nets\": [\"net_ip\", \"net_comment\", \"vrf_name\", \"vrf_comment\", \"net_location\"]}, {\"host_ports\": [\"\"]}], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n    // filter2 = this.factory.createFilter('simpleSearch', ['ip', 'net_ip', 'office'], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n\r\n\r\n    renderBodyData = function(data){\r\n        const {netsIds = [], hostsIds = []} = data\r\n        return (\r\n            <React.Fragment>\r\n                <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={0} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const data = {body: {netsIds: this.props.netsIds, hostsIds: this.props.hostsIds}}\r\n        const {filteredItemsList, showCurrentFilteredItem, restoreStateFromFilter, setFilterCursor, filterCursor, currentFilteredItem} = this.props\r\n\r\n        window.fact = this.factory\r\n\r\n        return (\r\n            <Fragment>\r\n                <Table width={'100%'} data={data} formBodyData={this.renderBodyData} fetchData={this.fetchData} scrollPosition={currentFilteredItem} >\r\n                    <Header>\r\n                        <Row>\r\n                            <Column accessor={''} minWidth={'200px'} maxWidth={'400px'}>IP address</Column>\r\n                            <Column accessor={''} minWidth={'100px'} fixed>Statistics<br/>(Nets/Hosts)</Column>\r\n                            <Column accessor={''} minWidth={'130px'} fixed>Network mask</Column>\r\n                            <Column accessor={''} minWidth={'200px'} maxWidth={'500px'}>Locations</Column>\r\n                            <Column accessor={''} minWidth={'100px'} maxWidth={'300px'}>Comment</Column>\r\n                            <Column accessor={''} minWidth={'150px'} maxWidth={'300px'}>Интерфейс</Column>\r\n                            <Column accessor={''} minWidth={'150px'} maxWidth={'300px'}>Оборудование</Column>\r\n                            <Column accessor={''} minWidth={'80px'} fixed>VRF</Column>\r\n                            <Column accessor={''} minWidth={'80px'} fixed>AS</Column>\r\n                            <Column accessor={''} minWidth={'100px'} fixed>Тип</Column>\r\n                            <Column accessor={''} minWidth={'200px'} maxWidth={'300px'}>Hostname</Column>\r\n                            <Column accessor={''} minWidth={'100px'} maxWidth={'300px'}>DNS</Column>\r\n                        </Row>\r\n                    </Header>\r\n                    <Body />\r\n                    <Footer>\r\n                        <div style={{display: 'flex'}}>\r\n                            {this.filter}\r\n                            {/*<Pagination3 filteredItemsList={filteredItemsList} onChange={this.props.showCurrentFilteredItem} />*/}\r\n                            <Pagination3 filteredItemsList={filteredItemsList} searchingState={this.state.searching} onChange={showCurrentFilteredItem} onNewItemsList={restoreStateFromFilter} onHideFilter={restoreStateFromFilter} setFilterCursor={setFilterCursor} filterCursor={filterCursor} />\r\n                        </div>\r\n                        <div> </div>\r\n                    </Footer>\r\n                </Table>\r\n                <ContextMenu id={\"headerTable\"}>\r\n                    <MenuItem data={{foo: 'bar'}} onClick={(e, data) => {console.log(data)}}>\r\n                        Net Item 1\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <ContextMenu id={\"netRowMenu\"}>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: data.id,\r\n                            newNet: false,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Редактировать подсеть\r\n                    </MenuItem>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: '',\r\n                            newNet: true,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Создать подсеть\r\n                    </MenuItem>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: data.id,\r\n                            newNet: false,\r\n                            delNet: true\r\n                        })\r\n                    }}>\r\n                        Удалить подсеть\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <ContextMenu id={\"hostRowMenu\"}>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: '',\r\n                            newNet: true,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Создать подсеть\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <NetModalWindow isVisible={this.state.isNetModalVisible} newNet={this.state.newNet} delNet={this.state.delNet} netId={this.state.netId} onClose={this.onCloseNetModal} onSubmit={this.onSubmitNetData} />\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.factory.subscribe(this.onChangeFiltersState);\r\n        const {forceUpdateRootItems} = this.props\r\n        forceUpdateRootItems()\r\n    }\r\n}\r\n\r\n\r\n    function selectorFactory(dispatch) {\r\n        // let result = {}\r\n        function forceUpdateRootItems () {\r\n            dispatch(forceUpdateRootElements())\r\n        }\r\n        function forceUpdateRootIds () {\r\n            dispatch (forceUpdateRootElementsIds())\r\n        }\r\n        function invalidateElementsInStore(netsIds, hostsIds) {\r\n            dispatch(invalidateElements({netsIds, hostsIds}))\r\n        }\r\n        function updateFilterStore ({searchResult}) {\r\n            dispatch(setFilter({searchResult}))\r\n        }\r\n        function setFilterCursor (position) {\r\n            dispatch(setCursor(position))\r\n        }\r\n        function showCurrentFilteredItem (idx) {\r\n            dispatch(showFilteredItem(idx))\r\n        }\r\n        function restoreStateFromFilter () {\r\n            dispatch(restoreSavedStates())\r\n        }\r\n\r\n        return (state, ownProps) => {\r\n            const {netsIds, hostsIds} = getRootIds(state)\r\n            const filteredItemsList = getFilterItemList(state)\r\n            const filterCursor = getFilterCursor(state)\r\n            const currentFilteredItem = getCurrentFilteredItem(state)\r\n            return {\r\n                forceUpdateRootItems,\r\n                forceUpdateRootIds,\r\n                invalidateElementsInStore,\r\n                updateFilterStore,\r\n                setFilterCursor,\r\n                showCurrentFilteredItem,\r\n                getCurrentFilteredItem,\r\n                restoreStateFromFilter,\r\n                filteredItemsList,\r\n                filterCursor,\r\n                currentFilteredItem,\r\n                netsIds,\r\n                hostsIds\r\n            }\r\n        }\r\n}\r\n\r\n\r\nIpamTable.propTypes = {\r\n    //from dispatchToProps\r\n    forceUpdateRootItems: PropTypes.func,\r\n    forceUpdateRootIds: PropTypes.func,\r\n    invalidateElementsInStore: PropTypes.func,\r\n    updateRootElementsId: PropTypes.func,\r\n    updateElements: PropTypes.func,\r\n    updateFilterStore: PropTypes.func,\r\n    setFilterCursor: PropTypes.func,\r\n    currentFilteredItem: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        ip: PropTypes.string,\r\n        rec_type: PropTypes.string,\r\n        ip_path: PropTypes.string\r\n    }),\r\n    showCurrentFilteredItem: PropTypes.func,\r\n    filteredItemsList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n\r\n    //from stateToProps\r\n    rootnetsIds: PropTypes.array,\r\n    rootHostsId: PropTypes.array,\r\n};\r\nIpamTable.defaultProps = {\r\n    rootnetsIds: [],\r\n    rootHostsId: []\r\n};\r\n\r\n\r\nexport default connectAdvanced(selectorFactory)(IpamTable)","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    fas\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    fas\r\n);\r\n","import check from 'check-types'\r\n/**\r\n * convert string to int array and return items that >= 0\r\n * @param dataString\r\n * @returns {Array}\r\n */\r\nexport function convertToIntArray(dataString) {\r\n    if (check.array(dataString)) return dataString\r\n    if (!check.string(dataString)) return []\r\n\r\n    const idArray = dataString.split(\",\")\r\n    const filteredIds = []\r\n    for (let id of idArray) {\r\n        id = parseInt(id.trim(), 10)\r\n        if (id >= 0) filteredIds.push(id)\r\n    }\r\n    return filteredIds\r\n}\r\n\r\nexport function isItterable(obj) {\r\n    // checks for null and undefined\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    return typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n","import {convertToIntArray} from '../helperFunctions'\r\nimport {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    netsIds: [],\r\n    hostsIds: [],\r\n    isFetching: false,\r\n    didInvalidate: false\r\n}\r\n\r\nconst rootElementsIds = (rootElements = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case REQUEST_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            })\r\n        case RECEIVE_ROOT_ELEMENTS_ID:\r\n            const {netsIds, hostsIds} = payload\r\n            return Object.assign({}, rootElements, {\r\n                netsIds: convertToIntArray(netsIds),\r\n                hostsIds: convertToIntArray(hostsIds),\r\n                isFetching: false,\r\n                didInvalidate: false\r\n            })\r\n        case INVALIDATE_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: false,\r\n                didInvalidate: true\r\n            })\r\n        default:\r\n            return rootElements\r\n    }\r\n}\r\nexport default rootElementsIds","import cloneDeep from 'lodash/cloneDeep'\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {convertToIntArray, isItterable} from '../helperFunctions'\r\n\r\nconst initialDataStore = {\r\n    networks: {},\r\n    hosts: {},\r\n    selectedNets: [],\r\n    selectedHosts: []\r\n}\r\nconst networkElementInitialState = () => ({\r\n    netLocations: {},\r\n    netChildren: [],\r\n    hostChildren: [],\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n})\r\nconst hostElementInitialState = {\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param netData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleNetworkElement = (stateOfElement = networkElementInitialState(), actionType, netData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {net_id: id, net_ip: ip, net_mask: netmask, net_comment: comment, vrf_id: vrfId, vrf_name: vrfName,vrf_rd:  vrfRd, net_children: netChildren, host_children: hostChildren, net_location: netLocations, bgp_as: bgpAs} = netData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ip,\r\n                netmask,\r\n                comment,\r\n                vrfId,\r\n                vrfName,\r\n                vrfRd,\r\n                bgpAs,\r\n                netLocations: JSON.parse(netLocations),\r\n                netChildren: convertToIntArray(netChildren),\r\n                hostChildren: convertToIntArray(hostChildren),\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            return Object.assign({}, stateOfElement, {\r\n                isExpanded: !stateOfElement.isExpanded,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst handleHostElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {port_id: id, port_ip: ip, port_masklen: maskLen, port_mask: mask, port_ip_cidr: ipCidr, port_mac: mac, dev_location: location, port_comment: portComment, port_desc: portDescr, port_name: portName, dev_title: devName, dev_type: devType, dev_hostname: hostname, dev_last_update: lastUpdate, dev_last_update_ms: lastUpdateMs, dev_age_h: age, vrf_name: vrfName, dns } = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ip,\r\n                maskLen,\r\n                mask,\r\n                ipCidr,\r\n                mac,\r\n                location,\r\n                portComment,\r\n                portDescr,\r\n                portName,\r\n                devName,\r\n                devType,\r\n                hostname,\r\n                lastUpdate,\r\n                lastUpdateMs,\r\n                age,\r\n                vrfName,\r\n                dns,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst expandNetworkElement = (element) => {\r\n    return Object.assign({...cloneDeep(element), isExpanded: true})\r\n}\r\nconst selectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: true})\r\n}\r\nconst deselectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: false})\r\n}\r\n\r\nconst netData = (store = initialDataStore, action) => {\r\n    const {type, payload = {}} = action\r\n    const {networks, hosts, selectedNets, selectedHosts} = store\r\n\r\n    const {netsIds = [], networksData = {}, hostsIds = [], hostsData = {}, id} = payload\r\n\r\n    const updatedNetworkElements = {}\r\n    const updatedHostElements = {}\r\n    let updatedSelectedNets = []\r\n    let updatedSelectedHosts = []\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = {...handleNetworkElement(networks[id], type), id}\r\n            })\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = {...handleHostElement(hosts[id], type), id}\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case RECEIVE_ELEMENTS:\r\n            if (isItterable(networksData)) {\r\n                for (const data of networksData) {\r\n                    const {net_id: id} = data\r\n                    updatedNetworkElements[id] = handleNetworkElement(networks[id], type,data)\r\n                }\r\n            }\r\n            if (isItterable(hostsData)) {\r\n                for (const data of hostsData) {\r\n                    const {port_id: id} = data\r\n                    updatedHostElements[id] = handleHostElement(hosts[id], type,data)\r\n                }\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            updatedNetworkElements[id] = handleNetworkElement(networks[id], type)\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case NET_ITEMS_EXPAND:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = expandNetworkElement(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case SELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = selectItem(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: netsIds})\r\n         case DESELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = deselectItem(networks[id])\r\n            })\r\n            updatedSelectedNets = selectedNets.filter(id => !netsIds.includes(id))\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: updatedSelectedNets})\r\n        case SELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = selectItem(hosts[id])\r\n            })\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: hostsIds})\r\n        case DESELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = deselectItem(hosts[id])\r\n            })\r\n            updatedSelectedHosts = selectedHosts.filter(id => !hostsIds.includes(id))\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: updatedSelectedHosts})\r\n        case UPDATE_NET_ITEMS:\r\n            const {itemsState = {}} = payload\r\n            for (const [id, item] of Object.entries(itemsState)) {\r\n                const fromStore = store.networks[id]\r\n                if (!fromStore) continue\r\n                updatedNetworkElements[id] = Object.assign(cloneDeep(fromStore), item)\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        default:\r\n            return store\r\n    }\r\n}\r\n\r\nexport default netData\r\n","import {\r\n    SET_CURSOR,\r\n    SET_FILTER,\r\n    SHOW_RESULT_ITEM,\r\n    BACKUP_NET_ITEMS\r\n} from '../constants/actions'\r\n\r\nconst initialFilterStore = {\r\n    itemList: [],\r\n    hostIdBackupList: [],\r\n    netIdBackupList: [],\r\n    hostItemsBackup: {},\r\n    netItemsBackup: {},\r\n    cursor: 0,\r\n}\r\n\r\nconst filter = (store = initialFilterStore, action) => {\r\n    const {type, payload} = action\r\n    // const {itemList, hostStateBackups, netStateBackup, cursor} = store\r\n\r\n    switch (type) {\r\n        case SET_FILTER:\r\n            const {searchResult} = payload\r\n            return {...store, itemList: searchResult, cursor: 0}\r\n        case SET_CURSOR:\r\n            const {position} = payload\r\n            return {...store, cursor: position}\r\n        case BACKUP_NET_ITEMS:\r\n            const {itemsState} = payload\r\n            const netIdBackupList = Object.keys(itemsState).map(id => parseInt(id))\r\n            return {...store, netItemsBackup: itemsState, netIdBackupList}\r\n        case SHOW_RESULT_ITEM:\r\n        default:\r\n            return store\r\n    }\r\n}\r\nexport default filter","import {combineReducers} from 'redux'\r\nimport rootElementsIds from './rootElementsIds'\r\nimport netData from './netData'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    rootElementsIds,\r\n    netData,\r\n    filter\r\n})\r\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport 'isomorphic-fetch'\n\nimport './globalStyles/bootstrap/custBootstrap.scss'\n\nimport App from \"./components/App\";\nimport AppNavbar from './components/AppNavbar'\nimport IpamTable from './components/IpamTable'\nimport './components/fontAwesome/faLibrary.js'\nimport configureStore from './configureStore'\nimport {URL_REQUEST_ROOT_ELEMENTS_ID, URL_REQUEST_NET_ELEMENTS_BY_ID, URL_REQUEST_HOST_ELEMENTS_BY_ID} from './constants/IpamTable'\n\nconst store = configureStore()\n//debug only\nwindow.store = store\nconsole.log('API_GET_ROOT_IDS', URL_REQUEST_ROOT_ELEMENTS_ID)\nconsole.log('API_GET_NET_ELEMENTS_BY_ID', URL_REQUEST_NET_ELEMENTS_BY_ID)\nconsole.log('API_GET_HOST_ELEMENTS_BY_ID', URL_REQUEST_HOST_ELEMENTS_BY_ID)\n\nrender(\n    <Provider store={store}>\n        <App>\n            <App.Header>\n                <AppNavbar />\n            </App.Header>\n            <App.Body>\n                <IpamTable/>\n            </App.Body>\n            {/*<App.Footer>*/}\n\n            {/*</App.Footer>*/}\n        </App>\n    </Provider>,\n    document.getElementById(\"root\"));","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default function configureStore() {\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        return createStore(\r\n            reducer,\r\n            compose(\r\n                applyMiddleware(\r\n                    thunkMiddleware\r\n                ),\r\n                window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            )\r\n\r\n        )\r\n    }\r\n    return createStore(\r\n        reducer,\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n\r\n}"],"sourceRoot":""}