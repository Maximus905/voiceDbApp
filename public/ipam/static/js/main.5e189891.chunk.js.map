{"version":3,"sources":["components/NetModalWindow/style.module.css","components/Base/Input2/style.module.css","components/Base/Select/style.module.css","img/logo_brs_small.png","components/AppNavbar/navBar.module.css","components/App/appContext.js","components/App/styles.js","components/App/index.js","components/AppNavbar/index.js","components/AppNavbar/URLs.js","constants/actions.js","constants/IpamTable.js","actions/netItems.js","actions/rootElementsIds.js","actions/filter.js","components/Table/Theme/Utils/index.js","components/Table/TableContext/index.js","components/Table/tableConstants.js","components/Table/Column/index.js","components/Table/Row/index.js","components/Table/Header/index.js","components/Table/Body/index.js","components/Table/TableFooter/index.js","components/Table/Footer/index.js","components/Table/Pagination/selectReactCustomStyle.js","components/Table/Pagination/paginationConstants.js","components/Table/Theme/index.js","components/Table/Pagination/index.js","components/Table/Pagination2/styles.js","components/Table/Pagination2/index.js","components/Table/Pagination3/styles.js","components/Table/Pagination3/index.js","components/Table/jssInstance.js","components/Table/fontAwesome/faLibrary.js","components/Table/index.js","components/IpamTable/NetRecordRow/styles.js","components/IpamTable/NetRecordRow/index.js","components/IpamTable/HostRecordRow/styles.js","components/IpamTable/HostRecordRow/index.js","components/IpamTable/ChildrenRowsContainer/index.js","components/IpamTable/RowsContainer/index.js","components/IpamTable/selectors/index.js","components/FilterFactory/SimpleSearch/constants.js","components/FilterFactory/SimpleSearch/index.js","components/FilterFactory/index.js","components/Base/Input2/index.js","components/Base/Select/index.js","components/NetModalWindow/index.js","components/IpamTable/index.js","components/fontAwesome/faLibrary.js","helperFunctions/index.js","reducer/rootElementsIds.js","reducer/netData.js","reducer/filter.js","reducer/index.js","index.js","configureStore.js"],"names":["module","exports","modalBody","modalBodySmall","formGroupZeroMargin","indents","size","__webpack_require__","p","customHeader","AppContext","React","createContext","styles","app","height","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","msGridColumns","msGridRows","header","gridArea","msGridRow","msGridColumn","body","overflowY","footer","cssSheet","create","preset","createStyleSheet","attach","App","appRefs","_this2","this","css","classes","react_default","a","createElement","className","ref","el","appContext","Provider","value","props","children","Component","Header","_Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this3","Consumer","_ref","Body","_Component3","_this4","_ref2","Footer","_Component4","_this5","_ref3","imgStyle","width","AppNavbar","react_bootstrap_es","fluid","Brand","href","src","logo","style","alt","eventKey","title","id","pullRight","divider","REQUEST_ROOT_ELEMENTS_ID","RECEIVE_ROOT_ELEMENTS_ID","INVALIDATE_ROOT_ELEMENTS_ID","REQUEST_ELEMENTS","RECEIVE_ELEMENTS","INVALIDATE_ELEMENTS","NET_ITEM_TOGGLE_EXPAND_COLLAPSE","NET_ITEMS_EXPAND","UPDATE_NET_ITEMS","SELECT_NET_ITEMS","DESELECT_NET_ITEMS","SELECT_HOST_ITEMS","DESELECT_HOST_ITEMS","BASE_URL","protocol","window","location","hostname","port","concat","URL_REQUEST_ROOT_ELEMENTS_ID","URL_REQUEST_NET_ELEMENTS_BY_ID","URL_REQUEST_HOST_ELEMENTS_BY_ID","URL_FILTERED_SEARCH","NET_DATA_URL","VRF_LIST_URL","NET_SUBMIT_URL","GET_NET_PARENT","requestElements","netsIds","hostsIds","type","payload","receiveElements","networksData","hostsData","updateNetItems","itemsState","getInvalidatedData","store","elementsIds","length","filter","didInvalidate","fetchElementsIfNeeded","_ref4","dispatch","getState","filteredNetsIds","netData","networks","filteredHostsIds","hosts","_ref5","_ref6","asyncToGenerator","regenerator_default","mark","_callee2","requestsArray","netsFormData","netsDataRequest","hostsFormData","hostsDataRequest","pArray","fetchResult","result","wrap","_context2","prev","next","FormData","append","Request","mode","method","push","abrupt","map","_ref7","_callee","request","response","_context","fetch","sent","json","stop","_x2","Promise","all","reduce","acc","assign","t0","console","log","message","_x","fetchNetData","receiveRootElementsId","data","fetchRootElementsId","res","rootElementsIds","axios","get","prevIdx","setFilter","searchResult","setCursor","position","backupNetItems","showFilteredItem","idx","itemList","netIdBackupList","currentItem","prewItem","undefined","check","not","object","rec_type","ip_path","path","string","split","item","parseInt","netPathIds","toConsumableArray","restoreNetIdList","netId","includes","restBackupNetIdList","backupNetIdList","netItemsForRestoring","itemsIds","forEach","itemId","netItemsBackup","_filter$netItemsBacku","isSelected","isExpanded","netItemsFilterStoreSlice","netItemsForBackuping","_netItemsBackup$itemI","_netData$networks$ite","netItemsDataSlice","emptyObject","deselectNetItems","deselectHostItems","selectNetItems","selectHostItems","color","Color","rgb","toString","darkenColor","ratio","darken","lightenColor","lighten","TableContext","tableConnect","_PureComponent","WithTableContext","_this","tableContext","PureComponent","TableProvider","DEFAULT_TABLE_STYLE","DEFAULT_VALUES","fetchData","_method","resolve","bodyDataKey","footerDataKey","DEFAULT_CSS_CLASS_NAMES","Column","innerStyles","_this$props","index","minWidth","maxWidth","fixed","accessor","filterable","sortable","_this$props$tableCont","columnsParams","dimensions","columnsSizes","_this$props2","cssClasses","isHeader","writeParams","joinCss","saveColumnParams","join","defaultProps","padding","changeWidth","order","Row","jssSheet","isFooter","tableHeaderRowDc","tableFooterRowDc","tableBodyRowDc","selectedRow","rowType","_this$props2$rowId","rowId","_this$props2$tableCon","filterComponentsByType","createRowRef","injectedProps","es6","disable","holdToDisplay","contextMenuId","renderTag","attributes","data-row-type","data-id","collect","scrollSz","scrollBodySz","tableInnerStyles","table","tableHeaderSz","headerInnerStyles","columnsCss","rows","lastRow","columns","column","columnClasses","innerCss","columnClass","columnSizeClass","columnDecoClass","cloneElement","buildHeaderRows","tbodyInnerStyles","tableBody","tableBodyDc","tableBodySz","parseData","array","rowData","rowIndex","Table_Row","colIndex","Table_Column","buildBodyHeader","cssClass","bodyref","tbodyRef","_this$props$tableCont2","formBodyData","hideHeader","TableFooter","tfootInnerStyles","tableFooter","tableFooterDc","childrenWrapper","Children","count","buildTableFooterHeader","_this$props$tableCont3","footerContainer","footerContainerDc","pagination","customStyles","option","base","state","objectSpread","container","control","minHeight","dropdownIndicator","input","margin","DEFAULT_VALUE_INDEX","STYLE","SELECT_OPTIONS","label","hexCode","tableBgColor","tableTextColor","headerBgColor","headerTextColor","bodyBgColor","bodyTextColor","tableFooterBgColor","tableFooterTextColor","footerBgColor","footerTextColor","footerIconColor","disabledColor","border","stripedColorFactor","hoverColorFactor","paddingHeaderCell","paddingBodyCell","paddingTableFooterCell","selectedRowBgColor","selectedRowTextColor","justifyContent","alignItems","PAGINATION","& .rowsOnPage","containerDc","fontSize","backgroundColor","pageNumber","& input","pageNumberDc","borderRadius","disabled","theme","navButton","Pagination","defaultValueRecordsOnPage","selectDefaultValueIndex","selectOptions","currentPage","pageNumberInput","totalPages","rowsOnPage","pageNumberBlock","onChange","onChangePageNumberBlock","onKeyUp","onKeyUpPageNumberBlock","e","target","setState","prevState","keyCode","onChangeSelect","opt","onClickNextPage","newPage","String","onClickPrevPage","onClickFirstPage","onClickLastPage","selectProps","options","defaultValue","menuPlacement","_this$state","onClick","index_es","icon","react_select_esm","shareState","updateData","selectWidth","injectSheet","Pagination2","prevItemList","itemNumberInput","lastItemIdx","currentItemIdx","resetState","currentItemList","updateCurrentItemInput","filterCursor","currentNumberBlock","setFilterCursor","newState","_this$props$filterIte","filterItemList","_this$props$filterIte2","current","Pagination3","isVisible","itemsList","updateState","newItemList","onNewItemsList","onHideFilter","listLength","filteredItemsList","inputListLength","newCurrent","jss","library","add","faFastBackward","faBackward","faForward","faFastForward","faSquare","faCheck","Table","tableBodyData","tableFooterData","tableRefs","createRef","bodyContainer","scroll","cellWidth","bodyCellWidth","tableStyles","flexDirection","boxSizing","& table, & thead, & tbody, & tfoot, & tr, & th, & td","tableContainer","flexGrow","overflowX","flexShrink","tableHeaderBodyContainer","flexBasis","tableFooterContainer","tableHeaderContainer","tableBodyContainer","tableLayout","tableHeader","tableContainerDc","tableBodyContainerDc","& th","&:nth-child(odd)","bodyStriped","& td","&:hover","containerSz","tableBodyContainerSz","tableFooterContainerSz","& tr","link","updateColumnsSizesInDOM","_this$tableContext","columnSet","getRule","prop","columnsWidth","updateDimensions","_this$tableContext2","containerWidth","clientWidth","sumOfMinWidth","sum","scrollSize","freeSpace","Math","trunc","numberOfExtendableColumns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","spacePerColumn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","additionWidth","updateColumns","states","parseFetchedResult","t1","name","cssStyles","scrollPosition","scrollbarSizeLoad","scrollSizes","scrollbarWidth","scrollbarHeight","component","injectIndex","child","Error","hdChildren","lastRowChildren","columnCssPrefix","columnSizeCssPrefix","columnDecoCssPrefix","_this2$jssSheet$addRu","params","addRules","defineProperty","alignment","offset","row","bodyXY","getBoundingClientRect","rowXY","scrollBy","y","element","yScroll","box","toLowerCase","top","bottom","setColumnsCss","react_scrollbar_size_default","onLoad","targetRow","addEventListener","scrollAt","tabRefs","prevProps","removeEventListener","innerCssClasses","extCssClasses","nonEmptyString","Caption","bordered","isStretch","LVL_INDENT_WIDTH","lvlBlock","marginRight","cursor","NetRecordRow","lvlIndent","lvl","ipAddress","netmask","comment","vrfName","netLocations","netChildren","hostChildren","isFetching","toggleIconHandler","rowProps","locations","_arr","values","_i","HostRecordRow","ChildrenRowsContainer","parentNetId","IpamTable_RowsContainer","RowsContainer","childrenNetsIds","childrenHostsIds","netsData","netRows","Fragment","IpamTable_NetRecordRow","IpamTable_ChildrenRowsContainer","hostRows","IpamTable_HostRecordRow","updateDataIfNeeded","connectAdvanced","ownProps","itemData","getRootNetsIds","getRootHostsIds","getFilterItemList","getFilterCursor","getRootIds","createSelector","rootNetsIds","rootHostsIds","rootNetsData","rootHostsData","hostData","getFilterResults","MIN_SEARCH_LENGTH","SimpleSearch","minSearchLength","searchBy","accessorList","statement","defaultStatement","timerId","isEmpty","filterState","updateParentState","updateFilterState","onChangeHandler","placeholder","clearTimeout","setTimeout","minLengthForSearch","FilterFactory","filtersStore","listeners","statementSet","=","!=",">",">=","<","<=","beginWith","endWith","empty","notEmpty","subscribe","callBack","function","listenerId","unsubscribe","listenerID","listener","createFilter","filterType","filterProps","keys","indexOf","filterId","FilterFactory_SimpleSearch","propTypes","Input2","clearMargin","addOnPosition","addOnText","controlLabel","emptyString","formControl","readOnly","customSize","leftAddOn","Addon","rightAddOn","react","controlId","bsClass","Select","prevValue","prevFilter","isLoading","optionsInvalidate","optionList","setDefaultSelected","handleChange","isNaN","defaultSelectedValue","checkSelected","checkFilter","isEqual","invokeListeners","JSON","stringify","cloneDeep","subscriber","buildOptionList","emptyOption","emptyValue","emptyLabel","optionsSet","isAsync","updateRemoteOptionList","updateLocalOptionList","remoteDataFetch","remoteDataFetchDefault","remoteSourceUrl","post","_context3","componentClass","smallSize","updateIfNeeded","defaultSelected","selected","NetModalWindow","prevVisibleState","initialState","prevVrfData","prevList","netIp","netComment","dataLoading","dataReady","saving","vrfId","vrfList","initialNetData","currentNetData","delNet","newNet","getParentNetworkId","errors","clearStateIfGetInvisible","clearState","vrfData","vrf","vrf_id","vrf_name","vrf_rd","vrf_comment","handleClose","onClose","dataValidate","_this$state2","handleSubmit","nonEmptyArray","alert","onSubmit","_callee3","fetchVrfList","_callee4","_context4","ipFormat","RegExp","test","onChangeNetIp","onChangeNetComment","onChangeVrf","_this$state3","align","md","Base_Input2","Base_Select","modalTitle","show","onHide","closeButton","Title","custCss","bsStyle","bsSize","response1","vrfRawData","net_ip","net_comment","serverData","net_id","_context6","prevNetData","updatedNetData","IpamTable","isNetModalVisible","onCloseNetModal","onSubmitNetData","newNetData","netIds","Set","invalidateElementsInStore","has","forceUpdateRootItems","factory","onChangeFiltersState","filterStatements","updateFilterStore","_response$data$search","hideUnusedRows","renderBodyData","_data$netsIds","_data$hostsIds","fact","components_Table","Table_Header","Table_Body","Table_Footer","Table_Pagination3","showCurrentFilteredItem","restoreStateFromFilter","foo","components_NetModalWindow","rootnetsIds","rootHostsId","_getState","_getState$rootElement","_x4","_x5","forceUpdateRootIds","_x6","_x7","invalidateElements","nonEmptyObject","_getRootIds","filterStore","fas","convertToIntArray","dataString","idArray","filteredIds","trim","isItterable","obj","rootElements","action","initialDataStore","selectedNets","selectedHosts","hostElementInitialState","handleNetworkElement","stateOfElement","actionType","address","vrfRd","net_children","host_children","parse","handleHostElement","__id","macAddress","selectItem","deselectItem","_action$payload","_payload$netsIds","_payload$networksData","_payload$hostsIds","_payload$hostsData","updatedNetworkElements","updatedHostElements","updatedSelectedNets","updatedSelectedHosts","_payload$itemsState","entries","slicedToArray","fromStore","initialFilterStore","hostIdBackupList","hostItemsBackup","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","createStore","reducer","compose","applyMiddleware","thunkMiddleware","render","es","components_App","components_AppNavbar","components_IpamTable","document","getElementById"],"mappings":"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","file":"static/js/main.5e189891.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"style_modalBody__2wfq7\",\"modalBodySmall\":\"style_modalBodySmall__3SHRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__2ctIA\",\"indents\":\"style_indents__1vRt1\",\"size\":\"style_size__2UtDY style_indents__1vRt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__3amkx\",\"indents\":\"style_indents__2vdkK\",\"size\":\"style_size__15Llz style_indents__2vdkK\"};","module.exports = __webpack_public_path__ + \"static/media/logo_brs_small.9f0fd020.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customHeader\":\"navBar_customHeader__1B2rr\"};","import React from 'react'\r\nconst AppContext = React.createContext()\r\nexport default AppContext","const styles = {\r\n    app: {\r\n        height: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        gridTemplateRows: 'auto 1fr auto',\r\n        gridTemplateAreas: \"'header' 'body' 'footer'\",\r\n\r\n        msGridColumns: '1fr',\r\n        msGridRows: 'auto 1fr auto',\r\n    },\r\n    header: {\r\n        gridArea: 'header',\r\n\r\n        msGridRow: 1,\r\n        msGridColumn: 1\r\n    },\r\n    body: {\r\n        gridArea: 'body',\r\n        overflowY: 'auto',\r\n        msGridRow: 2,\r\n        msGridColumn: 1,\r\n    },\r\n    footer: {\r\n        gridArea: 'footer',\r\n\r\n        msGridRow: 3,\r\n        msGridColumn: 1\r\n    }\r\n}\r\nexport default styles","import React, {Component} from 'react'\r\nimport AppContext from './appContext'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\nimport styles from './styles'\r\n\r\nimport '../../globalStyles/bootstrap/custBootstrap.scss'\r\n\r\nconst jss = create(preset())\r\nconst cssSheet = jss\r\n    .createStyleSheet(styles)\r\n    .attach()\r\n\r\nclass App extends Component{\r\n    appRefs = {\r\n        app: null,\r\n        header: null,\r\n        body: null,\r\n        footer: null\r\n    }\r\n\r\n    render() {\r\n        const {classes: css} = cssSheet\r\n        return (\r\n            <div className={css.app} ref={el => this.appRefs.app = el}>\r\n                <AppContext.Provider value={{\r\n                    appRefs: this.appRefs,\r\n                    css\r\n                }}>\r\n                    {this.props.children}\r\n                </AppContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n}\r\n\r\nApp.Header = class Header extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.header} ref={el => appRefs.header = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Body = class Body extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.body} ref={el => appRefs.body = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.Footer = class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {({appRefs, css}) => {\r\n                    return <div className={css.footer} ref={el => appRefs.footer = el}>{this.props.children}</div>\r\n                }}\r\n            </AppContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    appRefs: PropTypes.shape({\r\n        app: PropTypes.node,\r\n        header: PropTypes.node,\r\n        body: PropTypes.node,\r\n        footer: PropTypes.node\r\n    })\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {Navbar, Nav, NavItem, NavDropdown, MenuItem} from 'react-bootstrap'\r\nimport logo from '../../img/logo_brs_small.png'\r\nimport styles from './navBar.module.css'\r\n// import CSSModules from 'react-css-modules'\r\nimport * as URL from './URLs'\r\n\r\nconst imgStyle = {\r\n    width: 38\r\n}\r\n\r\nconst AppNavbar = () => {\r\n    return (\r\n        <Navbar fluid>\r\n            <Navbar.Header>\r\n                <Navbar.Brand className={styles.customHeader} >\r\n                    <a href={URL.root}><img src={logo} style={imgStyle} alt=\"img\"/></a>\r\n                </Navbar.Brand>\r\n            </Navbar.Header>\r\n\r\n            <Nav>\r\n                <NavItem eventKey={1} href={URL.offices}>\r\n                    Офисы\r\n                </NavItem>\r\n                <NavItem eventKey={2} href={URL.devices}>\r\n                    Оборудование\r\n                </NavItem>\r\n                <NavDropdown eventKey={3} title=\"IP Planing\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={3.1} href={URL.ip_ipam}>IPAM</MenuItem>\r\n                </NavDropdown>\r\n                <NavItem eventKey={4} href={URL.reports}>\r\n                    Reports\r\n                </NavItem>\r\n                <NavDropdown eventKey={5} title=\"Phone Reports\" id=\"basic-nav-dropdown-1\">\r\n                    <MenuItem eventKey={5.1} href={URL.reportPhoneByModels}>По моделям</MenuItem>\r\n                    <MenuItem eventKey={5.2} href={URL.reportPhoneByClusters}>По кластерам</MenuItem>\r\n                    <MenuItem eventKey={5.3} href={URL.reportPhoneByNotUsed}>По неиспользуемым</MenuItem>\r\n                </NavDropdown>\r\n\r\n            </Nav>\r\n\r\n            <Nav pullRight>\r\n                <NavDropdown eventKey={6} title=\"Справочники\" id=\"basic-nav-dropdown-2\">\r\n                    <MenuItem eventKey={6.1} href={URL.dictRegions}>Регионы</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictCities}>Города</MenuItem>\r\n                    <MenuItem eventKey={6.3} href={URL.dictOffice_stats}>Статусы офисов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.dictDevices}>Оборудование</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.dictPortTypes}>Типы портов</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.1} href={URL.HwLogs}>Логи Hardware</MenuItem>\r\n                    <MenuItem eventKey={6.2} href={URL.PhonesLogs}>Логи Phones</MenuItem>\r\n                    <MenuItem divider />\r\n                    <MenuItem eventKey={6.4} href={URL.dictVRFs}>VRF</MenuItem>\r\n                    <MenuItem eventKey={6.4} href={URL.dictNetworksTable}>Networks(Table)</MenuItem>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default AppNavbar\r\n","export const root = \"/\"\r\nexport const offices = \"/locations\"\r\nexport const devices = \"/device/info\"\r\nexport const ip_ipam = \"/network/ipam\"\r\nexport const reports = \"/report/new\"\r\n\r\nexport const reportPhoneByModels = \"/report/phoneStatsReport\"\r\nexport const reportPhoneByClusters = \"/report/phoneStatsByClustersReport\"\r\nexport const reportPhoneByNotUsed = \"/report/phoneStatsByNotUsedReport\"\r\n\r\nexport const dictRegions = \"/admin/regions\"\r\nexport const dictCities = \"/admin/cities\"\r\nexport const dictOffice_stats = \"/admin/officeStatuses\"\r\nexport const dictDevices = \"/admin/devparts\"\r\nexport const dictPortTypes = \"/admin/portTypes\"\r\nexport const dictVRFs = \"/admin/vrf\"\r\nexport const dictNetworksTable = \"/admin/NetworksTab\"\r\n\r\nexport const HwLogs = \"/logs\"\r\nexport const PhonesLogs = \"/logs/phones\"\r\n","export const REQUEST_ROOT_ELEMENTS_ID = 'REQUEST_ROOT_ELEMENTS_ID'\r\nexport const RECEIVE_ROOT_ELEMENTS_ID = 'RECEIVE_ROOT_ELEMENTS_ID'\r\nexport const INVALIDATE_ROOT_ELEMENTS_ID = 'INVALIDATE_ROOT_ELEMENTS_ID'\r\n\r\nexport const REQUEST_ELEMENTS = 'REQUEST_ELEMENTS'\r\nexport const RECEIVE_ELEMENTS = 'RECEIVE_ELEMENTS'\r\nexport const INVALIDATE_ELEMENTS = 'INVALIDATE_ELEMENTS'\r\n\r\nexport const NET_ITEM_TOGGLE_EXPAND_COLLAPSE = 'NET_ITEM_TOGGLE_EXPAND_COLLAPSE'\r\nexport const NET_ITEMS_EXPAND = 'NET_ITEMS_EXPAND'\r\nexport const UPDATE_NET_ITEMS = 'UPDATE_NET_ITEMS'\r\n\r\n\r\nexport const SET_FILTER = 'SET_FILTER'\r\nexport const SET_CURSOR = 'SET_CURSOR'\r\nexport const SHOW_RESULT_ITEM = 'SHOW_RESULT_ITEM'\r\nexport const BACKUP_NET_ITEMS = 'BACKUP_NET_ITEMS'\r\n// export const REFRESH_STATE_AND_BACKUP = 'REFRESH_STATE_AND_BACKUP'\r\n\r\nexport const SELECT_NET_ITEMS = 'SELECT_NET_ITEMS'\r\nexport const DESELECT_NET_ITEMS = 'DESELECT_NET_ITEMS'\r\nexport const SELECT_HOST_ITEMS = 'SELECT_HOST_ITEMS'\r\nexport const DESELECT_HOST_ITEMS = 'DESELECT_HOST_ITEMS'\r\n\r\n","const DEVELOPED_BASE_URL = 'netcmdb-loc.rs.ru:8082'\r\n// console.log('location ', window.location)\r\n// const DEVELOPED_BASE_URL = 'netcmdb.rs.ru'\r\nconst BASE_URL = (() => {\r\n    const protocol = window.location.protocol\r\n    const hostname = window.location.hostname\r\n    const port = window.location.port\r\n    const developMode = hostname === 'localhost'\r\n    return developMode ? `${protocol}//${DEVELOPED_BASE_URL}` : `${protocol}//${hostname}${port==='' ? '' : ':'}${port}`\r\n})()\r\n\r\nexport const URL_REQUEST_ROOT_ELEMENTS_ID = `${BASE_URL}/networks/rootElements.json`\r\nexport const URL_REQUEST_NET_ELEMENTS_BY_ID = `${BASE_URL}/networks/netElementsByIds.json`\r\nexport const URL_REQUEST_HOST_ELEMENTS_BY_ID = `${BASE_URL}/networks/hostElementsByIds.json`\r\nexport const URL_FILTERED_SEARCH = `${BASE_URL}/networks/filteredSearch.json`\r\nexport const NET_DATA_URL = `${BASE_URL}/api/getNetData.json`\r\nexport const VRF_LIST_URL= `${BASE_URL}/api/getVrfList.json`\r\nexport const NET_SUBMIT_URL = `${BASE_URL}/api/saveNetData.json`\r\nexport const CHECK_ABILITY_DELETE_NETWORK = `${BASE_URL}/api/saveNetData.json`\r\nexport const GET_NET_PARENT = `${BASE_URL}/api/getNetParent.json`","// import {convertToIntArray, isDebug} from '../helperFunctions'\r\n\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS\r\n} from '../constants/actions'\r\nimport {\r\n    URL_REQUEST_NET_ELEMENTS_BY_ID, //should return JSON object like {netData: [array of data for each net ID]}\r\n    URL_REQUEST_HOST_ELEMENTS_BY_ID, //should return JSON object like {hostData: [array of data for each net ID]}\r\n} from '../constants/IpamTable'\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of int ID], hostsIds: [array of int ID}\r\n * @returns {{type: string, payload: {ids: *}}}\r\n */\r\nexport function requestElements({netsIds, hostsIds}) {\r\n    return {type: REQUEST_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function invalidateElements({netsIds, hostsIds}) {\r\n    return {type: INVALIDATE_ELEMENTS, payload: {netsIds, hostsIds}}\r\n}\r\n\r\nexport function receiveElements({networksData, hostsData}) {\r\n    return {type: RECEIVE_ELEMENTS, payload: {networksData, hostsData}}\r\n}\r\n\r\nexport function netItemToggleExpandCollapse(netItemId) {\r\n    return {type: NET_ITEM_TOGGLE_EXPAND_COLLAPSE, payload: {id: netItemId}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function selectNetItems(netsIds) {\r\n    return {type: SELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\nexport function deselectNetItems(netsIds) {\r\n    return {type: DESELECT_NET_ITEMS, payload: {netsIds}}\r\n}\r\n\r\nexport function updateNetItems(itemsState) {\r\n    return {type: UPDATE_NET_ITEMS, payload: {itemsState}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} hostsIds\r\n * @return {{type: string, payload: {hostsIds: number[]}}}\r\n */\r\nexport function selectHostItems(hostsIds) {\r\n    return {type: SELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\nexport function deselectHostItems(hostsIds) {\r\n    return {type: DESELECT_HOST_ITEMS, payload: {hostsIds}}\r\n}\r\n\r\n/**\r\n *\r\n * @param {number[]} netsIds\r\n * @return {{type: string, payload: {netsIds: number[]}}}\r\n */\r\nexport function netItemsExpand(netsIds) {\r\n    return {type: NET_ITEMS_EXPAND, payload: {netsIds}}\r\n}\r\n\r\n\r\n\r\n/**\r\n * check each element according elementsId in a given part of store and return array of ids that should be update\r\n * @param store object\r\n * @param elementsIds array\r\n */\r\nfunction getInvalidatedData(store, elementsIds) {\r\n    if (!elementsIds || elementsIds.length === 0) return []\r\n    return elementsIds.filter(id => {\r\n        return !store[id] || store[id].didInvalidate\r\n    })\r\n}\r\n\r\n/**\r\n *\r\n * @param ids object like {netsIds: [array of ids], hostsIds: [array of ids]}\r\n * @returns function\r\n */\r\nexport function fetchElementsIfNeeded({netsIds, hostsIds}) {\r\n    return (dispatch, getState) => {\r\n        const filteredNetsIds = getInvalidatedData(getState().netData.networks ,netsIds)\r\n        const filteredHostsIds = getInvalidatedData(getState().netData.hosts ,hostsIds)\r\n        if (filteredNetsIds.length > 0 || filteredHostsIds.length > 0) {\r\n            dispatch(fetchNetData({netsIds: filteredNetsIds, hostsIds: filteredHostsIds}))\r\n        }\r\n    }\r\n}\r\n\r\nfunction fetchNetData({netsIds, hostsIds}) {\r\n    return async (dispatch) => {\r\n        dispatch(requestElements({netsIds, hostsIds}))\r\n        const requestsArray = []\r\n        if (netsIds.length > 0) {\r\n            const netsFormData = new FormData()\r\n            netsFormData.append(\"netsIds\", netsIds)\r\n            const netsDataRequest = new Request(URL_REQUEST_NET_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: netsFormData,\r\n            })\r\n            requestsArray.push(netsDataRequest)\r\n        }\r\n        if (hostsIds.length > 0) {\r\n            const hostsFormData = new FormData()\r\n            hostsFormData.append(\"hostsIds\", hostsIds)\r\n            const hostsDataRequest = new Request(URL_REQUEST_HOST_ELEMENTS_BY_ID, {\r\n                mode: 'cors',\r\n                method: \"POST\",\r\n                body: hostsFormData,\r\n            })\r\n            requestsArray.push(hostsDataRequest)\r\n        }\r\n        if (requestsArray.length === 0) return\r\n\r\n        try {\r\n            const pArray = requestsArray.map(async request => {\r\n                const response = await fetch(request)\r\n                return response.json()\r\n            })\r\n            const fetchResult = await Promise.all(pArray)\r\n            const result = fetchResult.reduce((acc, result) => {return Object.assign(acc, result)}, {})\r\n            dispatch(receiveElements(result))\r\n        } catch (error) {\r\n            console.log('---FETCH ELEMENTS ERROR!: ', error.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded} from './netItems'\r\nimport axios from 'axios'\r\nimport {URL_REQUEST_ROOT_ELEMENTS_ID} from '../constants/IpamTable'\r\n\r\nexport function requestRootElementsId() {\r\n    return {type: REQUEST_ROOT_ELEMENTS_ID}\r\n}\r\n\r\nexport function receiveRootElementsId(data) {\r\n    const {netsIds, hostsIds} = data\r\n    return {type: RECEIVE_ROOT_ELEMENTS_ID, payload: {netsIds, hostsIds}}\r\n}\r\nexport function invalidateRootElementsId() {\r\n    return {type: INVALIDATE_ROOT_ELEMENTS_ID}\r\n}\r\nfunction fetchRootElementsId() {\r\n    return async (dispatch) => {\r\n        dispatch(requestRootElementsId())\r\n        const res = await axios.get(URL_REQUEST_ROOT_ELEMENTS_ID)\r\n        const {rootElementsIds} = res.data\r\n        dispatch(receiveRootElementsId(rootElementsIds))\r\n    }\r\n}\r\nfunction shouldFetchRootElementsId(state) {\r\n    const {rootElements} = state\r\n    return !rootElements || rootElements.didInvalidate\r\n}\r\n\r\nexport function fetchRootElementsIdIfNeeded() {\r\n    return async (dispatch, getState) => {\r\n        if (shouldFetchRootElementsId(getState())) {\r\n            await dispatch(fetchRootElementsId())\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    }\r\n}\r\nexport function forceUpdateRootElements() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        await dispatch(fetchRootElementsId())\r\n        const {rootElementsIds: {netsIds, hostsIds}} = getState()\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n}\r\nexport function forceUpdateRootElementsIds() {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(invalidateRootElementsId())\r\n        dispatch(fetchRootElementsId())\r\n    }\r\n}","import check from 'check-types'\r\nimport {\r\n    SET_FILTER,\r\n    SET_CURSOR,\r\n    BACKUP_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {fetchElementsIfNeeded, netItemsExpand, selectNetItems, deselectNetItems, selectHostItems, deselectHostItems, updateNetItems} from '../actions/netItems'\r\n\r\nexport const setFilter = ({searchResult}) => ({type: SET_FILTER, payload: {searchResult}})\r\nexport const setCursor = (position) => ({type: SET_CURSOR, payload: {position}})\r\nexport const backupNetItems = (itemsState) => ({type: BACKUP_NET_ITEMS, payload: {itemsState}})\r\n// export const refreshStateAndBackup = (backupList, restoreList) => ({type: REFRESH_STATE_AND_BACKUP, payload: {backupList, restoreList}})\r\n\r\nconst netItemsDataSlice = (itemsIds, store) => {\r\n    const {netData, filter: {netItemsBackup}} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        } else {\r\n            const {isSelected, isExpanded} = netData.networks[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n\r\n    })\r\n    return result\r\n}\r\nconst netItemsFilterStoreSlice = (itemsIds, store) => {\r\n    const {filter} = store\r\n    const result = {}\r\n    itemsIds.forEach((itemId) => {\r\n        if (filter.netItemsBackup[itemId]) {\r\n            const {isSelected, isExpanded} = filter.netItemsBackup[itemId]\r\n            result[itemId] = {isSelected, isExpanded}\r\n        }\r\n    })\r\n    return result\r\n}\r\n// const hostItemsDataSlice = (itemsIds, store) => {\r\n//     const {netData} = store\r\n//     const result = {}\r\n//     itemsIds.forEach((itemId) => {\r\n//         const {id, isSelected, isExpanded} = netData.hosts[itemId]\r\n//         result[id] = {isSelected, isExpanded}\r\n//     })\r\n//     return result\r\n// }\r\n\r\nexport const showFilteredItem = ((prevItemList, prevIdx) => (idx) => {\r\n    // if (prevIdx === idx) return () => {}\r\n\r\n    return (dispatch, getState) => {\r\n        const {filter} = getState()\r\n        const {itemList, netIdBackupList} = filter\r\n        if (!itemList || (itemList.length && itemList.length === 0)) return\r\n        const currentItem = itemList[idx]\r\n        const prewItem = prevIdx !==undefined ? itemList[prevIdx] : {}\r\n\r\n        if (check.not.object(currentItem)) return\r\n\r\n        const {id, rec_type, ip_path} = currentItem\r\n        const path = check.string(ip_path) ? ip_path.split(',').map((item) => parseInt(item)) : []\r\n        const netPathIds = [...path]\r\n        const hostsIds = []\r\n        if (rec_type === 'network') {\r\n            netPathIds.push(id)\r\n        } else if (rec_type === 'host') {\r\n            hostsIds.push(id)\r\n        }\r\n        dispatch(fetchElementsIfNeeded({netsIds: netPathIds, hostsIds}))\r\n        //backup states\r\n        const restoreNetIdList = netIdBackupList.filter(netId => !netPathIds.includes(netId))\r\n        const restBackupNetIdList = netIdBackupList.filter(netId => !restoreNetIdList.includes(netId))\r\n        const backupNetIdList = netPathIds.filter(netId => !restBackupNetIdList.includes(netId)).concat(restBackupNetIdList)\r\n\r\n        const netItemsForRestoring = netItemsFilterStoreSlice(restoreNetIdList, getState())\r\n        const netItemsForBackuping = netItemsDataSlice(backupNetIdList, getState())\r\n        if (check.not.emptyObject(netItemsForRestoring)) {\r\n            dispatch(updateNetItems(netItemsForRestoring))\r\n        }\r\n        if (check.not.emptyObject(netItemsForBackuping)) {\r\n            dispatch(backupNetItems(netItemsForBackuping))\r\n        }\r\n        dispatch(netItemsExpand(path))\r\n        if (prewItem && prewItem.id !== undefined) {\r\n            if (prewItem.rec_type === 'network') {\r\n                dispatch(deselectNetItems([prewItem.id]))\r\n            } else if (prewItem.rec_type === 'host') {\r\n                dispatch(deselectHostItems([prewItem.id]))\r\n            }\r\n        }\r\n        if (rec_type === 'network') {\r\n            dispatch(selectNetItems([id]))\r\n        } else if (rec_type === 'host') {\r\n            dispatch(selectHostItems([id]))\r\n        }\r\n\r\n        prevIdx = idx\r\n    }\r\n})()\r\n\r\nexport function restoreSavedStates () {\r\n    return (dispatch, getState) => {\r\n        const {filter} = getState()\r\n        const {netItemsBackup} = filter\r\n        // const {selectedNets, selectedHosts} = netData\r\n        // if (selectedNets.length > 0) dispatch(deselectNetItems(selectedNets))\r\n        // if (selectedHosts.length > 0) dispatch(deselectHostItems(selectedHosts))\r\n        if (check.nonEmptyObject(netItemsBackup)) {\r\n            // console.log('restoreSavedStates')\r\n            dispatch(updateNetItems(netItemsBackup))\r\n            dispatch(backupNetItems({}))\r\n        }\r\n    }\r\n}\r\n","import Color from 'color'\r\n\r\nconst color = (color) => {\r\n    return Color(color).rgb().toString()\r\n}\r\nconst darkenColor = (color, ratio) => {\r\n    return Color(color).darken(ratio).rgb().toString()\r\n}\r\nconst lightenColor = (color, ratio) => {\r\n    return Color(color).lighten(ratio).rgb().toString()\r\n}\r\n\r\nexport {color, darkenColor, lightenColor}","import React, {PureComponent} from 'react'\r\nconst TableContext = React.createContext()\r\n\r\nexport const tableConnect = (Component)  => {\r\n    return class WithTableContext extends PureComponent {\r\n        render() {\r\n            return (<TableContext.Consumer>\r\n                {tableContext => <Component {...this.props} tableContext={tableContext} />}\r\n            </TableContext.Consumer>)\r\n        }\r\n    }\r\n}\r\n// export const tableConnect = (Component)  => {\r\n//     return function connectedComponent(props) {\r\n//         return (<TableContext.Consumer>\r\n//             {tableContext => <Component {...props} tableContext={tableContext} />}\r\n//         </TableContext.Consumer>)\r\n//     }\r\n// }\r\n\r\nexport const TableProvider =  TableContext.Provider\r\n\r\n","export const DEFAULT_TABLE_STYLE = {\r\n    columnPadding: '5px',\r\n\r\n    tableWidth: '100%',\r\n    tableMinWidth: '400px',\r\n    tableHeight: '100%',\r\n    tableMinHeight: '300px',\r\n\r\n    bordered: true,\r\n    border: '1px solid darkgray',\r\n\r\n    padding: '5px 10px',\r\n\r\n    columnMinWidth: '100px',\r\n    columnMaxWidth: 300,\r\n    scrollWidthPx: 17,\r\n\r\n    backgroundColor: {\r\n        table: '#d9d9d9',\r\n        header: '#d9d9d9',\r\n        body: '#d9d9d9',\r\n        tableFooter: '#d9d9d9',\r\n        footer: '#d9d9d9',\r\n    },\r\n    tablePadding: '10px',\r\n\r\n    pagination: {\r\n        visible: true,\r\n        width: 200\r\n    }\r\n}\r\n\r\nexport const DEFAULT_VALUES = {\r\n    fetchData: {\r\n        method: async () => Promise.resolve([]),\r\n        bodyDataKey: 'body',\r\n        footerDataKey: 'footer'\r\n    }\r\n}\r\n\r\n\r\nexport const DEFAULT_CSS_CLASS_NAMES = {\r\n    // header: 'thead',\r\n    // body: 'tbody',\r\n    // tableFooter: 'tfoot',\r\n    // footer: 'footer',\r\n    // row: 'row',\r\n    column: 'col_',\r\n    columnSz: 'colSz_',\r\n    columnDc: 'colDc_'\r\n}\r\n\r\nexport const CLASS_NAMES = {\r\n    table: 'Table',\r\n    header: 'Header',\r\n    body: 'Body',\r\n    tableFooter: 'TableFooter',\r\n    footer: 'Footer',\r\n    row: 'Row',\r\n    column: 'Column'\r\n}\r\n\r\nexport const CHROME_CONTAINER_PADDING = '17px'\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport {DEFAULT_TABLE_STYLE} from \"../tableConstants\";\r\n\r\nclass Column extends Component {\r\n\r\n    innerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    saveColumnParams() {\r\n        const {index, minWidth, maxWidth, fixed, accessor, filterable, sortable,  tableContext: {columnsParams, dimensions: {columnsSizes}}} = this.props\r\n        columnsSizes[index] = {\r\n            minWidth: parseInt(minWidth),\r\n            width: parseInt(minWidth),\r\n            maxWidth: parseInt(maxWidth),\r\n            fixed,\r\n        }\r\n        columnsParams[index] = {\r\n            accessor,\r\n            filterable,\r\n            sortable\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, cssClasses, children, isHeader, writeParams, tableContext: {joinCss}} = this.props\r\n        const innerStyles = this.innerStyles()\r\n            if (isHeader) {\r\n                if (writeParams) this.saveColumnParams()\r\n                return <th className={joinCss(innerStyles, cssClasses).join(\" \")}>{title ? title : children}</th>\r\n            } else {\r\n                return <td className={joinCss(innerStyles, cssClasses).join(\" \")}>{children}</td>\r\n            }\r\n    }\r\n}\r\n\r\nColumn.propTypes = {\r\n    //from Row\r\n    isHeader: PropTypes.bool, //injected by Row\r\n    //from Header\r\n    writeParams: PropTypes.bool, // for internal use only! if set column have to write its params into tableContext.columnsParams (params like width ...)\r\n    //\r\n    title: PropTypes.string, //if not set will be used children\r\n    accessor: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.string),\r\n        PropTypes.string\r\n    ]),\r\n    minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), //min column width in px (if number, convert to px)\r\n    padding: PropTypes.string,\r\n    fixed: PropTypes.bool, // fix size of column\r\n    sortable: PropTypes.bool,\r\n    filterable: PropTypes.bool,\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    order: PropTypes.number, //can be used for columns reorder\r\n    index: PropTypes.number, //index number of column in config array\r\n}\r\nColumn.defaultProps = {\r\n    minWidth: DEFAULT_TABLE_STYLE.columnMinWidth,\r\n    maxWidth: DEFAULT_TABLE_STYLE.columnMaxWidth,\r\n    padding: DEFAULT_TABLE_STYLE.columnPadding,\r\n    fixed: false,\r\n    changeWidth: true,\r\n    sortable: false,\r\n    filterable: false,\r\n    order: 0,\r\n}\r\n\r\nexport default tableConnect(Column)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {tableConnect} from '../TableContext'\r\nimport Column from '../Column'\r\nimport {ContextMenuTrigger} from \"react-contextmenu\"\r\n\r\nclass Row extends Component {\r\n    innerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        const {isHeader, isFooter, isSelected} = this.props\r\n        let result = []\r\n        if (!isHeader && !isFooter) {\r\n            result.push(css.tableBodyRowDc)\r\n        } else if (isHeader) {\r\n            result.push(css.tableHeaderRowDc)\r\n        } else if (isFooter) {\r\n            result.push(css.tableFooterRowDc)\r\n        }\r\n        if (isSelected) result.push(css.selectedRow)\r\n        return result\r\n\r\n    }\r\n    // rowId = null\r\n\r\n    render() {\r\n        const {isHeader, isFooter, rowType, rowId = null, id, tableContext: {filterComponentsByType, joinCss, jssSheet: {classes: css}, createRowRef}} = this.props\r\n        // const {isHeader, isFooter, rowId} = this.props\r\n        const injectedProps = isHeader ? {isHeader: true, } : (isFooter ? {isFooter: true, } : {})\r\n        const contextMenuId = (rowType) => {\r\n            if (rowType === 'network') return 'netRowMenu'\r\n            if (rowType === 'host') return 'hostRowMenu'\r\n            return ''\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger disable={isHeader || isFooter} holdToDisplay={-1} id={contextMenuId(rowType)} renderTag=\"tr\" attributes={{\r\n                className: joinCss(this.innerStyles(), this.props.cssClasses).join(\" \"), \"data-row-type\": rowType, \"data-id\": rowId, ref: rowId ? createRowRef(rowId) : null\r\n            }} collect={()=>({rowType, id})}>\r\n                {filterComponentsByType(this.props.children, Column, injectedProps)}\r\n                {isHeader || isFooter ? <td className={css.scrollSz} /> : <td className={css.scrollBodySz} />}\r\n            </ContextMenuTrigger>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.rowId = this.props.rowId\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log('unmount ', this.rowId)\r\n        //TODO implement removing ref of row in DidUnmount\r\n    }\r\n}\r\n\r\nRow.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    rowId: PropTypes.any, //if exists, is used by createRowRef for creating ref\r\n    rowType: PropTypes.oneOf(['network', 'host']),\r\n    id: PropTypes.number, //item's id (DB id)\r\n    isSelected: PropTypes.bool,\r\n}\r\nRow.defaultProps = {}\r\n\r\nexport default tableConnect(Row)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport {ContextMenu, ContextMenuTrigger, MenuItem} from 'react-contextmenu'\r\n\r\n\r\n\r\nclass Header extends PureComponent {\r\n\r\n    tableInnerStyles = () => {\r\n        const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n    headerInnerStyles = () => {\r\n        // const {jssSheet: {classes: css}} = this.props.tableContext\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * wrap columns in Row if need\r\n     * join inner css classes with users classes\r\n     *\r\n     * @returns Array array of rows that can be rendered\r\n     */\r\n    buildHeaderRows() {\r\n        const {children, tableContext: {filterComponentsByType, columnsCss, jssSheet, joinCss}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Header lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n\r\n        const rows = filterComponentsByType(children, Row, {isHeader: true})\r\n        if (rows.length > 0) {\r\n        //    add appropriated css classes from columnsParams to each column in last row\r\n            let lastRow = rows[rows.length - 1]\r\n            let columns = filterComponentsByType(lastRow.props.children, Column)\r\n            columns = columns.map(column => {\r\n                const {index} = column.props\r\n                //get css classes for this column from tableContext.columnsParams\r\n                const columnClasses = columnsCss[index]\r\n                const innerCss = [\r\n                    css[columnClasses.columnClass],\r\n                    css[columnClasses.columnSizeClass],\r\n                    css[columnClasses.columnDecoClass],\r\n                ]\r\n                //join with cssClasses of column\r\n                const cssClasses = joinCss(innerCss, column.props.cssClasses)\r\n                return React.cloneElement(column, {cssClasses: cssClasses.join(\" \"), writeParams: true})\r\n            })\r\n            // build new last row and replace it in rows array\r\n            rows[rows.length - 1] = React.cloneElement(\r\n                lastRow,\r\n                {},\r\n                [...columns]\r\n            )\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const {cssClasses, tableContext: {joinCss}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles().join(\" \")}>\r\n                <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n                {this.buildHeaderRows()}\r\n                </thead>\r\n            </table>\r\n        )\r\n        //return (\r\n        //    <ContextMenuTrigger id={\"headerTableMenu\"} renderTag=\"table\" attributes={{className: joinCss(this.headerInnerStyles(), cssClasses)}} collect={()=>({'baz': 'test'})}>\r\n        //        <thead className={joinCss(this.headerInnerStyles(), cssClasses)}>\r\n        //        {this.buildHeaderRows()}\r\n        //        </thead>\r\n        //    </ContextMenuTrigger>\r\n        //)\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    style: PropTypes.object,\r\n}\r\nHeader.defaultProps = {}\r\n\r\nexport default tableConnect(Header)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport check from 'check-types'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\n\r\n// import scrollToComponent from 'react-scroll-to-component'\r\n\r\n\r\nclass Body extends PureComponent {\r\n\r\n\r\n    tbodyInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableBody, css.tableBodyDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableBodySz]\r\n    }\r\n\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n    buildBodyHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header!\")\r\n            return null\r\n        }\r\n        return (<tr>\r\n            {columnsCss.map((column, index) => {\r\n                const cssClass = css[column.columnSizeClass]\r\n                return <th className={cssClass} key={index}>{index}</th>\r\n            })}\r\n        </tr>)\r\n    }\r\n    //\r\n    // scrollIntoView = (node, offset = 0) => {\r\n    //     // console.log('offset', node.scrollIntoView(true))\r\n    //     console.log('offset', this.tbodyRef.current)\r\n    // }\r\n    //\r\n    // scrollToRow = (rowId) => {\r\n    //     const {tableRefs: {rows, bodyContainer}} = this.props.tableContext\r\n    //     const id = rows[rowId]\r\n    //\r\n    //     if (id) {\r\n    //         console.log('--row', ReactDOM.findDOMNode(id.current))\r\n    //         console.log(rowId, ': ', id)\r\n    //         window.rowref = id\r\n    //         window.bodyContainer = bodyContainer\r\n    //         const rowNode = ReactDOM.findDOMNode(id.current)\r\n    //         if (rowNode) {\r\n    //             // this.scrollIntoView(rowNode)\r\n    //             scrollToComponent(id.current)\r\n    //         }\r\n    //     }\r\n    //\r\n    //     console.log('---scroll to row: ', this.props.scrollPosition)\r\n    // }\r\n\r\n    render() {\r\n        window.bodyref = this.tbodyRef\r\n\r\n        const {data, tableContext, tableContext: {jssSheet, joinCss, formBodyData, columnsParams}} = this.props\r\n        const {classes: css} = jssSheet\r\n\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={css.hideHeader}>\r\n                {this.buildBodyHeader()}\r\n                </thead>\r\n                <tbody className={joinCss(this.tbodyInnerStyles(tableContext), this.props.cssClasses).join(\" \")}>\r\n                {data ? formBodyData(data, columnsParams) : this.props.children}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nBody.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n    data: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.object\r\n    ]), //data from server\r\n}\r\nBody.defaultProps = {}\r\n\r\nexport default tableConnect(Body)","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport check from \"check-types\";\r\n\r\nclass TableFooter extends PureComponent {\r\n    tfootInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.tableFooter, css.tableFooterDc]\r\n    }\r\n    tableInnerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.table, css.tableHeaderSz]\r\n    }\r\n\r\n    /**\r\n     * wrap children into Row tag if need\r\n     * @param children\r\n     * @param {function} filterComponentsByType\r\n     * @returns {*}\r\n     */\r\n    childrenWrapper = (children, filterComponentsByType ) => {\r\n        if (React.Children.count(children) === 0) {\r\n            return <Row/>\r\n        }\r\n        const rows = filterComponentsByType(children, Row, {isFooter: true})\r\n        if (rows.length > 0) {\r\n            return rows\r\n        }\r\n        if (rows.length === 0) {\r\n            return (\r\n                <Row isFooter={true} index={0}>{children}</Row>\r\n            )\r\n        } else {\r\n            return <Row/>\r\n        }\r\n    }\r\n    parseData = (data) => {\r\n        const {tableContext: {columnsParams, jssSheet: {classes: css}}} = this.props\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row isFooter index={rowIndex} key={rowIndex} cssClasses={this.props.cssClasses}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    buildTableFooterHeader = () => {\r\n        const {columnsCss, jssSheet: {classes: css}, joinCss} = this.props.tableContext\r\n        if (columnsCss.length === 0) {\r\n            console.log(\"Body lvl: columns css array is empty! Can't build header in tableFooter!\")\r\n            return null\r\n        }\r\n        return (<Row isFooter>\r\n            {columnsCss.map((column, index) => {\r\n                return <Column cssClasses={css[column.columnSizeClass]} key={index}>{index}</Column>\r\n            })}\r\n        </Row>)\r\n    }\r\n\r\n    render() {\r\n        const {data, tableContext, tableContext: {joinCss, jssSheet: {classes}}} = this.props\r\n        return (\r\n            <table className={this.tableInnerStyles(tableContext).join(\" \")}>\r\n                <thead className={classes.hideHeader}>\r\n                {this.buildTableFooterHeader()}\r\n                </thead>\r\n                <tfoot className={this.tfootInnerStyles(tableContext).join(\" \")}>\r\n                {data ? this.parseData(data) : this.props.children}\r\n                </tfoot>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n    cssClasses: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.string\r\n    ]), //custom css classes\r\n}\r\nTableFooter.defaultProps = {}\r\n\r\nexport default tableConnect(TableFooter)\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {tableConnect} from '../TableContext'\r\n\r\nclass Footer extends PureComponent {\r\n    innerStyles = (tableContext) => {\r\n        const {jssSheet: {classes: css}} = tableContext\r\n        return [css.footerContainer, css.footerContainerDc]\r\n    }\r\n\r\n    render() {\r\n        const {tableContext} = this.props\r\n        return (\r\n            <div className={this.innerStyles(tableContext).join(\" \")}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    pagination: PropTypes.bool\r\n};\r\nFooter.defaultProps = {\r\n    pagination: true\r\n};\r\n\r\nexport default tableConnect(Footer);\r\n","const customStyles = {\r\n    option: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: \"2px 5px\",\r\n        })\r\n    },\r\n    container: (base, state) => {\r\n        return ({\r\n            ...base,\r\n        })\r\n    },\r\n    control: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            minHeight: 15,\r\n        })\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            padding: 0\r\n        })\r\n    },\r\n    input: (base, state) => {\r\n        return ({\r\n            ...base,\r\n            margin: 0,\r\n            padding: 0\r\n        })\r\n    },\r\n}\r\nexport default customStyles","export const DEFAULT_VALUE_INDEX = 2\r\nexport const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 310,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50\r\n}\r\nexport const SELECT_OPTIONS = [\r\n    { value: 10, label: 10 },\r\n    { value: 50, label: 50 },\r\n    { value: 100, label: 100 },\r\n    { value: 200, label: 200 },\r\n    { value: 500, label: 500 },\r\n    { value: -1, label: \"All\" }\r\n]\r\n","import {color, darkenColor, lightenColor} from './Utils'\r\n\r\nconst hexCode = {\r\n    blue:   '#007bff',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1 ',\r\n    pink:   '#e83e8c ',\r\n    red:    '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green:  '#28a745',\r\n    teal:   '#20c997',\r\n    cyan:   '#17a2b8',\r\n    white:    '#fff',\r\n    gray:   '#808080',\r\n    black:    '#010101',\r\n}\r\nconst index = {\r\n\r\n    tableBgColor: color(hexCode.white), //is applied to table container\r\n    tableTextColor: lightenColor(hexCode.black, 0.01), //is applied to table container\r\n\r\n    headerBgColor: color(hexCode.blue),\r\n    headerTextColor: darkenColor(hexCode.white, 0.01),\r\n\r\n    bodyBgColor: darkenColor(hexCode.white, 0.1),\r\n    bodyTextColor: lightenColor(hexCode.black, 0.01),\r\n\r\n    tableFooterBgColor: lightenColor(hexCode.green, 1.3),\r\n    tableFooterTextColor: darkenColor(hexCode.gray, 0.3),\r\n\r\n    footerBgColor: lightenColor(hexCode.blue, 0.4),\r\n    footerTextColor: darkenColor(hexCode.gray, 0.8),\r\n\r\n    footerIconColor: hexCode.black,\r\n\r\n    disabledColor: hexCode.gray,\r\n\r\n    border: `1px solid ${lightenColor(hexCode.gray, 0.4)}`,\r\n\r\n    stripedColorFactor: 0.08,\r\n    hoverColorFactor: 0.2,\r\n\r\n    paddingHeaderCell: [5, 10],\r\n    paddingBodyCell: [5, 10],\r\n    paddingTableFooterCell: [5, 10],\r\n\r\n    selectedRowBgColor: lightenColor(hexCode.yellow, 0.7),\r\n    selectedRowTextColor: darkenColor(hexCode.gray, 0.8)\r\n}\r\n\r\nexport default index","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select'\r\nimport customStyles from './selectReactCustomStyle'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport * as PAGINATION from './paginationConstants'\r\nimport theme from '../Theme'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: PAGINATION.STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: PAGINATION.STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: PAGINATION.STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: PAGINATION.STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[theme.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: theme.footerIconColor\r\n    },\r\n}\r\n\r\nclass Pagination extends PureComponent {\r\n\r\n    defaultValueRecordsOnPage = () => {\r\n        const {selectDefaultValueIndex} = this.props\r\n        const index = (selectDefaultValueIndex > 0 && selectDefaultValueIndex <= PAGINATION.SELECT_OPTIONS.length) ? selectDefaultValueIndex : PAGINATION.DEFAULT_VALUE_INDEX\r\n        return PAGINATION.SELECT_OPTIONS[index]\r\n    }\r\n\r\n    state = {\r\n        selectOptions: this.props.selectOptions,\r\n        currentPage: 1,\r\n        pageNumberInput: '1',\r\n        totalPages: 99,\r\n        rowsOnPage: this.defaultValueRecordsOnPage().value,\r\n    }\r\n\r\n    pageNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                Page<input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.pageNumberInput}/><span>of {this.state.totalPages}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {pageNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.totalPages)) ? value : prevState.pageNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                pageNumberInput: this.state.pageNumberInput === \"\" ? \"1\" : this.state.pageNumberInput,\r\n                currentPage: this.state.pageNumberInput === \"\" ? 1 : parseInt(this.state.pageNumberInput)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeSelect = (opt) => {\r\n        this.setState({rowsOnPage: opt.value})\r\n    }\r\n    onClickNextPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === prevState.totalPages ? prevState.currentPage : prevState.currentPage + 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickPrevPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.currentPage === 1 ? prevState.currentPage : prevState.currentPage - 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickFirstPage = () => {this.setState(prevState => {\r\n        const newPage = 1\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n    onClickLastPage = () => {this.setState(prevState => {\r\n        const newPage = prevState.totalPages\r\n        return {currentPage: newPage, pageNumberInput: String(newPage)}\r\n    })}\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const selectProps = {\r\n            styles: customStyles,\r\n            options: this.state.selectOptions,\r\n            defaultValue: this.defaultValueRecordsOnPage(),\r\n            menuPlacement: 'auto'\r\n        }\r\n        const {currentPage, totalPages} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === 1} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={currentPage === 1 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.pageNumberBlock(classes)}\r\n                <div className=\"rowsOnPage\"><Select {...selectProps} onChange={this.onChangeSelect} /></div>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={currentPage === totalPages} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={currentPage === totalPages ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n    }\r\n    componentDidUpdate() {\r\n        this.props.tableContext.shareState({currentPage: this.state.currentPage, rowsOnPage: this.state.rowsOnPage}, \"pagination\")\r\n        this.props.tableContext.updateData()\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    selectWidth: PropTypes.number, //react-select width in px\r\n    selectDefaultValueIndex: PropTypes.number,\r\n    selectOptions: PropTypes.array,\r\n};\r\nPagination.defaultProps = {\r\n    selectWidth: 70,\r\n    selectDefaultValueIndex: PAGINATION.DEFAULT_VALUE_INDEX,\r\n    selectOptions: PAGINATION.SELECT_OPTIONS,\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination2 extends PureComponent {\r\n    state = {\r\n        // currentItemIdx: 1,\r\n        itemNumberInput: '1',\r\n        lastItemIdx: 0,\r\n    }\r\n    currentItemIdx = 0\r\n\r\n    resetState = ((prevItemList) => (currentItemList) => {\r\n        if (prevItemList === currentItemList) return\r\n        //TODO restore state of tree\r\n        if (currentItemList.length && currentItemList.length > 0) {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '1',\r\n                lastItemIdx: currentItemList.length - 1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n\r\n        } else {\r\n            prevItemList = currentItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                lastItemIdx: -1,\r\n            })\r\n            this.currentItemIdx  = 0\r\n        }\r\n    })([])\r\n\r\n    updateCurrentItemInput = ((prevIdx) => () => {\r\n        const {filterCursor} = this.props\r\n        if (filterCursor === undefined) return\r\n        if (filterCursor === prevIdx)  return\r\n        prevIdx = filterCursor\r\n        if (this.currentItemIdx !== filterCursor) this.currentItemIdx = filterCursor\r\n        if (this.state.itemNumberInput !== '' + (filterCursor + 1)) this.setState({itemNumberInput: '' + (filterCursor + 1)})\r\n    })(null)\r\n\r\n    currentNumberBlock = (classes) => {\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {this.state.lastItemIdx + 1}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: ((value === \"\" || parseInt(value) > 0) && (parseInt(value) <= prevState.lastItemIdx + 1)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            const {setFilterCursor} = this.props\r\n            const newState = {itemNumberInput: this.state.itemNumberInput === \"\" ? \"1\" : this.state.itemNumberInput}\r\n            this.currentItemIdx = this.state.itemNumberInput === \"\" ? 0 : parseInt(this.state.itemNumberInput) - 1\r\n            this.setState(newState)\r\n            setFilterCursor(this.currentItemIdx)\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === this.state.lastItemIdx ? this.currentItemIdx : this.currentItemIdx + 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.currentItemIdx === 0 ? this.currentItemIdx : this.currentItemIdx - 1\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = 0\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n    onClickLastPage = () => {\r\n        const {setFilterCursor} = this.props\r\n        this.currentItemIdx = this.state.lastItemIdx\r\n        setFilterCursor(this.currentItemIdx)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.lastItemIdx < 0) return null\r\n        const {classes} = this.props\r\n        const {lastItemIdx} = this.state\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={this.currentItemIdx === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={this.currentItemIdx === lastItemIdx} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={this.currentItemIdx === lastItemIdx ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filterItemList = []} = this.props\r\n        this.resetState(filterItemList)\r\n        this.updateCurrentItemInput()\r\n        if (this.state.lastItemIdx >= 0) this.props.onChange(this.currentItemIdx)\r\n    }\r\n}\r\n\r\nPagination2.propTypes = {\r\n    filterItemList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n    setFilterCursor: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n\r\n    filterResults: PropTypes.shape({\r\n        itemList: PropTypes.array,\r\n        hostStateBackups: PropTypes.object,\r\n        netStateBackups: PropTypes.object,\r\n        cursor: PropTypes.number\r\n    }),\r\n    lastItemIdx: PropTypes.number,\r\n};\r\nPagination2.defaultProps = {\r\n    lastItemIdx: -1,\r\n    onChange: (current) => {console.log('current - ', current)}\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination2));\r\n","const STYLE = {\r\n    border: '1px solid darkgray',\r\n    paginationWidth: 200,\r\n\r\n    selectBlockWidth: 70,\r\n\r\n    pageBlockWidth: 130,\r\n    pageBlockInputWidth: 50,\r\n    disabledColor: '#808080',\r\n    footerIconColor: '#010101'\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: STYLE.paginationWidth,\r\n        '& .rowsOnPage': {\r\n            width: STYLE.selectBlockWidth\r\n        }\r\n    },\r\n    containerDc: {\r\n        padding: 5,\r\n        fontSize: 'smaller',\r\n        backgroundColor: 'inherit',\r\n    },\r\n    pageNumber: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        width: STYLE.pageBlockWidth,\r\n        '& input': {\r\n            width: STYLE.pageBlockInputWidth,\r\n        }\r\n    },\r\n    pageNumberDc: {\r\n        '& input': {\r\n            padding: 2,\r\n            margin: 0,\r\n            border: STYLE.border,\r\n            borderRadius: 3\r\n        }\r\n    },\r\n    disabled: {\r\n        color: [[STYLE.disabledColor], '!important']\r\n    },\r\n    navButton: {\r\n        padding: [1, 3],\r\n        color: STYLE.footerIconColor\r\n    },\r\n}\r\n\r\nexport default styles","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {tableConnect} from '../TableContext'\r\nimport injectSheet from 'react-jss'\r\nimport styles from './styles'\r\n\r\nclass Pagination3 extends PureComponent {\r\n    state = {\r\n        itemNumberInput: '',\r\n        isVisible: false,\r\n        current: 0, // index of current item in filteredItemsList. Start from 0!\r\n        itemsList: {}\r\n    }\r\n\r\n    updateState = ((prevItemList) => (newItemList) => {\r\n        if (prevItemList === newItemList && check.array(newItemList) && newItemList.length > 0) {\r\n            this.props.onChange(this.state.current)\r\n            return\r\n        }\r\n        if (prevItemList === newItemList && !this.state.isVisible) {\r\n            this.props.onHideFilter()\r\n            return\r\n        }\r\n        if (check.array(newItemList) && newItemList.length > 0) {\r\n            prevItemList = newItemList\r\n            const newState = {\r\n                itemNumberInput: '1',\r\n                isVisible: true,\r\n                current: 0,\r\n                itemsList: newItemList\r\n            }\r\n            this.setState(newState)\r\n            this.props.onNewItemsList()\r\n        } else {\r\n            prevItemList = newItemList\r\n            this.setState({\r\n                itemNumberInput: '0',\r\n                isVisible: false,\r\n                current: 0,\r\n                itemsList: newItemList\r\n            })\r\n        }\r\n    })()\r\n\r\n    currentNumberBlock = (classes) => {\r\n        const listLength = this.props.filteredItemsList.length\r\n        return (\r\n            <div className={[classes.pageNumber, classes.pageNumber].join(\" \")}>\r\n                <input type=\"text\" onChange={this.onChangePageNumberBlock} onKeyUp={this.onKeyUpPageNumberBlock} value={this.state.itemNumberInput}/><span>of {listLength}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * only change text in input field of current page number, but doesn't change value of 'current' in state!\r\n     * @param e\r\n     */\r\n    onChangePageNumberBlock = (e) => {\r\n        const {value} = e.target\r\n        const inputListLength = check.array(this.props.filteredItemsList) ?  this.props.filteredItemsList.length : 0\r\n        this.setState((prevState) => {\r\n            return {itemNumberInput: (value === \"\" || (parseInt(value) > 0 && parseInt(value) <= inputListLength)) ? value : prevState.itemNumberInput}\r\n        })\r\n    }\r\n    /**\r\n     * change text in input field and value of 'current' in state\r\n     * @param e\r\n     */\r\n    onKeyUpPageNumberBlock = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.setState((prevState) => {\r\n                const itemNumberInput = prevState.itemNumberInput === \"\" ? \"1\" : prevState.itemNumberInput\r\n                return {itemNumberInput, current: parseInt(itemNumberInput) - 1}\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickNextPage = () => {\r\n        const {current} = this.state\r\n        const listLength = this.props.filteredItemsList.length\r\n        if (current < listLength) {\r\n            const newCurrent = current + 1\r\n            this.setState({\r\n                itemNumberInput: (newCurrent + 1).toString(),\r\n                current: newCurrent\r\n            })\r\n        }\r\n    }\r\n    onClickPrevPage = () => {\r\n        const {current} = this.state\r\n        if (current > 0) {\r\n            const newCurrent = current - 1\r\n            this.setState({\r\n                itemNumberInput: (newCurrent + 1).toString(),\r\n                current: newCurrent\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onClickFirstPage = () => {\r\n        const newCurrent = 0\r\n        this.setState({\r\n            itemNumberInput: (newCurrent + 1).toString(),\r\n            current: newCurrent\r\n        })\r\n    }\r\n    onClickLastPage = () => {\r\n        const newCurrent = this.props.filteredItemsList.length - 1\r\n        this.setState({\r\n            itemNumberInput: (newCurrent + 1).toString(),\r\n            current: newCurrent\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {classes, filteredItemsList} = this.props\r\n        const listLength = check.array(filteredItemsList) ?  filteredItemsList.length : 0\r\n        const {current} = this.state\r\n        if (listLength === 0) return null\r\n        return (\r\n            <div className={[classes.container, classes.containerDc].join(\" \")}>\r\n                <button className={classes.navButton} disabled={current === 0} onClick={this.onClickFirstPage}>\r\n                    <FontAwesomeIcon icon=\"fast-backward\" className={current === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={current === 0} onClick={this.onClickPrevPage}>\r\n                    <FontAwesomeIcon icon=\"backward\" className={current === 0 ? classes.disabled : '' } />\r\n                </button>\r\n                {this.currentNumberBlock(classes)}\r\n                <button className={classes.navButton} disabled={current === listLength - 1} onClick={this.onClickNextPage}>\r\n                    <FontAwesomeIcon icon=\"forward\" className={(current === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n                <button className={classes.navButton} disabled={current === listLength - 1} onClick={this.onClickLastPage}>\r\n                    <FontAwesomeIcon icon=\"fast-forward\" className={(current === listLength - 1) ? classes.disabled : '' } />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n    componentDidUpdate() {\r\n        const {filteredItemsList} = this.props\r\n        this.updateState(filteredItemsList)\r\n    }\r\n}\r\n\r\nPagination3.propTypes = {\r\n    filteredItemsList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            ip: PropTypes.string,\r\n            rec_type: PropTypes.string,\r\n            ip_path: PropTypes.string\r\n        })\r\n    ),\r\n    onChange: PropTypes.func,\r\n    onHideFilter: PropTypes.func,\r\n    onNewItemsList: PropTypes.func\r\n};\r\nPagination3.defaultProps = {\r\n    /**\r\n     * is invoked for non empty filteredItemsList\r\n     * @param current\r\n     */\r\n    onChange: (current) => console.log('ON CHANGE FILTER: current - ', current),\r\n    /**\r\n     * is invoked if filteredItemsList got empty and paginator will be hide\r\n     */\r\n    onHideFilter: () => console.log('ON HIDE FILTER: default function'),\r\n    /**\r\n     * is invoked when pass new filteredItemsList (new search result)\r\n     */\r\n    onNewItemsList: () => console.log('ON NEW ITEMS LIST')\r\n};\r\n\r\nexport default tableConnect(injectSheet(styles)(Pagination3));\r\n","import {create} from 'jss'\r\nimport preset from 'jss-preset-default'\r\n\r\n// const jss = create({plugins: [camelCase(), vendorPrefixer(), defaultUnit(), jssNested()]})\r\nconst jss = create(preset())\r\nexport default jss","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    faFastBackward,\r\n    faBackward,\r\n    faForward,\r\n    faFastForward,\r\n    faSquare,\r\n    faCheck,\r\n);\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\nimport ScrollbarSize from 'react-scrollbar-size'\r\nimport {darkenColor} from './Theme/Utils'\r\n\r\nimport Header from './Header'\r\nimport Body from './Body'\r\nimport TableFooter from './TableFooter'\r\nimport Footer from './Footer'\r\nimport Row from './Row'\r\nimport Column from './Column'\r\nimport Pagination from './Pagination'\r\nimport Pagination2 from './Pagination2'\r\nimport Pagination3 from './Pagination3'\r\nimport './fontAwesome/faLibrary.js'\r\n\r\nimport {TableProvider} from './TableContext'\r\nimport {DEFAULT_VALUES, DEFAULT_TABLE_STYLE, DEFAULT_CSS_CLASS_NAMES} from './tableConstants'\r\nimport theme from './Theme'\r\n\r\nimport jss from './jssInstance'\r\n\r\nclass Table extends PureComponent {\r\n\r\n    state = {\r\n        tableBodyData: [],\r\n        tableFooterData: [],\r\n    }\r\n\r\n    tableRefs = {\r\n        container: React.createRef(),\r\n        bodyContainer: React.createRef(),\r\n        rows: {}\r\n    }\r\n    scroll = {\r\n        width: 17,\r\n        height: 17,\r\n        cellWidth: 17,\r\n        bodyCellWidth: 0,\r\n    }\r\n\r\n    tableStyles = {\r\n        //LVL 0\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            boxSizing: 'border-box',\r\n            '& table, & thead, & tbody, & tfoot, & tr, & th, & td': {boxSizing: 'border-box',}\r\n        },\r\n        // LVL 1\r\n        tableContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            overflowX: 'auto',\r\n            boxSizing: 'border-box',\r\n        },\r\n        footerContainer: {\r\n            display: 'flex',\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n            justifyContent: 'space-between',\r\n            boxSizing: 'border-box',\r\n        },\r\n        // LVL 2\r\n        tableHeaderBodyContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n        },\r\n        tableFooterContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        // LVL 3\r\n        tableHeaderContainer: {\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n        },\r\n        tableBodyContainer: {\r\n            //position: 'relative',\r\n            flexBasis: 1,\r\n            flexGrow: 1,\r\n            flexShrink: 0,\r\n            overflowY: 'scroll'\r\n        },\r\n        // LVL 4\r\n        table: {\r\n            tableLayout: 'fixed'\r\n        },\r\n\r\n        tableHeader: {\r\n\r\n        },\r\n        tableBody: {\r\n        },\r\n        tableFooter: {},\r\n\r\n// DECORATION STYLES\r\n        tableContainerDc: {\r\n            backgroundColor: theme.tableBgColor,\r\n            color: theme.tableTextColor,\r\n        },\r\n        tableBodyContainerDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n        },\r\n        tableHeaderRowDc: {\r\n            backgroundColor: theme.headerBgColor,\r\n            color: theme.headerTextColor,\r\n            '& th': {\r\n                padding: theme.paddingHeaderCell\r\n            },\r\n        },\r\n        tableBodyDc:{\r\n            backgroundColor: theme.bodyBgColor,\r\n            color: theme.bodyTextColor\r\n        },\r\n        tableBodyRowDc: {\r\n            backgroundColor: theme.bodyBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ? darkenColor(theme.bodyBgColor, theme.stripedColorFactor) : theme.bodyBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingBodyCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.bodyBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        tableFooterDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            color: theme.tableFooterTextColor,\r\n        },\r\n        tableFooterRowDc: {\r\n            backgroundColor: theme.tableFooterBgColor,\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: this.props.bodyStriped ?\r\n                    darkenColor(theme.tableFooterBgColor, theme.stripedColorFactor)\r\n                    : theme.tableFooterBgColor\r\n            },\r\n            '& td': {\r\n                padding: theme.paddingTableFooterCell\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: darkenColor(theme.tableFooterBgColor, theme.hoverColorFactor)\r\n            }\r\n        },\r\n        footerContainerDc: {\r\n            padding: '5px 5px',\r\n            backgroundColor: theme.footerBgColor\r\n        },\r\n// SIZE STYLES\r\n        containerSz: {\r\n            height: '100%'\r\n        },\r\n        tableBodyContainerSz: {width: null},\r\n        tableFooterContainerSz: {width: null},\r\n        tableHeaderSz: {width: null},\r\n        tableBodySz: {width: null},\r\n        scrollSz: {width: null},\r\n        scrollBodySz: {},\r\n// SPECIAL STYLES\r\n        hideHeader: {\r\n            fontSize: [[0], '!important'],\r\n            height: [[0], '!important'],\r\n            '& tr': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& td': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            },\r\n            '& th': {\r\n                border: [['none'], '!important'],\r\n                padding: [[0], '!important'],\r\n            }\r\n        },\r\n        selectedRow: {\r\n            backgroundColor: theme.selectedRowBgColor + ' !important',\r\n            color: theme.selectedRowTextColor + ' !important',\r\n        }\r\n    }\r\n    jssSheet = jss.createStyleSheet(this.tableStyles, {link: true})\r\n\r\n    /**\r\n     * join inner and external css classes lists into array\r\n     * @param {(string|string[])} innerCssClasses\r\n     * @param {(string|string[])} extCssClasses\r\n     * @returns {string[]}\r\n     */\r\n    static joinCss(innerCssClasses, extCssClasses) {\r\n        // convert  innerCssClasses to array\r\n        innerCssClasses = check.array(innerCssClasses) ? innerCssClasses : (\r\n            check.nonEmptyString(innerCssClasses) ? [innerCssClasses] : []\r\n        )\r\n        // convert extCssClasses to array\r\n        extCssClasses = check.nonEmptyString(extCssClasses) ? [extCssClasses] : (\r\n            check.array(extCssClasses) ? extCssClasses : []\r\n        )\r\n\r\n        return [...innerCssClasses, ...extCssClasses]\r\n    }\r\n\r\n    /**\r\n     * @param children\r\n     * @param {Object} component that instances should be filtered\r\n     * @param {Object} injectedProps this props will be injected into filtered children\r\n     * @param {boolean} injectIndex if true - prop index will be injected\r\n     * @returns {Array}\r\n     */\r\n    filterComponentsByType(children, component, injectedProps = {}, injectIndex = true) {\r\n        const result = []\r\n        React.Children.forEach(children, (child, index) => {\r\n            if (child.type === component) {\r\n                if (injectIndex) injectedProps.index = index\r\n                result.push(React.cloneElement(child, {...injectedProps, key: index}))\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    updateColumnsSizesInDOM = () => {\r\n        const {dimensions, dimensions: {columnsSizes}, columnsCss} = this.tableContext\r\n        columnsCss.forEach((columnSet, index) => {\r\n            this.jssSheet.getRule(columnSet.columnSizeClass).prop('width', columnsSizes[index].width)\r\n        })\r\n        this.jssSheet.getRule('tableHeaderSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('tableBodySz').prop('width', dimensions.columnsWidth + this.scroll.bodyCellWidth)\r\n        this.jssSheet.getRule('tableBodyContainerSz').prop('width', dimensions.columnsWidth + this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollSz').prop('width', this.scroll.cellWidth)\r\n        this.jssSheet.getRule('scrollBodySz').prop('width', this.scroll.bodyCellWidth)\r\n    }\r\n\r\n    updateDimensions = () => {\r\n\r\n        const {dimensions, dimensions: {columnsSizes}} = this.tableContext\r\n        dimensions.containerWidth = this.tableRefs.container.current.clientWidth\r\n        const sumOfMinWidth = columnsSizes.reduce((sum, column) => {\r\n            return sum + column.minWidth\r\n        }, 0 )\r\n        const scrollSize = this.scroll.width\r\n\r\n        //calculate free space for distribute\r\n        let freeSpace = Math.trunc(dimensions.containerWidth - sumOfMinWidth - scrollSize)\r\n        // if (freeSpace <=0) {\r\n        //     console.log('no free space')\r\n        //     console.log('--finished', Date.now() - startTime, this.tableContext.dimensions)\r\n        // }\r\n\r\n        // let counter = 0\r\n        let numberOfExtendableColumns = 0\r\n        //reset width of columns to minWidth\r\n        columnsSizes.forEach(column => column.width = column.minWidth)\r\n\r\n        while (freeSpace > 0) {\r\n            //if don't have columns that can be extended - break cycle\r\n            numberOfExtendableColumns = columnsSizes.reduce((sum, column) => {\r\n                return column.fixed || column.width >= column.maxWidth ? sum : ++sum\r\n            }, 0)\r\n            if (numberOfExtendableColumns === 0) {\r\n                break\r\n            }\r\n            //if few free space - distribute by 1 per column\r\n            if (freeSpace < numberOfExtendableColumns) {\r\n                for (const column of columnsSizes) {\r\n                    if (column.fixed || column.width >= column.maxWidth) continue\r\n                    column.width++\r\n                    freeSpace--\r\n                    if (freeSpace <= 0) {\r\n                        // console.log('distributed by 1 per column')\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            //if free space enough to distribute between extendable columns\r\n            const spacePerColumn = Math.trunc(freeSpace/numberOfExtendableColumns)\r\n            for (let column of columnsSizes) {\r\n                if (column.fixed || column.width >= column.maxWidth) continue\r\n                let additionWidth = column.maxWidth - column.width >= spacePerColumn ? spacePerColumn : column.maxWidth - column.width\r\n                freeSpace -= additionWidth\r\n                column.width += additionWidth\r\n            }\r\n            // ++counter\r\n        }\r\n        //calculate new scroll cell width, table width\r\n        const columnsWidth = columnsSizes.reduce((sum, column) => {return sum + column.width}, 0)\r\n        this.scroll.cellWidth =\r\n            columnsWidth + this.scroll.width > dimensions.containerWidth ?\r\n                this.scroll.width :\r\n                dimensions.containerWidth - columnsWidth\r\n        this.scroll.bodyCellWidth = this.scroll.cellWidth - this.scroll.width\r\n        dimensions.columnsWidth = columnsWidth\r\n    }\r\n\r\n    updateColumns = () => {\r\n        this.updateDimensions()\r\n        this.updateColumnsSizesInDOM()\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parse result of fetchData function.\r\n     * If it object:\r\n     *  1) find key 'body'. If key exists and type of value is Array, write to state.tableBodyData\r\n     *  2) find key 'footer'. If key exists and type of value is Array, write to state.tableFooterData\r\n     * If it array, consider it as body data and write to state.tableBodyData\r\n     * @param data\r\n     */\r\n    parseFetchedResult(data) {\r\n        const {bodyDataKey, footerDataKey} = this.props\r\n        if (check.object(data)) {\r\n            if (data[bodyDataKey])  this.setState({tableBodyData: data[bodyDataKey]})\r\n            if (data[footerDataKey])  this.setState({tableFooterData: data[footerDataKey]})\r\n        } else if (check.array(data)) {\r\n            this.setState({tableBodyData: data})\r\n        } else {\r\n            throw new Error('Invalid data format')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fetch data using this.props.fetchData function and update Body of Table\r\n     * @returns {Promise<void>}\r\n     */\r\n    updateData = async () => {\r\n        try {\r\n            const data = this.props.data ? this.props.data : await this.props.fetchData(this.tableContext.states.pagination)\r\n            this.parseFetchedResult(data)\r\n        } catch (e) {\r\n            console.log('---!!! Table: fetch data error! ', e)\r\n        }\r\n    }\r\n\r\n    formBodyData = (data, columnsParams) => {\r\n        if (check.not.array(data)) return null\r\n\r\n        return data.map((rowData, rowIndex) => {\r\n            return (\r\n                <Row index={rowIndex} key={rowIndex}>\r\n                    {\r\n                        columnsParams.map(({accessor}, colIndex) => {\r\n                            return (\r\n                                <Column index={colIndex} key={colIndex}>\r\n                                    {rowData[accessor]}\r\n                                </Column>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    createRowRef = (id) => {\r\n        const ref = React.createRef()\r\n        this.tableRefs.rows[id] = ref\r\n        // console.log('***************')\r\n        return ref\r\n    }\r\n\r\n\r\n    tableContext = {\r\n        theme: theme,\r\n        states: {},\r\n        shareState: (state,name) => {this.tableContext.states[name] = state},\r\n        getState: (name) => this.tableContext.states[name],\r\n        updateData: this.updateData,\r\n        formBodyData: this.props.formBodyData ? this.props.formBodyData : this.formBodyData,\r\n        cssStyles: this.tableStyles,\r\n        dimensions: {\r\n            containerWidth: 0,\r\n            columnsSizes: [],\r\n            columnsWidth: 0, // sum of current columns width\r\n        },\r\n        columnsCss: [],\r\n        columnsParams: [],\r\n        jssSheet: this.jssSheet,\r\n        filterComponentsByType: this.filterComponentsByType,\r\n        joinCss: Table.joinCss,\r\n        createRowRef: this.createRowRef,\r\n        tableRefs: this.tableRefs,\r\n        scrollPosition: this.props.scrollPosition\r\n    }\r\n\r\n    setColumnsCss(header) {\r\n        const {columnsCss} = this.tableContext\r\n        const {children: hdChildren} = header.props\r\n        // case if Header have rows as children\r\n        const rows = this.filterComponentsByType(hdChildren, Row)\r\n        let columns = []\r\n        if (rows.length > 0) {\r\n        //    get last Row as source of header format info\r\n            const lastRowChildren = rows[rows.length - 1].props.children\r\n            columns = this.filterComponentsByType(lastRowChildren, Column)\r\n        } else {\r\n        //  if direct children of Header are Column's instances\r\n            columns = this.filterComponentsByType(hdChildren, Column)\r\n        }\r\n\r\n        if (columns.length === 0) {\r\n            console.log(\"Header doesn't have any Column's components as children\" )\r\n            return []\r\n        }\r\n\r\n        const columnCssPrefix = DEFAULT_CSS_CLASS_NAMES.column\r\n        const columnSizeCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnSz\r\n        const columnDecoCssPrefix = DEFAULT_CSS_CLASS_NAMES.columnDc\r\n\r\n        columns.forEach((column, index) => {\r\n            const params = {\r\n                    columnClass: columnCssPrefix + index,\r\n                    columnSizeClass: columnSizeCssPrefix + index,\r\n                    columnDecoClass: columnDecoCssPrefix + index\r\n            }\r\n            this.jssSheet.addRules({\r\n                [params.columnClass] : {},\r\n                [params.columnSizeClass] : {width: null},\r\n                [params.columnDecoClass] : {},\r\n            })\r\n            columnsCss[index] = params\r\n        })\r\n    }\r\n\r\n    scrollbarSizeLoad = (scrollSizes) => {\r\n        this.scroll.width = scrollSizes.scrollbarWidth\r\n        this.scroll.height = scrollSizes.scrollbarHeight\r\n    }\r\n\r\n    scrollToRow(rowId, alignment, offset = 0) {\r\n        const row = this.tableRefs.rows[rowId]\r\n        if (!row) return\r\n        const body = this.tableRefs.bodyContainer\r\n        const bodyXY = body.current.getBoundingClientRect()\r\n        const rowXY = row.current.getBoundingClientRect()\r\n        // body.current.scrollTop = rowXY.y - bodyXY.y - offset\r\n        body.current.scrollBy(0, rowXY.y - bodyXY.y - offset)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} container - box that will be scrolled (ref)\r\n     * @param {Object} element - element that will be positioned relative top or bottom of box\r\n     * @param {('top'|'bottom')} position - where's measured offset from\r\n     * @param {number} [offset] - offset from 'position' in px\r\n     */\r\n    scrollAt(container, element, position, offset = 0) {\r\n        if (!(position && container && container.current && element && element.current)) return\r\n        let yScroll = 0\r\n        const el = element.current.getBoundingClientRect()\r\n        const box = container.current.getBoundingClientRect()\r\n        switch (position.toLowerCase()) {\r\n            case 'top':\r\n                yScroll = el.top - box.top - offset\r\n                break\r\n            case 'bottom':\r\n                yScroll = el.bottom - box.bottom + offset\r\n                break\r\n            default:\r\n\r\n        }\r\n        if (yScroll === 0) return\r\n        container.current.scrollBy(0, yScroll)\r\n    }\r\n\r\n\r\n    render() {\r\n        // const store = window.store.getState()\r\n        const {classes: css} = this.jssSheet\r\n        const {children} = this.props\r\n        this.setColumnsCss(this.filterComponentsByType(children, Header)[0])\r\n        return (\r\n            <TableProvider value={this.tableContext}>\r\n                <ScrollbarSize\r\n                    onLoad={this.scrollbarSizeLoad}\r\n                />\r\n                <div className={[css.container, css.containerSz].join(\" \")} ref={this.tableRefs.container}>\r\n                    <div className={[css.tableContainer, css.tableContainerDc].join(\" \")}>\r\n                        <div className={[css.tableHeaderBodyContainer].join(\" \")}>\r\n                            <div className={[css.tableHeaderContainer]}>\r\n                                {this.filterComponentsByType(children, Header)}\r\n                            </div>\r\n                            <div className={[css.tableBodyContainer, css.tableBodyContainerSz, css.tableBodyContainerDc].join(\" \")} ref={this.tableRefs.bodyContainer}>\r\n                                {this.filterComponentsByType(children, Body, {data: this.state.tableBodyData, scrollPosition: this.props.scrollPosition})}\r\n                            </div>\r\n                        </div>\r\n                        <div className={[css.tableFooterContainer, css.tableFooterContainerSz].join(\" \")}>\r\n                            {this.filterComponentsByType(children, TableFooter, {data: this.state.tableFooterData})}\r\n                        </div>\r\n                    </div>\r\n                        {this.filterComponentsByType(children, Footer)}\r\n                </div>\r\n            </TableProvider>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const bodyContainer = this.tableRefs.bodyContainer\r\n        const targetRow = this.tableRefs.rows[this.props.scrollPosition]\r\n\r\n        this.jssSheet.attach()\r\n        window.addEventListener('resize', this.updateColumns)\r\n\r\n        this.updateColumns()\r\n        await this.updateData()\r\n        // this.scrollToRow(this.props.scrollPosition)\r\n        this.scrollAt(bodyContainer, targetRow, 'bottom', 0)\r\n\r\n        window.tabRefs = this.tableRefs\r\n    }\r\n\r\n    //should be called only when pass data via props and this data change\r\n    async componentDidUpdate(prevProps) {\r\n        const bodyContainer = this.tableRefs.bodyContainer\r\n        const targetRow = this.tableRefs.rows[this.props.scrollPosition]\r\n\r\n        if (prevProps.data !== this.props.data) {\r\n             await this.updateData()\r\n        }\r\n        // this.scrollToRow(this.props.scrollPosition)\r\n        this.scrollAt(bodyContainer, targetRow, 'bottom', 20)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumns)\r\n    }\r\n}\r\n\r\nTable.Caption = (props) => {\r\n    return <caption>{props.children}</caption>\r\n}\r\n\r\n\r\nTable.propTypes = {\r\n    fetchData: PropTypes.func, //function that will be fetch data from remote source. Has to be async and return Promise\r\n    formBodyData: PropTypes.func, //function that will be used to form Body content from fetched data\r\n    bodyDataKey: PropTypes.string, // name of key for body data in object that return fetchData function\r\n    footerDataKey: PropTypes.string, // name of key for footer data in object that return fetchData function\r\n\r\n    width: PropTypes.string, //width of table's container\r\n    height: PropTypes.string, //height of table's container\r\n    miWidth: PropTypes.string, //min width of table container\r\n    minHeight: PropTypes.string, //min height of table container\r\n\r\n    bordered: PropTypes.bool,\r\n    bodyStriped: PropTypes.bool,\r\n\r\n    isStretch: PropTypes.bool, //allow stretch table\r\n\r\n    scrollPosition: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) //ref to row. if value is defined - scroll to this row\r\n};\r\nTable.defaultProps = {\r\n    fetchData: DEFAULT_VALUES.fetchData.method,\r\n    bodyDataKey: DEFAULT_VALUES.fetchData.bodyDataKey,\r\n    footerDataKey: DEFAULT_VALUES.fetchData.footerDataKey,\r\n\r\n    width: DEFAULT_TABLE_STYLE.tableWidth,\r\n    minWidth: DEFAULT_TABLE_STYLE.tableMinWidth,\r\n    height: DEFAULT_TABLE_STYLE.tableHeight,\r\n    minHeight: DEFAULT_TABLE_STYLE.tableMinHeight,\r\n\r\n    bordered: true,\r\n    bodyStriped: true,\r\n\r\n    isStretch: true\r\n};\r\n\r\n\r\nexport {Header, Body, TableFooter, Footer, Row, Column, Pagination, Pagination2, Pagination3}\r\nexport default Table;\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\nimport check from 'check-types'\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\nimport './style.css'\r\n\r\nclass NetRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        let {id, classes, ipAddress, netmask,comment,vrfName, netLocations, netChildren, hostChildren, isFetching, isExpanded, isSelected, toggleIconHandler, rowId} = this.props\r\n        // let {id, classes, ipAddress, netmask,comment, vrfId, vrfName, vrfRd, netLocations, netChildren, hostChildren, isFetching, isExpanded, isSelected, toggleIconHandler, rowId} = this.props\r\n        const rowProps = {id, rowId, isSelected, rowType: 'network'}\r\n        if (isFetching) {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            let locations = []\r\n            netLocations = check.object(netLocations) ? netLocations : {}\r\n            for (let location of Object.values(netLocations)) {\r\n                locations.push(location)\r\n            }\r\n            const icon = isExpanded ?\r\n                <FontAwesomeIcon icon={\"minus\"} className={classes.icon} onClick={toggleIconHandler(id)}/> :\r\n                <FontAwesomeIcon icon={\"plus\"}  className={classes.icon} onClick={toggleIconHandler(id)}/>\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}{icon}{ipAddress}</Column>\r\n                    {/*<Column>{this.lvlIndent()}{icon}{ipAddress} - {rowId}</Column>*/}\r\n                    <Column>{netChildren.length}/{hostChildren.length}</Column>\r\n                    <Column>{netmask}</Column>\r\n                    <Column></Column>\r\n                    <Column>{locations.join(\"; \")}</Column>\r\n                    <Column>{vrfName}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column>{comment}</Column>\r\n                </Row>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nNetRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    isFetching: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    netChildren: PropTypes.array,\r\n    hostChildren: PropTypes.array,\r\n    netLocations: PropTypes.object,\r\n    toggleIconHandler: PropTypes.func,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nNetRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n    netChildren: [],\r\n    hostChildren: [],\r\n};\r\n\r\nexport default injectSheet(style)(NetRecordRow)\r\n\r\n","const LVL_INDENT_WIDTH = 20\r\nconst RIGHT_MARGIN_ICON = 8\r\n\r\nconst style = {\r\n    lvlBlock: {\r\n        display: 'inline-block',\r\n        width: LVL_INDENT_WIDTH\r\n    },\r\n    icon: {\r\n        marginRight: RIGHT_MARGIN_ICON\r\n    },\r\n}\r\nexport {LVL_INDENT_WIDTH}\r\nexport default style\r\n","import React, {PureComponent} from 'react';\r\nimport injectSheet from 'react-jss'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Row, Column} from '../../Table'\r\nimport style, {LVL_INDENT_WIDTH} from './styles'\r\n\r\nclass HostRecordRow extends PureComponent {\r\n\r\n    lvlIndent = () => {\r\n        const {lvl, classes} = this.props\r\n        return (<div className={classes.lvlBlock} style={{width: LVL_INDENT_WIDTH * lvl}} />)\r\n    }\r\n\r\n    render() {\r\n        // const {id, ipAddress, macAddress, comment, isFetching, isExpanded, isSelected, rowId} = this.props\r\n        const {id, ipAddress, isFetching, isSelected, rowId} = this.props\r\n        const rowProps = {id, rowId, isSelected, rowType: 'host'}\r\n        if (isFetching) {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    <Column>{this.lvlIndent()}...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                    <Column>...loading</Column>\r\n                </Row>\r\n            );\r\n        } else {\r\n            return (\r\n                <Row {...rowProps}>\r\n                    {/*<Column>{this.lvlIndent()}{ipAddress} - {id}</Column>*/}\r\n                    <Column>{this.lvlIndent()}{ipAddress}</Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                    <Column></Column>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nHostRecordRow.propTypes = {\r\n    lvl: PropTypes.number,\r\n    id: PropTypes.number,\r\n    isFetching: PropTypes.bool,\r\n    isExpanded: PropTypes.bool,\r\n    isSelected: PropTypes.bool,\r\n    ipAddress: PropTypes.string,\r\n    macAddress: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    rowId: PropTypes.any, //for creation of rowId\r\n    //from injectSheet\r\n    classes: PropTypes.object,\r\n};\r\nHostRecordRow.defaultProps = {\r\n    lvl: 0,\r\n    isExpanded: false,\r\n};\r\n\r\nexport default injectSheet(style)(HostRecordRow)\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport RowsContainer from '../RowsContainer'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChildrenRowsContainer extends PureComponent {\r\n    render() {\r\n        const {parentNetId, netsIds, hostsIds, lvl} = this.props\r\n        return (\r\n           <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={lvl} parentNetId={parentNetId} />\r\n        );\r\n    }\r\n}\r\n\r\nChildrenRowsContainer.propTypes = {\r\n    parentNetId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nexport default ChildrenRowsContainer;\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {fetchElementsIfNeeded, netItemToggleExpandCollapse} from '../../../actions'\r\nimport NetRecordRow from \"../NetRecordRow\";\r\nimport HostRecordRow from \"../HostRecordRow\";\r\nimport ChildrenRowsContainer from \"../ChildrenRowsContainer\";\r\n\r\nclass RowsContainer extends PureComponent {\r\n\r\n    childrenNetsIds = []\r\n    childrenHostsIds = []\r\n\r\n    render() {\r\n        const {netsData, hostsData, toggleIconHandler, lvl} = this.props\r\n        const netRows = netsData.map(data => {\r\n            if (data.isExpanded) {\r\n                this.childrenNetsIds = this.childrenNetsIds.concat(data.netChildren)\r\n                this.childrenHostsIds = this.childrenHostsIds.concat(data.hostChildren)\r\n                return (\r\n                    <React.Fragment key={'n' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={'net-' + data.id} />\r\n                        <ChildrenRowsContainer netsIds={data.netChildren} hostsIds={data.hostChildren} lvl={lvl + 1}/>\r\n                    </React.Fragment>\r\n\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={'h' + data.id}>\r\n                        <NetRecordRow {...data} lvl={lvl} toggleIconHandler={toggleIconHandler} rowId={'net-' + data.id} />\r\n                    </React.Fragment>\r\n                )\r\n            }})\r\n        const hostRows = hostsData.map(data => {\r\n            return (\r\n                <HostRecordRow {...data} lvl={lvl} key={'h' + data.id} rowId={'host-' + data.id} />\r\n            )})\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {netRows}\r\n                {hostRows}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n    componentDidUpdate() {\r\n        const {updateDataIfNeeded} = this.props\r\n        updateDataIfNeeded({netsIds: this.childrenNetsIds, hostsIds: this.childrenHostsIds})\r\n    }\r\n}\r\n\r\nconst selectorFactory = (dispatch) => {\r\n\r\n    const updateDataIfNeeded = ({netsIds, hostsIds}) => {\r\n        dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n    }\r\n    const toggleIconHandler = (id) => () => {\r\n        dispatch(netItemToggleExpandCollapse(id))\r\n    }\r\n\r\n    return (state, ownProps) => {\r\n        const {netsIds, hostsIds, lvl} = ownProps\r\n        const netsData = []\r\n        const hostsData = []\r\n        for (let id of netsIds) {\r\n            const itemData = state.netData.networks[id]\r\n            if (itemData) netsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n        for (let id of hostsIds) {\r\n            const itemData = state.netData.hosts[id]\r\n            if (itemData) hostsData.push(Object.assign({}, {...itemData}, {id}))\r\n        }\r\n\r\n        return {netsData, hostsData, lvl, updateDataIfNeeded, toggleIconHandler}\r\n    }\r\n}\r\n\r\nRowsContainer.propTypes = {\r\n    netsIds: PropTypes.array,\r\n    hostsIds: PropTypes.array,\r\n    lvl: PropTypes.number,\r\n};\r\n\r\nRowsContainer.defaultProps = {\r\n    netsIds: [],\r\n    hostsIds: []\r\n}\r\n\r\nexport default connectAdvanced(selectorFactory)(RowsContainer)","import {createSelector} from 'reselect'\r\n\r\nconst getRootNetsIds = state => state.rootElementsIds.netsIds\r\nconst getRootHostsIds = state => state.rootElementsIds.hostsIds\r\n\r\nconst getNetworksDataStore = state => state.netData.networks\r\nconst getHostsDataStore = state => state.netData.hosts\r\n\r\nconst getFilterStore = state => state.filter\r\nexport const getFilterItemList = state => state.filter.itemList\r\nexport const getFilterCursor = state => state.filter.cursor\r\n\r\n// const getNetworkItemDataStore = (state, props) => {\r\n//\r\n// }\r\n//\r\n// const makeGetNetworkData = () => {\r\n//     return createSelector(\r\n//         []\r\n//     )\r\n// }\r\n\r\nexport const getRootRowsData = createSelector(\r\n    [getRootNetsIds, getRootHostsIds, getNetworksDataStore, getHostsDataStore],\r\n    (rootNetsIds, rootHostsIds, networksData, hostsData) => {\r\n        const rootNetsData = []\r\n        for (let id of rootNetsIds) {\r\n            const netData = networksData[id]\r\n            if (netData) {\r\n                netData.id = id\r\n                rootNetsData.push(netData)\r\n            }\r\n        }\r\n        const rootHostsData = []\r\n        for (let id of rootHostsIds) {\r\n            const hostData = hostsData[id]\r\n            if (hostData) rootHostsData.push(hostData)\r\n        }\r\n        return {netsData: rootNetsData, hostsData: rootHostsData}\r\n    }\r\n)\r\n\r\nexport const getRootIds = createSelector(\r\n    [getRootNetsIds, getRootHostsIds],\r\n    (netsIds, hostsIds) => {\r\n        return {netsIds: netsIds, hostsIds: hostsIds}\r\n    }\r\n)\r\n\r\nexport const getFilterResults = createSelector(\r\n    [getFilterStore],\r\n    (filter) => {\r\n        return filter\r\n    }\r\n)\r\n\r\n","export const MIN_SEARCH_LENGTH = 3\r\nexport const SEARCH_TIMEOUT = 800","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {MIN_SEARCH_LENGTH, SEARCH_TIMEOUT} from './constants'\r\n\r\n/**\r\n * in this class is used customized bootstrap classes\r\n */\r\nclass SimpleSearch extends PureComponent {\r\n    state = {\r\n        searchBy: this.props.accessorList,\r\n        statement: this.props.defaultStatement,\r\n        value: ''\r\n    }\r\n    timerId = ''\r\n\r\n    isEmpty = ((minSearchLength) => (filterState) => {\r\n        switch (filterState.statement) {\r\n            case '=':\r\n            case '!=':\r\n            case '>':\r\n            case '>=':\r\n            case '<':\r\n            case '<=':\r\n            case 'beginWith':\r\n            case 'endWith':\r\n                return filterState.value.length < minSearchLength\r\n            default:\r\n                return true\r\n        }\r\n    })(MIN_SEARCH_LENGTH)\r\n\r\n    //update state of this filter in filters store of Filter factory\r\n    updateParentState = () => {\r\n        if (this.isEmpty(this.state)) {\r\n            this.props.updateFilterState({})\r\n        } else {\r\n            this.props.updateFilterState(this.state)\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {width, placeholder} = this.props\r\n        const style = {width}\r\n\r\n        return (\r\n            <div>\r\n                <input className='search-bar-form-control' style={style} placeholder={placeholder} value={this.state.value} onChange={this.onChangeHandler} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        this.timerId = setTimeout(this.updateParentState, SEARCH_TIMEOUT)\r\n    }\r\n}\r\n\r\nSimpleSearch.propTypes = {\r\n    accessorList: PropTypes.array.isRequired,\r\n    defaultStatement: PropTypes.string,\r\n    minLengthForSearch: PropTypes.number,\r\n    options: PropTypes.shape({\r\n        width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n    }),\r\n    placeholder: PropTypes.string,\r\n    hideUnusedRows: PropTypes.bool,\r\n    updateFilterState: PropTypes.func,\r\n    statementSet: PropTypes.object.isRequired,\r\n}\r\n\r\nSimpleSearch.defaultProps = {\r\n    defaultStatement: '=',\r\n    minLengthForSearch: MIN_SEARCH_LENGTH,\r\n    options: {\r\n        width: '150px'\r\n    },\r\n    placeholder: 'search....'\r\n}\r\n\r\nexport default SimpleSearch","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport SimpleSearch from \"./SimpleSearch\"\r\nimport check from 'check-types'\r\n\r\nclass FilterFactory {\r\n\r\n    filtersStore = []\r\n    listeners = []\r\n    statementSet = {\r\n        '=': '=',\r\n        '!=': '!=',\r\n        '>': '>',\r\n        '>=': '>=',\r\n        '<': '<',\r\n        '<=': '<=',\r\n        'beginWith': 'begin with',\r\n        'endWith': 'end with',\r\n        'empty': 'empty',\r\n        'notEmpty': 'not empty'\r\n    }\r\n\r\n    subscribe = (callBack) => {\r\n        if (! check.function(callBack)) return\r\n        const listenerId = this.listeners.length\r\n        this.listeners.push(callBack)\r\n        return listenerId\r\n    }\r\n    unsubscribe = (listenerID) => {\r\n        if (! this.listeners[listenerID]) return false\r\n        delete this.listeners[listenerID]\r\n        return true\r\n    }\r\n\r\n    updateFilterState = (id, filtersStore) => (state) => {\r\n        if (check.emptyObject(state)) {\r\n            if (check.emptyObject(filtersStore[id])) return\r\n            filtersStore[id] = {}\r\n        } else {\r\n            const {searchBy, statement, value} = state\r\n            filtersStore[id] = Object.assign({}, filtersStore[id], {searchBy, statement, value})\r\n        }\r\n        //invoke listener's functions\r\n        for (const listener of this.listeners) {\r\n            listener(filtersStore)\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param filterType\r\n     * @param accessorList\r\n     * @param {Object} options\r\n     * @param {String} options.width\r\n     * @param {String} options.defaultStatement\r\n     * @param {Number} options.minLengthForSearch\r\n     * @param {String} options.placeholder\r\n     * @param {Boolean} options.hideUnusedRows\r\n     * @returns {*}\r\n     */\r\n    createFilter = (filterType, accessorList, options) => {\r\n        const filterProps = {accessorList, ...options}\r\n        //check defaultStatement is correct\r\n        if (Object.keys(this.statementSet).indexOf(filterProps.defaultStatement) < 0 ) {\r\n            console.log('--- incorrect default statement for filter: ', filterProps.defaultStatement)\r\n            return\r\n        }\r\n        switch (filterType) {\r\n            case 'simpleSearch':\r\n                const filterId = this.filtersStore.length\r\n                this.filtersStore[filterId] = {}\r\n                return <SimpleSearch\r\n                    {...filterProps}\r\n                    updateFilterState={this.updateFilterState(filterId, this.filtersStore)}\r\n                    statementSet={this.statementSet}\r\n                />\r\n            default:\r\n        }\r\n    }\r\n}\r\n\r\nFilterFactory.propTypes = {}\r\n\r\nexport default FilterFactory","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport css from './style.module.css'\r\nimport {FormGroup, FormControl, ControlLabel, InputGroup} from 'react-bootstrap'\r\n\r\nclass Input2 extends PureComponent {\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {addOnPosition, addOnText} = this.props\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        const formControl = <FormControl\r\n            type=\"text\"\r\n            value={this.props.value}\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.props.onChange}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            className={this.props.customSize ? css.size : undefined}\r\n        />\r\n        if (addOnPosition && check.nonEmptyString(addOnText)) {\r\n            const leftAddOn = this.props.addOnPosition && this.props.addOnPosition === 'left' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            const rightAddOn = this.props.addOnPosition && this.props.addOnPosition === 'right' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        <InputGroup>\r\n                            {leftAddOn}\r\n                            {formControl}\r\n                            {rightAddOn}\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        {formControl}\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n}\r\n\r\nInput2.propTypes = {\r\n    customSize: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    controlId: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    addOnPosition: PropTypes.oneOf(['left', 'right']),\r\n    addOnText: PropTypes.string,\r\n    clearMargin: PropTypes.bool\r\n}\r\nInput2.defaultProps = {\r\n    disabled: false,\r\n    clearMargin: false\r\n}\r\nexport default Input2\r\n\r\n","import React, { PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FormControl, ControlLabel, FormGroup} from 'react-bootstrap'\r\nimport check from 'check-types'\r\nimport axios from \"axios\"\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport isEqual from 'lodash/isEqual'\r\nimport css from \"./style.module.css\"\r\n\r\nclass Select extends PureComponent {\r\n\r\n    state = {\r\n        value: '',\r\n        isLoading: false,\r\n        optionsInvalidate: true,\r\n    }\r\n    optionList = []\r\n\r\n    setDefaultSelected = ((prevValue) => (value) => {\r\n        if (value === undefined || value === null || this.state.optionsInvalidate || this.state.isLoading) return\r\n        if (prevValue === value) return\r\n        prevValue = value\r\n        if (this.optionList.filter((item) => item.value === value).length === 0) return\r\n        if (this.state.value === value) return\r\n        this.setState({value: prevValue})\r\n    })('')\r\n\r\n    handleChange = (e) => {\r\n        let value = parseInt(e.target.value)\r\n        if (!isNaN(value) && value.toString && value.toString() === e.target.value) {\r\n            this.setState({value})\r\n        }  else {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n    defaultSelectedValue = () => {\r\n        return this.optionList.length === 1 ? this.optionList[0].value : ''\r\n    }\r\n\r\n    checkSelected = () => {\r\n        if (this.state.isLoading || this.props.disabled) return\r\n        if (this.optionList.filter((item) => item.value === this.state.value).length === 0) this.setState({value: this.defaultSelectedValue()})\r\n    }\r\n    checkFilter = ((prevFilter) => () => {\r\n        const {filter} = this.props\r\n        if (isEqual(prevFilter, filter)) return\r\n        prevFilter = filter\r\n        return this.setState({optionsInvalidate: true})\r\n    })(this.props.filter)\r\n\r\n\r\n    invokeListeners = ((prevState) => () => {\r\n        if (JSON.stringify(this.state) === JSON.stringify(prevState)) return\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        prevState = cloneDeep(this.state)\r\n        for (const subscriber of onChange) {\r\n            subscriber(prevState)\r\n        }\r\n    })([])\r\n\r\n    async updateIfNeeded() {\r\n\r\n        const {isAsync, disabled} = this.props\r\n        const {isLoading, optionsInvalidate} = this.state\r\n\r\n        if (isLoading || disabled) return\r\n        this.checkFilter()\r\n        if (!optionsInvalidate) return\r\n        if (isAsync) {\r\n            this.setState({isLoading: true})\r\n            this.optionList = await this.updateRemoteOptionList()\r\n        } else {\r\n            this.optionList = this.updateLocalOptionList()\r\n        }\r\n        this.setState({isLoading: false, optionsInvalidate: false})\r\n    }\r\n\r\n    async updateRemoteOptionList() {\r\n        const {remoteDataFetch = this.remoteDataFetchDefault} = this.props\r\n        try {\r\n            const data = await remoteDataFetch(this.props.filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error in Select: ', error)\r\n        }\r\n\r\n\r\n    }\r\n    updateLocalOptionList() {\r\n        return this.props.optionList\r\n    }\r\n\r\n    async remoteDataFetchDefault() {\r\n        const {remoteSourceUrl, filter=[]} = this.props\r\n        try {\r\n            const {data} = await axios.post(remoteSourceUrl, filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error: ', error)\r\n        }\r\n    }\r\n\r\n    buildOptionList = () => {\r\n        const {isLoading} = this.state\r\n        if (isLoading) return <option value={null}>Loading...</option>\r\n\r\n        const emptyOption = <option value={this.props.emptyValue} key='empty'>{this.props.emptyLabel}</option>\r\n        const optionsSet = this.optionList.map(\r\n            ({value, label}, key) => {\r\n                return <option value={value} key={key}>{label}</option>\r\n            })\r\n        if (this.optionList.length === 1) {\r\n            return optionsSet\r\n        } else {\r\n            return this.props.emptyOption ? [emptyOption, ...optionsSet] : optionsSet\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {value} = this.state\r\n        const controlLabel = check.string(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        return (\r\n            <Fragment>\r\n                <FormGroup controlId={this.props.controlId} style={this.props.style} bsClass={clearMargin}>\r\n                    {controlLabel}\r\n                    <FormControl\r\n                        onChange={this.handleChange}\r\n                        componentClass=\"select\"\r\n                        placeholder=\"select item\"\r\n                        value={value}\r\n                        disabled={this.props.disabled}\r\n                        className={this.props.smallSize ? css.size : undefined}\r\n                    >\r\n                        {this.buildOptionList()}\r\n                    </FormControl>\r\n                </FormGroup>\r\n            </Fragment>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n    }\r\n    async componentDidUpdate() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * isAsync - if true, will be used  getDataUrl to get options list. optionList parameter will be ignored\r\n * onChange - function or array of functions, that will be invoke on state change\r\n */\r\nSelect.propTypes = {\r\n    controlId: PropTypes.string,\r\n    //local option list if isAsync = false\r\n    optionList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            value: PropTypes.oneOfType([\r\n                PropTypes.number,\r\n                PropTypes.string\r\n            ]),\r\n            label: PropTypes.string\r\n        }\r\n    )),\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    emptyOption: PropTypes.bool, //add or not empty option into list\r\n    emptyValue: PropTypes.string,\r\n    emptyLabel: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    isAsync: PropTypes.bool,\r\n    remoteSourceUrl: PropTypes.string,\r\n    remoteDataFetch: PropTypes.func,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    })),\r\n    style: PropTypes.object,\r\n    clearMargin: PropTypes.bool,\r\n    smallSize: PropTypes.bool\r\n}\r\nSelect.defaultProps = {\r\n    emptyOption: true,\r\n    optionList: [],\r\n    isAsync: false,\r\n    onChange: [],\r\n    emptyValue: '',\r\n    emptyLabel: '<Не выбрано>',\r\n    filter: [],\r\n    selected: ''\r\n}\r\n\r\nexport default Select\r\n","import React, {Fragment, Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport custCss from './style.module.css'\r\nimport axios from 'axios'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport {Row, Col, Button, Modal, ModalBody, ModalFooter, ModalHeader, } from 'react-bootstrap'\r\n\r\nimport Input2 from '../Base/Input2'\r\nimport Select from '../Base/Select'\r\nimport {NET_DATA_URL, VRF_LIST_URL, NET_SUBMIT_URL, GET_NET_PARENT} from '../../constants/IpamTable'\r\n\r\nclass NetModalWindow extends Component {\r\n    /**\r\n      * @typedef {{\r\n      *     vrf_id: number,\r\n      *     vrf_name: string,\r\n      *     vrf_rd: string\r\n      *     vrf_comment: string\r\n      * }} Vrf\r\n      */\r\n    /**\r\n     * @typedef {{\r\n     *     value: number,\r\n     *     label: string\r\n     * }} VrfListItem\r\n     */\r\n\r\n    /**\r\n     * @type {{\r\n     *     netIp: string,\r\n     *     netComment: string,\r\n     *     dataLoading: boolean,\r\n     *     dataReady: boolean,\r\n     *     saving: boolean,\r\n     *     vrfId: string|number,\r\n     *     vrfList: VrfListItem[]\r\n     * }} state\r\n     */\r\n    state = {\r\n        netIp: '',\r\n        netComment: '',\r\n        dataLoading: false,\r\n        dataReady: false,\r\n        saving: false,\r\n        vrfId: '',\r\n        vrfList: []\r\n    }\r\n\r\n    initialNetData = {}\r\n    currentNetData = () => {\r\n        const {netIp, netComment, vrfId} = this.state\r\n        const {delNet, newNet, netId} = this.props\r\n        return {\r\n            delNet,\r\n            newNet,\r\n            netId,\r\n            netIp,\r\n            netComment,\r\n            vrfId\r\n        }\r\n    }\r\n\r\n    getParentNetworkId = async (netId) => {\r\n        let res = {}\r\n        try {\r\n            const response = await axios.get(GET_NET_PARENT,{\r\n                params: {netId}\r\n            })\r\n            if (res.errors) {\r\n                throw new Error('Error update tree after saving data!')\r\n            }\r\n            const {parentNetId} = response.data\r\n            res = {parentNetId}\r\n        } catch (e) {\r\n            res.errors = [e]\r\n        }\r\n        return res\r\n    }\r\n\r\n\r\n    clearStateIfGetInvisible = ((prevVisibleState) => () => {\r\n        if (prevVisibleState !== this.props.isVisible) {\r\n            prevVisibleState = this.props.isVisible\r\n            if (this.props.isVisible === false) this.clearState()\r\n        }\r\n    })(this.props.isVisible)\r\n\r\n\r\n    clearState = ((initialState) => () => {\r\n        console.log('INITIAL STATE', initialState)\r\n        this.setState(cloneDeep(initialState))\r\n    })(cloneDeep(this.state))\r\n\r\n    vrfList = ((prevVrfData, prevList) => (vrfData) => {\r\n        if (JSON.stringify(prevVrfData) === JSON.stringify(vrfData))  return prevList\r\n        if (check.not.array(vrfData)) return prevList\r\n        prevVrfData = vrfData\r\n        prevList = vrfData.map((vrf) => {\r\n            const {vrf_id, vrf_rd, vrf_name, vrf_comment} = vrf\r\n            return {value: vrf_id, label: vrf_name}\r\n        })\r\n        return prevList\r\n    })([], [])\r\n\r\n    handleClose = () => {\r\n        this.props.onClose()\r\n    }\r\n    dataValidate = () => {\r\n        const errors = []\r\n        const {netIp, vrfId} = this.state\r\n        if (check.emptyString(netIp)) errors.push('Не указан адрес подсети')\r\n        if (check.emptyString(vrfId)) errors.push('Не выбран VRF')\r\n        return errors\r\n    }\r\n\r\n    handleSubmit = async() => {\r\n        const errors = this.dataValidate()\r\n        if (check.nonEmptyArray(errors)) {\r\n            alert(errors.join(\"\\n\"))\r\n            return\r\n        }\r\n        try {\r\n            this.setState({saving: true})\r\n\r\n            const result = await axios.post(NET_SUBMIT_URL, this.currentNetData())\r\n            const {data} = result\r\n            if (data.errors) throw data.errors.join(\"\\n\")\r\n            this.setState({saving: false})\r\n            console.log('SAVE RESULT', data.result, data)\r\n\r\n            const {netId, parentNetId} = data\r\n            this.props.onSubmit(this.initialNetData, {...this.currentNetData(), netId, parentNetId})\r\n            setTimeout(() => {this.handleClose()}, 700)\r\n        } catch (e) {\r\n            console.log('ERROR: ', e)\r\n            alert(e)\r\n            this.setState({saving: false})\r\n            if (this.currentNetData().delNet) {\r\n                setTimeout(() => {this.handleClose()}, 700)\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchNetData = async (netId) => {\r\n        try {\r\n\r\n            const res = await axios.get(NET_DATA_URL, {\r\n                params: {netId}\r\n            })\r\n            const {data} = res\r\n            if (!data.netData) {\r\n                console.log('ERROR: fetchNetworkData')\r\n                return {}\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchNetworkData', e.toString())\r\n            return {}\r\n        }\r\n    }\r\n    fetchVrfList = async () => {\r\n        try {\r\n            const res = await axios.get(VRF_LIST_URL, {\r\n                params: {}\r\n            })\r\n            const {data} = res\r\n            if (!data.vrfList) {\r\n                console.log('ERROR: fetchVrfList')\r\n                return []\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchVrfList', e.toString())\r\n            return []\r\n        }\r\n    }\r\n    ipFormat = (value) => {\r\n        const reg = new RegExp('^[0-9./]*$')\r\n        return reg.test(value)\r\n    }\r\n    onChangeNetIp = (e) => {\r\n        if (!(this.ipFormat(e.target.value))) return\r\n        this.setState({netIp: e.target.value})\r\n    }\r\n    onChangeNetComment = (e) => {\r\n        this.setState({netComment: e.target.value})\r\n    }\r\n    onChangeVrf = ({value}) => {\r\n        this.setState({vrfId: value})\r\n    }\r\n\r\n    render() {\r\n        const {isVisible, netId, newNet, delNet} = this.props\r\n        const {dataReady, dataLoading, vrfList, vrfId, netIp, netComment} = this.state\r\n        const modalBody = () => {\r\n            if (!isVisible || !dataReady) return null\r\n            if (dataLoading) return <h3 align=\"center\">Загрузка данных...</h3>\r\n            if (delNet) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <h4 className=\"text-center\">Подтвердите удаление подсети <strong><mark>{netIp}</mark></strong></h4>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            return (\r\n                <Fragment>\r\n                    <Row>\r\n                        <Col md={4}><Input2 controlId='networkIp' addOnPosition=\"left\" addOnText=\"network IP\" onChange={this.onChangeNetIp} label=\"Адрес подсети\" value={netIp} placeholder='CIDR notation'/></Col>\r\n                        <Col md={8}><Input2 controlId='netComment' label=\"Комментарий\" onChange={this.onChangeNetComment} value={netComment} placeholder='Комментарий для подсети'/></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={4}><Select label=\"VRF\" optionList={vrfList} defaultSelected={vrfId} onChange={this.onChangeVrf} /></Col>\r\n                    </Row>\r\n                </Fragment>\r\n            )\r\n        }\r\n        const modalTitle = () => delNet ? 'Удаление подсети' : (newNet ? 'Новая подсеть' : 'Редактирование подсети')\r\n        if (delNet) {\r\n            return (\r\n                <Modal show={isVisible} onHide={this.handleClose} >\r\n                    <ModalHeader closeButton>\r\n                        <Modal.Title>{modalTitle()}</Modal.Title>\r\n                    </ModalHeader>\r\n                    <ModalBody className={custCss.modalBodySmall} >\r\n                        {modalBody()}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Row>\r\n                            <Col md={8}>\r\n                                <h3 align=\"center\" style={{margin: 0}}>{this.state.saving ? 'Удаление...' : ''}</h3>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button onClick={this.handleClose} bsStyle=\"danger\" disabled={this.state.saving} >Отмена</Button>\r\n                                <Button onClick={this.handleSubmit} bsStyle=\"success\" disabled={this.state.saving}>Удалить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            )\r\n        }\r\n        return (\r\n            <Modal show={isVisible} onHide={this.handleClose} bsSize=\"large\" >\r\n                <ModalHeader closeButton>\r\n                    <Modal.Title>{modalTitle()}</Modal.Title>\r\n                </ModalHeader>\r\n                <ModalBody className={custCss.modalBody} >\r\n                    {modalBody()}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h3 align=\"center\" style={{margin: 0}}>{this.state.saving ? 'Сохранение данных...' : ''}</h3>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Button onClick={this.handleClose} bsStyle=\"danger\" disabled={this.state.saving} >Отмена</Button>\r\n                            <Button onClick={this.handleSubmit} bsStyle=\"success\" disabled={this.state.saving}>Сохранить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        this.clearStateIfGetInvisible()\r\n        const {netId, newNet, delNet, isVisible} = this.props\r\n        // this.updateStateFromProps()\r\n        const {dataReady, dataLoading} = this.state\r\n        if (isVisible && netId && !newNet && !delNet && !dataReady && !dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            try {\r\n                const response1 = await Promise.all([\r\n                    this.fetchNetData(netId),\r\n                    this.fetchVrfList(),\r\n                    this.getParentNetworkId(netId)\r\n                ])\r\n                const [{netData}, {vrfList: vrfRawData}, {parentNetId}] = response1\r\n                const {net_ip: netIp, net_comment: netComment, vrf_id: vrfId} = netData\r\n                this.initialNetData = ((serverData, parentNetId) => {\r\n                    const {net_id, net_ip, net_comment, vrf_id} = serverData\r\n                    return {\r\n                        parentNetId,\r\n                        netId: net_id,\r\n                        netIp: net_ip,\r\n                        netComment: net_comment,\r\n                        vrfId: vrf_id\r\n                    }\r\n                })(netData, parentNetId)\r\n                const vrfList = this.vrfList(vrfRawData)\r\n                this.setState({dataLoading: false, dataReady: true, netIp, netComment, vrfId, vrfList})\r\n            } catch (e) {\r\n                console.log('Loading net data ERROR', e.toString())\r\n            }\r\n\r\n        } else if (isVisible && newNet && !dataReady && !dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            this.initialNetData = null\r\n            const response1 = await this.fetchVrfList()\r\n            const {vrfList: vrfRawData} = response1\r\n            const vrfList = this.vrfList(vrfRawData)\r\n            console.log('NET VRF', vrfList)\r\n            this.setState({dataLoading: false, dataReady: true, vrfList})\r\n        } else if (isVisible && delNet && !dataReady && ! dataLoading) {\r\n            this.setState({dataLoading: true})\r\n            const response = await Promise.all([\r\n                this.fetchNetData(netId),\r\n                this.getParentNetworkId(netId)\r\n            ])\r\n            const [{netData}, {parentNetId}] = response\r\n            const {net_ip: netIp, net_comment: netComment, vrf_id: vrfId} = netData\r\n            this.initialNetData = ((serverData, parentNetId) => {\r\n                const {net_id, net_ip, net_comment, vrf_id} = serverData\r\n                return {\r\n                    parentNetId,\r\n                    netId: net_id,\r\n                    netIp: net_ip,\r\n                    netComment: net_comment,\r\n                    vrfId: vrf_id\r\n                }\r\n            })(netData, parentNetId)\r\n            this.setState({dataLoading: false, dataReady: true, netIp, netComment, vrfId})\r\n        }\r\n    }\r\n}\r\n\r\nNetModalWindow.propTypes = {\r\n    isVisible: PropTypes.bool,\r\n    netId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    newNet: PropTypes.bool, // set mode of creation network\r\n    delNet: PropTypes.bool, // set mode of delete network\r\n    onClose: PropTypes.func,\r\n    onSubmit: PropTypes.func, //only if saving updated data is successful, this be invoked (if you need update table after store data i.e.)\r\n    onCreateSubmit: PropTypes.func, //only if saving new network is successful, this be invoked (if you need update table after store data i.e.)\r\n}\r\nNetModalWindow.defaultProps = {\r\n    isVisible: false,\r\n    onSubmit: (prevNetData, updatedNetData) => {\r\n        console.log(prevNetData, updatedNetData)\r\n    }\r\n}\r\n\r\nexport default NetModalWindow\r\n","import React, {Component, Fragment} from 'react'\r\nimport {connectAdvanced} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n// import {check} from 'check-types'\r\nimport {\r\n    invalidateElements,\r\n    forceUpdateRootElements,\r\n    forceUpdateRootElementsIds,\r\n    fetchElementsIfNeeded,\r\n    setFilter,\r\n    setCursor,\r\n} from '../../actions'\r\n\r\nimport {showFilteredItem, restoreSavedStates} from '../../actions'\r\n\r\nimport Table from '../Table'\r\nimport {Header, Body, Row, Column, Footer, Pagination3} from '../Table'\r\nimport RowsContainer from './RowsContainer'\r\nimport {getRootIds, getFilterResults, getFilterItemList, getFilterCursor} from './selectors'\r\nimport FilterFactory from '../FilterFactory'\r\nimport axios from 'axios'\r\nimport {URL_FILTERED_SEARCH} from '../../constants/IpamTable'\r\nimport {ContextMenu, MenuItem} from \"react-contextmenu\"\r\nimport './contextMenu.css'\r\nimport NetModalWindow from '../NetModalWindow'\r\n\r\n\r\nclass IpamTable extends Component {\r\n\r\n    state = {\r\n        isNetModalVisible: false,\r\n        newNet: true,\r\n        delNet: false,\r\n        netId: ''\r\n    }\r\n\r\n    onCloseNetModal = () => {\r\n        this.setState({\r\n            isNetModalVisible: false,\r\n            netId: ''\r\n        })\r\n    }\r\n\r\n    onSubmitNetData = async (prevNetData, newNetData) => {\r\n        console.log(prevNetData, newNetData)\r\n        const netIds = new Set()\r\n        if (newNetData.netId) netIds.add(newNetData.netId)\r\n        netIds.add(newNetData.parentNetId)\r\n        if (prevNetData) {\r\n            if (prevNetData.delNet === false) netIds.add(prevNetData.netId)\r\n            netIds.add(prevNetData.parentNetId)\r\n        }\r\n        this.props.invalidateElementsInStore([...netIds].filter(item => item !== false), [])\r\n        //TODO remove deleted elements from store\r\n        if (netIds.has(false)) this.props.forceUpdateRootItems()\r\n    }\r\n\r\n    factory = new FilterFactory()\r\n\r\n    onChangeFiltersState = async (filterStatements) => {\r\n        const {updateFilterStore} = this.props\r\n        try {\r\n            let response = await axios.post(URL_FILTERED_SEARCH, filterStatements)\r\n            const {searchResult = []} = response.data\r\n\r\n            updateFilterStore({searchResult})\r\n        } catch (error) {\r\n            console.log('Error: ', error.response)\r\n        }\r\n    }\r\n\r\n    filter = this.factory.createFilter('simpleSearch', ['ip'], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n    // filter2 = this.factory.createFilter('simpleSearch', ['ip', 'net_ip', 'office'], {width: '200px', defaultStatement: 'beginWith', minLengthForSearch: 3, placeholder: 'Search...', hideUnusedRows: false})\r\n\r\n\r\n    renderBodyData = function(data){\r\n        const {netsIds = [], hostsIds = []} = data\r\n        return (\r\n            <React.Fragment>\r\n                <RowsContainer netsIds={netsIds} hostsIds={hostsIds} lvl={0} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const data = {body: {netsIds: this.props.netsIds, hostsIds: this.props.hostsIds}}\r\n        const {filteredItemsList} = this.props\r\n\r\n        window.fact = this.factory\r\n\r\n        return (\r\n            <Fragment>\r\n                <Table width={'100%'} data={data} formBodyData={this.renderBodyData} fetchData={this.fetchData} >\r\n                    <Header>\r\n                        <Row>\r\n                            <Column accessor={'address'} minWidth={'200px'} maxWidth={'400px'}>IP address</Column>\r\n                            <Column accessor={'mask'} minWidth={'100px'} fixed>Statistics<br/>(Nets/Hosts)</Column>\r\n                            <Column accessor={'mask'} minWidth={'130px'} fixed>Network mask</Column>\r\n                            <Column accessor={'tags'} minWidth={'100px'} maxWidth={'200px'}>Tags</Column>\r\n                            <Column accessor={'locations'} minWidth={'200px'} maxWidth={'500px'}>Locations</Column>\r\n                            <Column accessor={'vrf'} minWidth={'80px'} fixed>VRF</Column>\r\n                            <Column accessor={'vrf'} minWidth={'60px'} fixed>VLAN</Column>\r\n                            <Column accessor={'vrf'} minWidth={'60px'} fixed>vxlan vni</Column>\r\n                            <Column accessor={'comment'} minWidth={'100px'} maxWidth={'500px'}>Comment</Column>\r\n                        </Row>\r\n                    </Header>\r\n                    <Body />\r\n                    <Footer>\r\n                        <div style={{display: 'flex'}}>\r\n                            {this.filter}\r\n                            {/*<Pagination3 filteredItemsList={filteredItemsList} onChange={this.props.showCurrentFilteredItem} />*/}\r\n                            <Pagination3 filteredItemsList={filteredItemsList} onChange={this.props.showCurrentFilteredItem} onNewItemsList={this.props.restoreStateFromFilter} onHideFilter={this.props.restoreStateFromFilter} />\r\n                        </div>\r\n                        <div> </div>\r\n                    </Footer>\r\n                </Table>\r\n                <ContextMenu id={\"headerTable\"}>\r\n                    <MenuItem data={{foo: 'bar'}} onClick={(e, data) => {console.log(data)}}>\r\n                        Net Item 1\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <ContextMenu id={\"netRowMenu\"}>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: data.id,\r\n                            newNet: false,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Редактировать подсеть\r\n                    </MenuItem>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: '',\r\n                            newNet: true,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Создать подсеть\r\n                    </MenuItem>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: data.id,\r\n                            newNet: false,\r\n                            delNet: true\r\n                        })\r\n                    }}>\r\n                        Удалить подсеть\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <ContextMenu id={\"hostRowMenu\"}>\r\n                    <MenuItem onClick={(e, data) => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            isNetModalVisible: true,\r\n                            netId: '',\r\n                            newNet: true,\r\n                            delNet: false\r\n                        })\r\n                    }}>\r\n                        Создать подсеть\r\n                    </MenuItem>\r\n                </ContextMenu>\r\n                <NetModalWindow isVisible={this.state.isNetModalVisible} newNet={this.state.newNet} delNet={this.state.delNet} netId={this.state.netId} onClose={this.onCloseNetModal} onSubmit={this.onSubmitNetData} />\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.factory.subscribe(this.onChangeFiltersState);\r\n        const {forceUpdateRootItems} = this.props\r\n        forceUpdateRootItems()\r\n    }\r\n}\r\n\r\n\r\n    function selectorFactory(dispatch) {\r\n        // let result = {}\r\n        function forceUpdateRootItems () {\r\n            dispatch(forceUpdateRootElements())\r\n        }\r\n        function forceUpdateRootIds () {\r\n            dispatch (forceUpdateRootElementsIds())\r\n        }\r\n        function invalidateElementsInStore(netsIds, hostsIds) {\r\n            dispatch(invalidateElements({netsIds, hostsIds}))\r\n            dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n        }\r\n        // function updateElements ({netsIds, hostsIds}) {\r\n        //     dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n        // }\r\n        // function forceUpdateElements ({netsIds, hostsIds}) {\r\n        //     dispatch(invalidateElements({netsIds, hostsIds}))\r\n        //     dispatch(fetchElementsIfNeeded({netsIds, hostsIds}))\r\n        // }\r\n        function updateFilterStore ({searchResult}) {\r\n            dispatch(setFilter({searchResult}))\r\n        }\r\n        function setFilterCursor (position) {\r\n            dispatch(setCursor(position))\r\n        }\r\n        function showCurrentFilteredItem (idx) {\r\n            dispatch(showFilteredItem(idx))\r\n        }\r\n        function restoreStateFromFilter () {\r\n            dispatch(restoreSavedStates())\r\n        }\r\n        return (state, ownProps) => {\r\n            const {netsIds, hostsIds} = getRootIds(state)\r\n            const filterStore = getFilterResults(state)\r\n            const filteredItemsList = getFilterItemList(state)\r\n            const filterCursor = getFilterCursor(state)\r\n            const result = {\r\n                forceUpdateRootItems,\r\n                forceUpdateRootIds,\r\n                invalidateElementsInStore,\r\n                updateFilterStore,\r\n                setFilterCursor,\r\n                showCurrentFilteredItem,\r\n                restoreStateFromFilter,\r\n                filterStore,\r\n                filteredItemsList,\r\n                filterCursor,\r\n                netsIds,\r\n                hostsIds\r\n            }\r\n            // if (!isEqual(result, nextResult)) result = nextResult\r\n            return result\r\n        }\r\n}\r\n\r\n\r\nIpamTable.propTypes = {\r\n    //from dispatchToProps\r\n    forceUpdateRootItems: PropTypes.func,\r\n    forceUpdateRootIds: PropTypes.func,\r\n    invalidateElementsInStore: PropTypes.func,\r\n    updateRootElementsId: PropTypes.func,\r\n    updateElements: PropTypes.func,\r\n    updateFilterStore: PropTypes.func,\r\n    setFilterCursor: PropTypes.func,\r\n    showCurrentFilteredItem: PropTypes.func,\r\n    filterStore: PropTypes.object,\r\n    filteredItemsList: PropTypes.array,\r\n    filterCursor: PropTypes.number,\r\n\r\n    //from stateToProps\r\n    rootnetsIds: PropTypes.array,\r\n    rootHostsId: PropTypes.array,\r\n};\r\nIpamTable.defaultProps = {\r\n    rootnetsIds: [],\r\n    rootHostsId: []\r\n};\r\n\r\n\r\nexport default connectAdvanced(selectorFactory)(IpamTable)","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n    fas\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default library.add(\r\n    fas\r\n);\r\n","import check from 'check-types'\r\n/**\r\n * convert string to int array and return items that >= 0\r\n * @param dataString\r\n * @returns {Array}\r\n */\r\nexport function convertToIntArray(dataString) {\r\n    if (check.array(dataString)) return dataString\r\n    if (!check.string(dataString)) return []\r\n\r\n    const idArray = dataString.split(\",\")\r\n    const filteredIds = []\r\n    for (let id of idArray) {\r\n        id = parseInt(id.trim(), 10)\r\n        if (id >= 0) filteredIds.push(id)\r\n    }\r\n    return filteredIds\r\n}\r\n\r\nexport function isItterable(obj) {\r\n    // checks for null and undefined\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    return typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n","import {convertToIntArray} from '../helperFunctions'\r\nimport {\r\n    REQUEST_ROOT_ELEMENTS_ID,\r\n    RECEIVE_ROOT_ELEMENTS_ID,\r\n    INVALIDATE_ROOT_ELEMENTS_ID,\r\n} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    netsIds: [],\r\n    hostsIds: [],\r\n    isFetching: false,\r\n    didInvalidate: false\r\n}\r\n\r\nconst rootElementsIds = (rootElements = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case REQUEST_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            })\r\n        case RECEIVE_ROOT_ELEMENTS_ID:\r\n            const {netsIds, hostsIds} = payload\r\n            return Object.assign({}, rootElements, {\r\n                netsIds: convertToIntArray(netsIds),\r\n                hostsIds: convertToIntArray(hostsIds),\r\n                isFetching: false,\r\n                didInvalidate: false\r\n            })\r\n        case INVALIDATE_ROOT_ELEMENTS_ID:\r\n            return Object.assign({}, rootElements, {\r\n                isFetching: false,\r\n                didInvalidate: true\r\n            })\r\n        default:\r\n            return rootElements\r\n    }\r\n}\r\nexport default rootElementsIds","import cloneDeep from 'lodash/cloneDeep'\r\nimport {\r\n    REQUEST_ELEMENTS,\r\n    RECEIVE_ELEMENTS,\r\n    INVALIDATE_ELEMENTS,\r\n    NET_ITEM_TOGGLE_EXPAND_COLLAPSE,\r\n    NET_ITEMS_EXPAND,\r\n    SELECT_NET_ITEMS,\r\n    DESELECT_NET_ITEMS,\r\n    SELECT_HOST_ITEMS,\r\n    DESELECT_HOST_ITEMS,\r\n    UPDATE_NET_ITEMS,\r\n} from '../constants/actions'\r\nimport {convertToIntArray, isItterable} from '../helperFunctions'\r\n\r\nconst initialDataStore = {\r\n    networks: {},\r\n    hosts: {},\r\n    selectedNets: [],\r\n    selectedHosts: []\r\n}\r\nconst networkElementInitialState = () => ({\r\n    netLocations: {},\r\n    netChildren: [],\r\n    hostChildren: [],\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n})\r\nconst hostElementInitialState = {\r\n    didInvalidate: false,\r\n    isSelected: false,\r\n    isFetching: false,\r\n    isExpanded: false,\r\n}\r\n/**\r\n * helper function for change state of one network element\r\n * @param stateOfElement\r\n * @param actionType\r\n * @param netData\r\n * @returns {*} changed state of element\r\n */\r\nconst handleNetworkElement = (stateOfElement = networkElementInitialState(), actionType, netData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {netId: id, address: ipAddress, netmask, comment, vrfId, vrfName, vrfRd, netLocations, net_children: netChildren, host_children: hostChildren} = netData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                netmask,\r\n                comment,\r\n                vrfId,\r\n                vrfName,\r\n                vrfRd,\r\n                netLocations: JSON.parse(netLocations),\r\n                netChildren: convertToIntArray(netChildren),\r\n                hostChildren: convertToIntArray(hostChildren),\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            return Object.assign({}, stateOfElement, {\r\n                isExpanded: !stateOfElement.isExpanded,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst handleHostElement = (stateOfElement = hostElementInitialState, actionType, hostData) => {\r\n\r\n    switch (actionType) {\r\n        case REQUEST_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: false,\r\n                isFetching: true\r\n            })\r\n        case RECEIVE_ELEMENTS:\r\n            const {__id: id, ipAddress, comment, macAddress} = hostData\r\n            return Object.assign({}, stateOfElement, {\r\n                id,\r\n                ipAddress,\r\n                comment,\r\n                macAddress,\r\n                didInvalidate: false,\r\n                isFetching: false\r\n            })\r\n        case INVALIDATE_ELEMENTS:\r\n            return Object.assign({}, stateOfElement, {\r\n                didInvalidate: true,\r\n            })\r\n        default:\r\n            return stateOfElement\r\n    }\r\n}\r\n\r\nconst expandNetworkElement = (element) => {\r\n    return Object.assign({...cloneDeep(element), isExpanded: true})\r\n}\r\nconst selectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: true})\r\n}\r\nconst deselectItem = (item) => {\r\n    return Object.assign({...cloneDeep(item), isSelected: false})\r\n}\r\n\r\nconst netData = (store = initialDataStore, action) => {\r\n    const {type, payload = {}} = action\r\n    const {networks, hosts, selectedNets, selectedHosts} = store\r\n\r\n    const {netsIds = [], networksData = {}, hostsIds = [], hostsData = {}, id} = payload\r\n\r\n    const updatedNetworkElements = {}\r\n    const updatedHostElements = {}\r\n    let updatedSelectedNets = []\r\n    let updatedSelectedHosts = []\r\n\r\n    switch (type) {\r\n        case REQUEST_ELEMENTS:\r\n        case INVALIDATE_ELEMENTS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = {...handleNetworkElement(networks[id], type), id}\r\n            })\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = {...handleHostElement(hosts[id], type), id}\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case RECEIVE_ELEMENTS:\r\n            if (isItterable(networksData)) {\r\n                for (const data of networksData) {\r\n                    const {netId: id} = data\r\n                    updatedNetworkElements[id] = handleNetworkElement(networks[id], type,data)\r\n                }\r\n            }\r\n            if (isItterable(hostsData)) {\r\n                for (const data of hostsData) {\r\n                    const {__id: id} = data\r\n                    updatedHostElements[id] = handleHostElement(hosts[id], type,data)\r\n                }\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), hosts: Object.assign({}, hosts, updatedHostElements)})\r\n        case NET_ITEM_TOGGLE_EXPAND_COLLAPSE:\r\n            updatedNetworkElements[id] = handleNetworkElement(networks[id], type)\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case NET_ITEMS_EXPAND:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = expandNetworkElement(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        case SELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = selectItem(networks[id])\r\n            })\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: netsIds})\r\n         case DESELECT_NET_ITEMS:\r\n            netsIds.forEach(id => {\r\n                updatedNetworkElements[id] = deselectItem(networks[id])\r\n            })\r\n            updatedSelectedNets = selectedNets.filter(id => !netsIds.includes(id))\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements), selectedNets: updatedSelectedNets})\r\n        case SELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = selectItem(hosts[id])\r\n            })\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: hostsIds})\r\n        case DESELECT_HOST_ITEMS:\r\n            hostsIds.forEach(id => {\r\n                updatedHostElements[id] = deselectItem(hosts[id])\r\n            })\r\n            updatedSelectedHosts = selectedHosts.filter(id => !hostsIds.includes(id))\r\n            return Object.assign({}, {...store, hosts: Object.assign({}, hosts, updatedHostElements), selectedHosts: updatedSelectedHosts})\r\n        case UPDATE_NET_ITEMS:\r\n            const {itemsState = {}} = payload\r\n            for (const [id, item] of Object.entries(itemsState)) {\r\n                const fromStore = store.networks[id]\r\n                if (!fromStore) continue\r\n                updatedNetworkElements[id] = Object.assign(cloneDeep(fromStore), item)\r\n            }\r\n            return Object.assign({}, {...store, networks: Object.assign({}, networks, updatedNetworkElements)})\r\n        default:\r\n            return store\r\n    }\r\n}\r\n\r\nexport default netData\r\n","import {\r\n    SET_CURSOR,\r\n    SET_FILTER,\r\n    SHOW_RESULT_ITEM,\r\n    BACKUP_NET_ITEMS\r\n} from '../constants/actions'\r\n\r\nconst initialFilterStore = {\r\n    itemList: [],\r\n    hostIdBackupList: [],\r\n    netIdBackupList: [],\r\n    hostItemsBackup: {},\r\n    netItemsBackup: {},\r\n    cursor: 0,\r\n}\r\n\r\nconst filter = (store = initialFilterStore, action) => {\r\n    const {type, payload} = action\r\n    // const {itemList, hostStateBackups, netStateBackup, cursor} = store\r\n\r\n    switch (type) {\r\n        case SET_FILTER:\r\n            const {searchResult} = payload\r\n            return {...store, itemList: searchResult, cursor: 0}\r\n        case SET_CURSOR:\r\n            const {position} = payload\r\n            return {...store, cursor: position}\r\n        case BACKUP_NET_ITEMS:\r\n            const {itemsState} = payload\r\n            const netIdBackupList = Object.keys(itemsState).map(id => parseInt(id))\r\n            return {...store, netItemsBackup: itemsState, netIdBackupList}\r\n        case SHOW_RESULT_ITEM:\r\n        default:\r\n            return store\r\n    }\r\n}\r\nexport default filter","import {combineReducers} from 'redux'\r\nimport rootElementsIds from './rootElementsIds'\r\nimport netData from './netData'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    rootElementsIds,\r\n    netData,\r\n    filter\r\n})\r\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport 'isomorphic-fetch'\n\nimport './globalStyles/bootstrap/custBootstrap.scss'\n\nimport App from \"./components/App\";\nimport AppNavbar from './components/AppNavbar'\nimport IpamTable from './components/IpamTable'\nimport './components/fontAwesome/faLibrary.js'\nimport configureStore from './configureStore'\nimport {URL_REQUEST_ROOT_ELEMENTS_ID, URL_REQUEST_NET_ELEMENTS_BY_ID, URL_REQUEST_HOST_ELEMENTS_BY_ID} from './constants/IpamTable'\n\nconst store = configureStore()\n//debug only\nwindow.store = store\nconsole.log('API_GET_ROOT_IDS', URL_REQUEST_ROOT_ELEMENTS_ID)\nconsole.log('API_GET_NET_ELEMENTS_BY_ID', URL_REQUEST_NET_ELEMENTS_BY_ID)\nconsole.log('API_GET_HOST_ELEMENTS_BY_ID', URL_REQUEST_HOST_ELEMENTS_BY_ID)\n\nrender(\n    <Provider store={store}>\n        <App>\n            <App.Header>\n                <AppNavbar />\n            </App.Header>\n            <App.Body>\n                <IpamTable/>\n            </App.Body>\n            {/*<App.Footer>*/}\n\n            {/*</App.Footer>*/}\n        </App>\n    </Provider>,\n    document.getElementById(\"root\"));","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default function configureStore() {\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        return createStore(\r\n            reducer,\r\n            compose(\r\n                applyMiddleware(\r\n                    thunkMiddleware\r\n                ),\r\n                window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            )\r\n\r\n        )\r\n    }\r\n    return createStore(\r\n        reducer,\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n\r\n}"],"sourceRoot":""}