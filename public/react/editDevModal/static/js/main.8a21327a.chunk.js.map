{"version":3,"sources":["EditDevWindow/style.module.css","components/Base/Input/style.module.css","components/Base/Select/index.js","components/Base/RemoteDataProvider/index.js","constants.js","components/Office/index.js","components/Region/index.js","components/City/index.js","components/DevType/index.js","components/Platform/index.js","components/Software/index.js","components/Base/Input/index.js","components/Base/Input2/index.js","components/Base/TextArea/index.js","components/Base/TextArea2/index.js","components/Base/CheckBox/index.js","components/Base/EditableTag/index.js","components/InUseButton/index.js","components/Modules/index.js","components/IpAddressEdit/index.js","components/Ports/index.js","components/DevLocation/index.js","EditDevWindow/index.js","serviceWorker.js","index.js","components/IpAddressEdit/style.module.css","components/Base/Select/style.module.css","components/Base/Input2/style.module.css"],"names":["module","exports","modalBody","formGroupZeroMargin","Select","prevValue","prevFilter","prevState","state","value","isLoading","optionsInvalidate","optionList","setDefaultSelected","undefined","_this","filter","item","length","setState","handleChange","e","parseInt","target","isNaN","toString","defaultSelectedValue","checkSelected","props","disabled","checkFilter","isEqual","invokeListeners","JSON","stringify","onChange","check","function","not","array","cloneDeep","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","subscriber","err","return","buildOptionList","react_default","a","createElement","emptyOption","emptyValue","key","emptyLabel","optionsSet","map","_ref","label","concat","Object","toConsumableArray","this","isAsync","updateRemoteOptionList","updateLocalOptionList","remoteDataFetch","remoteDataFetchDefault","data","console","log","_context2","t0","remoteSourceUrl","axios","post","_context3","clearMargin","css","controlLabel","string","ControlLabel","react","FormGroup","controlId","style","bsClass","FormControl","componentClass","placeholder","className","smallSize","size","updateIfNeeded","defaultSelected","PureComponent","defaultProps","selected","RemoteDataProvider","url","asyncToGenerator","regenerator_default","mark","_callee","_ref2","wrap","_context","prev","sent","abrupt","emptyString","stop","_x","apply","arguments","BASE_URL","protocol","window","location","hostname","port","DEV_DATA_URL","DEV_MODULES_DATA_URL","DEV_PORTS_DATA_URL","DEV_LOCATION_URL","VRF_LIST_URL","DEV_SUBMIT_URL","REGIONS_URL","CITIES_URL","OFFICES_URL","DEV_TYPES","PLATFORMS","SOFTWARE_LIST","Office","optionListUpdater","Base_Select","assign","Region","City","DevType","Platform","updateOptionList","Software","Input","setDefaultValue","number","custCss","_this$props","addOnPosition","addOnText","formControl","type","readOnly","nonEmptyString","leftAddOn","InputGroup","Addon","rightAddOn","defaultValue","Input2","customSize","TextArea","TextArea2","CheckBox","checked","handleOnChange","Checkbox","title","children","EditableTag","ref","React","createRef","formatValue","stateless","eventValue","currentState","html","wordWrap","react_contenteditable_default","innerRef","tagName","InUseButton","handleOnClick","Button","bsStyle","bsSize","onClick","Modules","modulesSet","index","button","components_InUseButton","module_item_in_use","module_item_not_found","module_item_sn","Base_EditableTag","module_item_comment","margin","align","valign","Table","responsive","bordered","striped","condensed","tableLayout","IpAddressEdit","ip","mask","setDefaultIp","setDefaultMask","integer","handleChangeIp","handleChangeMask","formControlIp","onChangeIp","formControlMask","onChangeMask","Ports","prevVrfData","prevList","ports","ipEditMode","setDefaultState","newState","objectSpread","port_mask_len","ipFormat","RegExp","test","numericFormat","macAddressFormat","handlerOnChangeCheckbox","idx","port_is_mng","newPorts","port_ip","onChangePortName","port_details","portName","onChangePortMac","port_mac","onChangePortDescription","description","onChangeVrf","_this$props$vrfData$f","vrfData","vrf_id","vrf","slicedToArray","port_vrf_id","port_vrf_name","vrf_name","vrfList","vrfName","vrfId","_vrfData$filter","newPort","port_id","port_comment","deleted","onClickAddPort","updatedPorts","push","onClickDelPort","portsSet","createdPorts","existedPorts","defaultVrf","forEach","ipCell","components_IpAddressEdit","Base_Input2","marginTop","marginBottom","reverse","Row","Col","md","DevLocation","pStyle","padding","floor","row","rack","unit","rackSide","EditDevWindow","initialState","show","newDev","devId","devDataLoading","devDataReady","mngIp","officeComment","loadingOfficeData","officeDataInvalidate","saving","region_id","city_id","clearState","initialData","geoLocation","devInfo","modules","clearInitialData","clearCurrentState","emptyGeoLocation","office_id","office_comment","cityFilter","accessor","statement","clearCityFilter","officeFilter","clearOfficeFilter","siteInfo","clearSiteInfo","clearFormData","getDevLocation","location_id","res","get","params","managingIp","portsInfo","join","handleShow","handleClose","dataValidate","devData","errors","dev_type_id","handleSubmit","_callee2","nonEmptyArray","alert","result","updateDevTable","setTimeout","onChangeGeoLocation","_ref4","_callee3","_ref3","_res$location","defineProperty","onChangeDevInfo","_x2","onChangeOfficeComment","_ref5","onChangeDevDetails","_ref6","dev_details","onChangeModule","_ref7","changeMngIpString","onChangePorts","_ref8","onChangeDevLocation","_ref9","site","fetchDeviceData","_callee4","id","_context4","fetchDevModulesData","_callee5","_context5","fetchDevPortsData","_callee6","_context6","fetchVrfList","_callee7","_context7","memoizedCityFilter","newCityFilter","memoizedOfficeFilter","newFilter","_this2","_this$initialData","devSite","_ref14","Modal","onHide","ModalHeader","closeButton","Title","ModalBody","components_Region","components_City","components_Office","Base_TextArea2","components_DevType","components_Platform","platform_id","components_Software","software_id","Base_Input","software_item_ver","platform_item_sn","platform_item_sn_alt","Base_TextArea","dev_comment","Base_CheckBox","dev_in_use","components_Modules","components_Ports","components_DevLocation","ModalFooter","openEditModal","_this3","openNewDevModal","Promise","all","response1","response2","_ref15","_context9","Component","Boolean","match","ReactDOM","render","src_EditDevWindow","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","indents"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,+CCAlBF,EAAAC,QAAA,CAAkBE,oBAAA,sdCQZC,mCASqBC,EAyBPC,EAQIC,4KAxCpBC,MAAQ,CACJC,MAAO,GACPC,WAAW,EACXC,mBAAmB,KAEvBC,WAAa,KAEbC,oBAAuBR,EAOpB,GAPkC,SAACI,QACpBK,IAAVL,GAAiC,OAAVA,GAAkBM,EAAKP,MAAMG,mBAAqBI,EAAKP,MAAME,WACpFL,IAAcI,IAClBJ,EAAYI,EAC0D,IAAlEM,EAAKH,WAAWI,OAAO,SAACC,GAAD,OAAUA,EAAKR,QAAUA,IAAOS,QACvDH,EAAKP,MAAMC,QAAUA,GACzBM,EAAKI,SAAS,CAACV,MAAOJ,SAG1Be,aAAe,SAACC,GACZ,IAAIZ,EAAQa,SAASD,EAAEE,OAAOd,QACzBe,MAAMf,IAAUA,EAAMgB,UAAYhB,EAAMgB,aAAeJ,EAAEE,OAAOd,MACjEM,EAAKI,SAAS,CAACV,UAEfM,EAAKI,SAAS,CAACV,MAAOY,EAAEE,OAAOd,WAGvCiB,qBAAuB,WACnB,OAAkC,IAA3BX,EAAKH,WAAWM,OAAeH,EAAKH,WAAW,GAAGH,MAAQ,MAGrEkB,cAAgB,WACRZ,EAAKP,MAAME,WAAaK,EAAKa,MAAMC,UAC0C,IAA7Ed,EAAKH,WAAWI,OAAO,SAACC,GAAD,OAAUA,EAAKR,QAAUM,EAAKP,MAAMC,QAAOS,QAAcH,EAAKI,SAAS,CAACV,MAAOM,EAAKW,4BAEnHI,aAAgBxB,EAKbS,EAAKa,MAAMZ,OALiB,WAAM,IAC1BA,EAAUD,EAAKa,MAAfZ,OACP,IAAIe,IAAQzB,EAAYU,GAExB,OADAV,EAAaU,EACND,EAAKI,SAAS,CAACR,mBAAmB,QAI7CqB,iBAAoBzB,EAWjB,GAX+B,WAC9B,GAAI0B,KAAKC,UAAUnB,EAAKP,SAAWyB,KAAKC,UAAU3B,GAAlD,CADoC,IAE/B4B,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CACA5B,EAAYiC,IAAUzB,EAAKP,OAPS,IAAAiC,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAQpC,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,GACIS,EAD+BN,EAAAnC,OACpBF,GATqB,MAAA4C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,UAuDxCU,gBAAkB,WAEd,GADoBtC,EAAKP,MAAlBE,UACQ,OAAO4C,EAAAC,EAAAC,cAAA,UAAQ/C,MAAO,MAAf,cAEtB,IAAMgD,EAAcH,EAAAC,EAAAC,cAAA,UAAQ/C,MAAOM,EAAKa,MAAM8B,WAAYC,IAAI,SAAS5C,EAAKa,MAAMgC,YAC5EC,EAAa9C,EAAKH,WAAWkD,IAC/B,SAAAC,EAAiBJ,GAAQ,IAAvBlD,EAAuBsD,EAAvBtD,MAAOuD,EAAgBD,EAAhBC,MACL,OAAOV,EAAAC,EAAAC,cAAA,UAAQ/C,MAAOA,EAAOkD,IAAKA,GAAMK,KAEhD,OAA+B,IAA3BjD,EAAKH,WAAWM,OACT2C,EAEA9C,EAAKa,MAAM6B,YAAX,CAA0BA,GAA1BQ,OAAAC,OAAAC,EAAA,EAAAD,CAA0CL,IAAcA,gNApDvCO,KAAKxC,MAA1ByC,YAASxC,eACuBuC,KAAK5D,MAArCE,cAAWC,uBAEdD,IAAamB,sDACjBuC,KAAKtC,cACAnB,uDACD0D,0BACAD,KAAKjD,SAAS,CAACT,WAAW,cACF0D,KAAKE,iCAA7BF,KAAKxD,0CAELwD,KAAKxD,WAAawD,KAAKG,gCAE3BH,KAAKjD,SAAS,CAACT,WAAW,EAAOC,mBAAmB,mRAIIyD,KAAKxC,MAAtD4C,6BAAkBJ,KAAKK,2CAEPD,EAAgBJ,KAAKxC,MAAMZ,sBAAxC0D,2BACCtC,IAAMG,MAAMmC,GAAQA,EAAO,oCAElCC,QAAQC,IAAI,oBAAZC,EAAAC,+JAMJ,OAAOV,KAAKxC,MAAMhB,6LAImBwD,KAAKxC,MAAnCmD,wBAAiB/D,oBAAO,uBAENgE,IAAMC,KAAKF,EAAiB/D,0BAA1C0D,2BACAtC,IAAMG,MAAMmC,GAAQA,EAAO,oCAElCC,QAAQC,IAAI,UAAZM,EAAAJ,gJAuBJ,IAAMK,EAAcf,KAAKxC,MAAMuD,YAAcC,IAAIjF,yBAAsBW,EAChEL,EAAS2D,KAAK5D,MAAdC,MACD4E,EAAejD,IAAMkD,OAAOlB,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KACxG,OACIV,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWC,MAAOvB,KAAKxC,MAAM+D,MAAOC,QAAST,GACzEE,EACD/B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACI1D,SAAUiC,KAAKhD,aACf0E,eAAe,SACfC,YAAY,cACZtF,MAAOA,EACPoB,SAAUuC,KAAKxC,MAAMC,SACrBmE,UAAW5B,KAAKxC,MAAMqE,UAAYb,IAAIc,UAAOpF,GAE5CsD,KAAKf,yLAOhBe,KAAK+B,wBACX/B,KAAKvD,mBAAmBuD,KAAKxC,MAAMwE,iBACnChC,KAAKzC,uRAGCyC,KAAK+B,wBACX/B,KAAKvD,mBAAmBuD,KAAKxC,MAAMwE,iBACnChC,KAAKzC,gBACLyC,KAAKpC,2HAlJQqE,iBAgMrBjG,EAAOkG,aAAe,CAClB7C,aAAa,EACb7C,WAAY,GACZyD,SAAS,EACTlC,SAAU,GACVuB,WAAY,GACZE,WAAY,4DACZ5C,OAAQ,GACRuF,SAAU,IAGCnG,QClMAoG,EAfY,SAACC,EAAK9C,GAAN,sBAAAI,EAAAG,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAApD,EAAAqD,KAAc,SAAAC,EAAgB7F,GAAhB,IAAA8F,EAAApC,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAhE,MAAA,cAAAgE,EAAAC,KAAA,EAAAD,EAAAhE,KAAA,EAEZgC,IAAMC,KAAKwB,EAAKzF,GAFJ,cAAA8F,EAAAE,EAAAE,KAE1BxC,EAF0BoC,EAE1BpC,KAF0BsC,EAAAG,OAAA,SAG1BzC,EAAKf,GAAK3C,OAAO,SAAAC,GACpB,OAAOmB,IAAME,IAAI8E,YAAYnG,EAAKR,UAJL,cAAAuG,EAAAC,KAAA,EAAAD,EAAAlC,GAAAkC,EAAA,SAOjCrC,QAAQC,IAAI,UAAZoC,EAAAlC,IAPiCkC,EAAAG,OAAA,SAQ1B,CAAC,CACJ1G,MAAO,iBACPuD,MAAO,0HAVsB,yBAAAgD,EAAAK,SAAAR,EAAAzC,KAAA,YAAd,gBAAAkD,GAAA,OAAAvD,EAAAwD,MAAAnD,KAAAoD,YAAA,ICFrBC,EAAY,WACd,IAAMC,EAAWC,OAAOC,SAASF,SAC3BG,EAAWF,OAAOC,SAASC,SAC3BC,EAAOH,OAAOC,SAASE,KAE7B,MADiC,cAAbD,EACF,GAAA5D,OAAMyD,EAAN,MAAAzD,OANK,0BAML,GAAAA,OAA6CyD,EAA7C,MAAAzD,OAA0D4D,GAA1D5D,OAA4E,KAAP6D,EAAY,GAAK,KAAtF7D,OAA4F6D,GALhG,GAOLC,EAAY,GAAA9D,OAAMwD,EAAN,wBACZO,EAAoB,GAAA/D,OAAMwD,EAAN,+BACpBQ,EAAkB,GAAAhE,OAAMwD,EAAN,6BAClBS,EAAgB,GAAAjE,OAAMwD,EAAN,4BAChBU,EAAY,GAAAlE,OAAKwD,EAAL,wBACZW,EAAc,GAAAnE,OAAMwD,EAAN,qBACdY,EAAW,GAAApE,OAAMwD,EAAN,wBACXa,EAAU,GAAArE,OAAMwD,EAAN,uBACVc,EAAW,GAAAtE,OAAMwD,EAAN,wBACXe,GAAS,GAAAvE,OAAMwD,EAAN,yBACTgB,GAAS,GAAAxE,OAAMwD,EAAN,0BACTiB,GAAa,GAAAzE,OAAMwD,EAAN,6BAC1B9C,QAAQC,IAAI,eAAgB6C,OCdtBkB,8MAEFC,kBAAoBpC,EAAmB+B,EAAa,mFAEhD,OAAOjF,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAKwE,4BAJhDvC,iBA2BrBsC,GAAOrC,aAAe,CAClBtC,MAAO,2BACP0B,UAAW,kBAGAiD,UC/BTI,8MAEFH,kBAAoBpC,EAAmB6B,EAAa,mFAEhD,OAAO/E,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAKwE,4BAJhDvC,iBA0BrB0C,GAAOzC,aAAe,CAClBtC,MAAO,uCACP0B,UAAW,kBAEAqD,UC9BTC,8MAEFJ,kBAAoBpC,EAAmB8B,EAAY,kFAE/C,OAAOhF,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAKwE,4BAJlDvC,iBA2BnB2C,GAAK1C,aAAe,CAChBtC,MAAO,iCACP0B,UAAW,gBAQAsD,UCtCTC,8MAEFL,kBAAoBpC,EAAmBgC,GAAW,oFAE9C,OAAOlF,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAKwE,4BAJ/CvC,iBA2BtB4C,GAAQ3C,aAAe,CACnBtC,MAAO,+CACP0B,UAAW,mBAGAuD,UChCTC,8MAEFC,iBAAmB3C,EAAmBiC,GAAW,qFAE7C,OAAOnF,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAK+E,2BAJ9C9C,iBA2BvB6C,GAAS5C,aAAe,CACpBtC,MAAO,yDACP0B,UAAW,oBAGAwD,UChCTE,8MAEFR,kBAAoBpC,EAAmBkC,GAAe,wFAElD,OAAOpF,EAAAC,EAAAC,cAACqF,EAAD3E,OAAA4E,OAAA,GAAY1E,KAAKxC,MAAjB,CAAwByC,SAAO,EAACG,gBAAiBJ,KAAKwE,4BAJ9CvC,iBA2BvB+C,GAAS9C,aAAe,CACpBtC,MAAO,eACP0B,UAAW,oBAGA0D,yCChCTC,oCAKkBhJ,4KAJpBG,MAAQ,CACJC,MAAO,MAGX6I,iBAAoBjJ,EAKjB,GAL+B,SAACI,IAC1B2B,IAAMkD,OAAO7E,IAAU2B,IAAMmH,OAAO9I,KAAWJ,IAAcI,IAC9DJ,EAAYI,EACZM,EAAKI,SAAS,CAACV,eAIvBW,aAAe,SAACC,GACZN,EAAKI,SAAS,CAACV,MAAOY,EAAEE,OAAOd,WAGnCuB,gBAAkB,WAAM,IACfG,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CALoB,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAMpB,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,EAC/BS,EAD+BN,EAAAnC,OACpByD,OAAO4E,OAAO,GAAI/H,EAAKP,SAPlB,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,8EAYpB,IAAMwC,EAAcf,KAAKxC,MAAMuD,YAAcqE,KAAQrJ,yBAAsBW,EADtE2I,EAE8BrF,KAAKxC,MAAjC8H,EAFFD,EAEEC,cAAeC,EAFjBF,EAEiBE,UAChBtE,EAAejD,IAAME,IAAI8E,YAAYhD,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KAC3G4F,EAActG,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAChBgE,KAAK,OACLpJ,MAAO2D,KAAK5D,MAAMC,MAClBsF,YAAa3B,KAAKxC,MAAMmE,YACxB5D,SAAUiC,KAAKhD,aACf0I,SAAU1F,KAAKxC,MAAMkI,SACrBjI,SAAUuC,KAAKxC,MAAMC,SACrB8D,MAAOvB,KAAKxC,MAAM+D,QAEtB,GAAI+D,GAAiBtH,IAAM2H,eAAeJ,GAAY,CAClD,IAAMK,EAAY5F,KAAKxC,MAAM8H,eAA8C,SAA7BtF,KAAKxC,MAAM8H,cAA2BpG,EAAAC,EAAAC,cAACyG,GAAA,EAAWC,MAAZ,KAAmB9F,KAAKxC,MAAM+H,WAAgC,KAC5IQ,EAAa/F,KAAKxC,MAAM8H,eAA8C,UAA7BtF,KAAKxC,MAAM8H,cAA4BpG,EAAAC,EAAAC,cAACyG,GAAA,EAAWC,MAAZ,KAAmB9F,KAAKxC,MAAM+H,WAAgC,KACpJ,OACIrG,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWE,QAAST,GAChDE,EACD/B,EAAAC,EAAAC,cAACyG,GAAA,EAAD,KACKD,EACAJ,EACAO,KAMjB,OACI7G,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWE,QAAST,GAChDE,EACAuE,gDASjBxF,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,+DAGLoC,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,yBA1EOqE,iBA6FpBgD,GAAM/C,aAAe,CACjBtC,MAAO,GACPnC,UAAU,GAECwH,8BCjGTgB,oLAGE,IAAMlF,EAAcf,KAAKxC,MAAMuD,YAAcC,KAAIjF,yBAAsBW,EADlE2I,EAE8BrF,KAAKxC,MAAjC8H,EAFFD,EAEEC,cAAeC,EAFjBF,EAEiBE,UAChBtE,EAAejD,IAAME,IAAI8E,YAAYhD,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KAC3G4F,EAActG,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAChBgE,KAAK,OACLpJ,MAAO2D,KAAKxC,MAAMnB,MAClBsF,YAAa3B,KAAKxC,MAAMmE,YACxB5D,SAAUiC,KAAKxC,MAAMO,SACrB2H,SAAU1F,KAAKxC,MAAMkI,SACrBjI,SAAUuC,KAAKxC,MAAMC,SACrBmE,UAAW5B,KAAKxC,MAAM0I,WAAalF,KAAIc,UAAOpF,IAElD,GAAI4I,GAAiBtH,IAAM2H,eAAeJ,GAAY,CAClD,IAAMK,EAAY5F,KAAKxC,MAAM8H,eAA8C,SAA7BtF,KAAKxC,MAAM8H,cAA2BpG,EAAAC,EAAAC,cAACyG,GAAA,EAAWC,MAAZ,KAAmB9F,KAAKxC,MAAM+H,WAAgC,KAC5IQ,EAAa/F,KAAKxC,MAAM8H,eAA8C,UAA7BtF,KAAKxC,MAAM8H,cAA4BpG,EAAAC,EAAAC,cAACyG,GAAA,EAAWC,MAAZ,KAAmB9F,KAAKxC,MAAM+H,WAAgC,KACpJ,OACIrG,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWE,QAAST,GAChDE,EACD/B,EAAAC,EAAAC,cAACyG,GAAA,EAAD,KACKD,EACAJ,EACAO,KAMjB,OACI7G,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWE,QAAST,GAChDE,EACAuE,sGAnCJvD,iBA6DrBgE,GAAO/D,aAAe,CAClBzE,UAAU,EACVsD,aAAa,GAEFkF,UClETE,oCAiBkBlK,4KAhBpBG,MAAQ,CACJC,MAAO,MAEXW,aAAe,SAACC,GACZN,EAAKI,SAAS,CAACV,MAAOY,EAAEE,OAAOd,WAEnCuB,gBAAkB,WAAM,IACfG,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CALoB,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAMpB,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,EAC/BS,EAD+BN,EAAAnC,OACpByD,OAAO4E,OAAO,GAAI/H,EAAKP,SAPlB,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,QAUxB2G,iBAAoBjJ,EASjB,GAT+B,SAACI,QACjBK,IAAVL,GAAiC,OAAVA,GACvBJ,IAAcI,IAClBJ,EAAYI,EACZM,EAAKI,SAAS,CAACV,qFAQf,IAAM4E,EAAejD,IAAME,IAAI8E,YAAYhD,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KACjH,OACIV,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAU,wBAChBL,EACD/B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAaC,eAAe,WAAWC,YAAa3B,KAAKxC,MAAMmE,YAAa5D,SAAUiC,KAAKhD,aAAcX,MAAO2D,KAAK5D,MAAMC,qDAKnI2D,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,+DAGLoC,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,yBA3CUqE,iBA2DvBkE,GAASjE,aAAe,GAGTiE,UC9DTC,oLAGE,IAAMnF,EAAejD,IAAME,IAAI8E,YAAYhD,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KACjH,OACIV,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAU,wBAChBL,EACD/B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAaC,eAAe,WAAWC,YAAa3B,KAAKxC,MAAMmE,YAAa5D,SAAUiC,KAAKxC,MAAMO,SAAU1B,MAAO2D,KAAKxC,MAAMnB,MAAOoB,SAAUuC,KAAKxC,MAAMC,8GAPjJwE,iBAwBxBmE,GAAUlE,aAAe,GAGVkE,oBC3BTC,oCAUkBlK,4KATpBC,MAAQ,CACJC,MAAOM,EAAKa,MAAM8I,WAGtBC,eAAiB,WACb5J,EAAKI,SAAS,CAACV,OAAQM,EAAKP,MAAMC,WAItC6I,iBAAoB/I,EAKjBQ,EAAKa,MAAM8I,QALoB,SAACjK,GAC3BF,IAAcE,IACdF,EAAYE,EACZM,EAAKI,SAAS,CAACV,eAIvBuB,gBAAkB,WAAM,IACfG,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CALoB,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAMpB,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,EAC/BS,EAD+BN,EAAAnC,OACpByD,OAAO4E,OAAO,GAAI/H,EAAKP,SAPlB,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,8EAYpB,OACIW,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAUC,MAAOzG,KAAKxC,MAAMiJ,MAAO1I,SAAUiC,KAAKuG,eAAgBD,QAAStG,KAAK5D,MAAMC,MAAOoB,SAAUuC,KAAKxC,MAAMC,SAAU8D,MAAOvB,KAAKxC,MAAM+D,OAASvB,KAAKxC,MAAMkJ,sDAKtK1G,KAAKkF,gBAAgBlF,KAAKxC,MAAM8I,SAChCtG,KAAKpC,+DAGLoC,KAAKkF,gBAAgBlF,KAAKxC,MAAM8I,SAChCtG,KAAKpC,yBAxCUqE,iBAsDvBoE,GAASnE,aAAe,CACpBzE,UAAU,EACV6I,SAAS,GAGED,yCC3DTM,oCAmBkB1K,EAQAE,4KAzBpBC,MAAQ,CACJC,MAAO,MAGXuK,IAAMC,IAAMC,cAEZC,YAAcpK,EAAKa,MAAMuJ,YAAcpK,EAAKa,MAAMuJ,YAAc,SAAC1K,GAAD,OAAWA,KAE3EkK,eAAiB,SAACtJ,GACVN,EAAKP,MAAMC,QAAUY,EAAEE,OAAOd,QAC9BM,EAAKa,MAAMwJ,UACXrK,EAAKiB,gBAAgB,CAACvB,MAAOM,EAAKoK,YAAY9J,EAAEE,OAAOd,SAEvDM,EAAKI,SAAS,CAACV,MAAOY,EAAEE,OAAOd,YAIvC6I,iBAAoBjJ,EAMjB,GAN+B,SAACI,GAC3BM,EAAKa,MAAMwJ,gBAAuBtK,IAAVL,GAAiC,OAAVA,GAC/CJ,IAAcI,IACdJ,EAAYI,EACZM,EAAKI,SAAS,CAACV,eAIvBuB,iBAAoBzB,EAcjBQ,EAAKa,MAAMwJ,UAAYrK,EAAKa,MAAMnB,MAAQM,EAAKP,MAdhB,SAAC6K,GAC/B,IAAMC,EAAe,kBAAMvK,EAAKa,MAAMwJ,UAAYC,EAAatK,EAAKP,OAEpE,QAAuBM,IAAnBwK,MAAkCvK,EAAKa,MAAMwJ,WAAanJ,KAAKC,UAAU3B,KAAe0B,KAAKC,UAAUoJ,MAA3G,CACA/K,EAAY+K,IAJkC,IAMzCnJ,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CAV8C,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAW9C,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,GACIS,EAD+BN,EAAAnC,OACpBF,GAZ+B,MAAA4C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,gFAiBzC,IACElC,EAAS2D,KAAK5D,MAAdC,MACD8K,OAAiBzK,IAAVL,GAAiC,OAAVA,EAAiB,GAAMA,EAAMgB,SAAWhB,EAAMgB,WAAa,GACzFkE,EAAQzB,OAAO4E,OAAO,CAAC0C,SAAY,cAAepH,KAAKxC,MAAM+D,OACnE,OAEIrC,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,CAAiBgI,KAAMA,EAAMG,SAAUtH,KAAK4G,IAAK7I,SAAUiC,KAAKuG,eAAgBgB,QAASvH,KAAKxC,MAAM+J,QAAShG,MAAOA,EAAOK,UAAW5B,KAAKxC,MAAMoE,UAAWnE,SAAUuC,KAAKxC,MAAMC,uDAKrLuC,KAAKkF,gBAAgBlF,KAAKxC,MAAMnB,OAC3B2D,KAAKxC,MAAMwJ,WAAWhH,KAAKpC,+DAIhCoC,KAAKkF,gBAAgBlF,KAAKxC,MAAMnB,OAC3B2D,KAAKxC,MAAMwJ,WAAWhH,KAAKpC,yBA7DdqE,iBAsF1B0E,GAAYzE,aAAe,CACvB8E,WAAW,EACX3K,MAAO,GACPkL,QAAS,MACT9J,UAAU,GAGCkJ,UC7FTa,oCAQkBvL,4KAPpBG,MAAQ,CACJC,MAAOM,EAAKa,MAAMwI,gBAEtByB,cAAgB,SAACxK,GACbN,EAAKI,SAAS,CAACV,OAAQM,EAAKP,MAAMC,WAGtC6I,iBAAoBjJ,GAKjB,EAL+B,SAACI,GAC3BJ,IAAcI,IACdJ,EAAYI,EACZM,EAAKI,SAAS,CAACV,eAIvBuB,gBAAkB,WAAM,IACfG,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CALoB,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAMpB,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,EAC/BS,EAD+BN,EAAAnC,OACpByD,OAAO4E,OAAO,GAAI/H,EAAKP,SAPlB,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,8EAYpB,OAAOyB,KAAK5D,MAAMC,MACd6C,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,OAAO,SAASC,QAAS7H,KAAKyH,eAAxD,SACAvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQC,QAAQ,SAASC,OAAO,SAASC,QAAS7H,KAAKyH,eAAvD,yDAIJzH,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,+DAGLoC,KAAKkF,gBAAgBlF,KAAKxC,MAAMwI,cAChChG,KAAKpC,yBAtCaqE,iBAkD1BuF,GAAYtF,aAAe,CACvB8D,cAAc,GAEHwB,UCnDTM,8MACFC,WAAa,WAAM,IACRzH,EAAQ3D,EAAKa,MAAb8C,KACP,IAAItC,IAAME,IAAIC,MAAMmC,GACpB,OAAOA,EAAKZ,IAAI,SAAC9D,EAAQoM,GACrB,IAAMC,EAAS/I,EAAAC,EAAAC,cAAC8I,GAAD,CAAalC,aAAcpK,EAAOuM,mBAAoBpK,SAAUpB,EAAKa,MAAMO,SAAS,qBAApBpB,CAA0CqL,KACzH,OACI9I,EAAAC,EAAAC,cAAA,MAAIG,IAAKyI,GACL9I,EAAAC,EAAAC,cAAA,UAAK4I,EAAQ,GACb9I,EAAAC,EAAAC,cAAA,MAAIwC,UAAWhG,EAAOwM,sBAAwB,YAAc,MAAOxM,EAAOA,QAC1EsD,EAAAC,EAAAC,cAAA,UAAKxD,EAAOyM,gBACZnJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkJ,GAAD,CAAa7K,UAAU,EAAO8J,QAAS,IAAKlL,MAAOT,EAAO2M,oBAAqBxK,SAAUpB,EAAKa,MAAMO,SAAS,sBAApBpB,CAA2CqL,GAAQzG,MAAO,CAACiH,OAAQ,MAChKtJ,EAAAC,EAAAC,cAAA,MAAIqJ,MAAM,SAASC,OAAO,UAAUT,+EAOhD,OAEI/I,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACC,SAAO,EAACC,WAAS,EAACxH,MAAO,CAACyH,YAAe,UAChE9J,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,wBAAd,KACA1C,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,wCACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,MACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,sEACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,YAGRvJ,EAAAC,EAAAC,cAAA,aACKY,KAAK+H,sBAhCJ9F,iBAuDtB6F,GAAQ5F,aAAe,CACnB5B,KAAM,IAGKwH,8BC5DTmB,oCAMehN,4KALjBG,MAAQ,CACJ8M,GAAI,GACJC,KAAM,MAGVC,cAAiBnN,EAKd,GAL4B,SAACI,GACxB2B,IAAM2H,eAAetJ,IAAUJ,IAAcI,IAC7CJ,EAAYI,EACZM,EAAKI,SAAS,CAACmM,GAAI7M,SAG3BgN,eAAkB,SAACpN,GAAD,OAAe,SAACI,GAC1B2B,IAAMsL,QAAQjN,IAAUJ,IAAcI,IACtCJ,EAAYI,EACZM,EAAKI,SAAS,CAACoM,KAAM9M,MAHX,CAKf,MAQHkN,eAAiB,SAACtM,GACdN,EAAKI,SAAS,CAACmM,GAAIjM,EAAEE,OAAOd,WAEhCmN,iBAAmB,SAACvM,GAChBN,EAAKI,SAAS,CAACoM,KAAMlM,EAAEE,OAAOd,iFAe9B,IAAM0E,EAAcf,KAAKxC,MAAMuD,YAAcC,KAAIjF,yBAAsBW,EACjEuE,EAAejD,IAAME,IAAI8E,YAAYhD,KAAKxC,MAAMoC,OAASV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAenB,KAAKxC,MAAMoC,OAAwB,KAC3G6J,EAAgBvK,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAClBgE,KAAK,OAELpJ,MAAO2D,KAAKxC,MAAM0L,GAClBvH,YAAa3B,KAAKxC,MAAMmE,YAExB5D,SAAUiC,KAAKxC,MAAMkM,WACrBhE,SAAU1F,KAAKxC,MAAMkI,SACrBjI,SAAUuC,KAAKxC,MAAMC,SACrBmE,UAAWZ,KAAIkI,KAEbS,EAAiBzK,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACnBgE,KAAK,OAELpJ,MAAO2D,KAAKxC,MAAM2L,KAClBxH,YAAa3B,KAAKxC,MAAMmE,YAExB5D,SAAUiC,KAAKxC,MAAMoM,aACrBlE,SAAU1F,KAAKxC,MAAMkI,SACrBjI,SAAUuC,KAAKxC,MAAMC,SACrBmE,UAAWZ,KAAImI,OAEnB,OACIjK,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAWC,UAAWtB,KAAKxC,MAAM8D,UAAWE,QAAST,GAChDE,EACAwI,EAFL,MAEuBE,sGAxEX1H,iBAuG5BgH,GAAc/G,aAAe,CACzBtC,MAAO,GACPnC,UAAU,EACVsD,aAAa,GAEFkI,UCkKAY,oCApQS1N,EA0FR2N,EAAaC,4KA/FzB3N,MAAQ,CACJ4N,MAAO,GACPC,YAAY,KAGhBC,iBAAoB/N,EAUjB,GAV+B,SAAC6N,GAC/B,IAAIhM,IAAME,IAAIC,MAAM6L,IAA2B,IAAjBA,EAAMlN,OAApC,CACA,IACMqN,EADY/L,IAAU4L,GACDtK,IAAI,SAACgE,GAC5B,OAAO5D,OAAAsK,EAAA,EAAAtK,CAAA,GAAI4D,EAAX,CAAiB2G,cAAuC,OAAvB3G,EAAK2G,cAAyB,GAAK3G,EAAK2G,kBAEzE1M,IAAQxB,EAAWgO,KAEvBhO,EAAYgO,EACZxN,EAAKI,SAAS,CAACiN,MAAOG,UAG1BG,SAAW,SAACjO,GAER,OADY,IAAIkO,OAAO,aACZC,KAAKnO,MAEpBoO,cAAgB,SAACpO,GAEb,OADY,IAAIkO,OAAO,YACZC,KAAKnO,MAEpBqO,iBAAmB,SAACrO,GAEhB,OADY,IAAIkO,OAAO,mBACZC,KAAKnO,MAGpBsO,wBAA0B,SAAC3C,GAAD,OAAW,WACjCrL,EAAKI,SAAS,CAACiN,MAAOrN,EAAKP,MAAM4N,MAAMtK,IAAI,SAACgE,EAAMkH,GAAS,OAAOA,IAAQ5C,EAARlI,OAAAsK,EAAA,EAAAtK,CAAA,GAAoB4D,EAApB,CAA0BmH,aAAcnH,EAAKmH,cAA7C/K,OAAAsK,EAAA,EAAAtK,CAAA,GAAgE4D,EAAhE,CAAsEmH,aAAa,YAEzJnB,WAAa,SAAC1B,GAAD,OAAW,SAAC/K,GACrB,GAAMN,EAAK2N,SAASrN,EAAEE,OAAOd,QACzBM,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAO+C,QAAU9N,EAAEE,OAAOd,MACnCM,EAAKI,SAAS,CAACiN,MAAOc,SAG9BlB,aAAe,SAAC5B,GAAD,OAAW,SAAC/K,GACvB,GAAMN,EAAK8N,cAAcxN,EAAEE,OAAOd,QAC9BM,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAOqC,cAAgBpN,EAAEE,OAAOd,MACzCM,EAAKI,SAAS,CAACiN,MAAOc,SAG9BE,iBAAmB,SAAChD,GAAD,OAAW,SAAC/K,GAC3B,GAAIN,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAOiD,aAAaC,SAAWjO,EAAEE,OAAOd,MACjDM,EAAKI,SAAS,CAACiN,MAAOc,SAG9BK,gBAAkB,SAACnD,GAAD,OAAW,SAAC/K,GAC1B,GAAMN,EAAK+N,iBAAiBzN,EAAEE,OAAOd,QACjCM,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAOoD,SAAWnO,EAAEE,OAAOd,MACpCM,EAAKI,SAAS,CAACiN,MAAOc,SAG9BO,wBAA0B,SAACrD,GAAD,OAAW,SAAC/K,GAClC,GAAIN,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAOiD,aAAaK,YAAcrO,EAAEE,OAAOd,MACpDM,EAAKI,SAAS,CAACiN,MAAOc,SAG9BS,YAAc,SAACvD,GAAD,OAAW,SAAArI,GAAa,IAAXtD,EAAWsD,EAAXtD,MAAWmP,EACpB7O,EAAKa,MAAMiO,QAAQ7O,OAAO,SAACC,GAAU,OAAOA,EAAK6O,SAAWrP,IAAnEsP,EAD2B7L,OAAA8L,EAAA,EAAA9L,CAAA0L,EAAA,MAGlC,GAAI7O,EAAKP,MAAM4N,OAASrN,EAAKP,MAAM4N,MAAMhC,GAAQ,CAC7C,IAAM8C,EAAW1M,IAAUzB,EAAKP,MAAM4N,OACtCc,EAAS9C,GAAO6D,YAAcxP,EAC9ByO,EAAS9C,GAAO8D,cAAgBH,EAAII,SACpCpP,EAAKI,SAAS,CAACiN,MAAOc,SAI9BlN,gBAAmB,SAACzB,GAAD,OAAe,WAC9B,IAAIwB,IAAQxB,EAAWQ,EAAKP,OAA5B,CACAD,EAAYiC,IAAUzB,EAAKP,OAFS,IAI/B2B,EAAYpB,EAAKa,MAAjBO,SAIL,GAHIC,IAAMC,SAASF,KACfA,EAAW,CAACA,KAEZC,IAAME,IAAIC,MAAMJ,GAApB,CARoC,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IASpC,QAAA8B,EAAAC,EAAyBV,EAAzBW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,EAC/BS,EAD+BN,EAAAnC,OACpByD,OAAO4E,OAAO,GAAI/H,EAAKP,SAVF,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAArB,CAYhB,MACHyN,SAAYlC,EAST,GATsBC,EASlB,GAT+B,WAAM,IACjC0B,EAAW9O,EAAKa,MAAhBiO,QACP,OAAI5N,KAAKC,UAAUgM,KAAiBjM,KAAKC,UAAU2N,GAAkB1B,EACjE/L,IAAME,IAAIC,MAAMsN,GAAiB1B,GACrCD,EAAc2B,EACd1B,EAAW0B,EAAQ/L,IAAI,SAACiM,GACpB,MAAO,CAACtP,MAAOsP,EAAID,OAAQ9L,MAAO+L,EAAII,iBAI9CE,QAAU,SAACC,GACP,GAAc,OAAVA,QAA4BxP,IAAVwP,EAAqB,MAAO,GAClD,IAFiBC,GAEDxP,EAAKa,MAAMiO,SAAW,IAChB7O,OAAO,SAAC+O,GAC1B,OAAOA,GAAOA,EAAID,QAAUC,EAAID,SAAWQ,IAE/C,OANiBpM,OAAA8L,EAAA,EAAA9L,CAAAqM,EAAA,MAMNJ,UAAY,MAG3BK,QAAU,WACN,IAAMJ,EAAUrP,EAAKqP,UAErB,MAAO,CACHK,QAAS,KACTtB,QAAS,UACTuB,aAAc,GACdrB,aAAc,CACVC,SAAU,GACVI,YAAa,IAEjBT,aAAa,EACbO,SAAU,oBACVf,cAAe,GACfwB,YAZWG,EAAQ,GAAKA,EAAQ,GAAG3P,MAAQ,KAc3C+P,SAAS,EACTG,SAAS,MAGjBC,eAAiB,WACb,IAAMC,EAAerO,IAAUzB,EAAKP,MAAM4N,OACtChM,IAAME,IAAIC,MAAMsO,KACpBA,EAAaC,KAAK/P,EAAKyP,WACvBzP,EAAKI,SAAS,CAACiN,MAAOyC,QAE1BE,eAAiB,SAAC3E,GAAD,OAAW,WACxB,IAAMyE,EAAerO,IAAUzB,EAAKP,MAAM4N,OACtChM,IAAME,IAAIC,MAAMsO,KACpBA,EAAazE,GAAOuE,SAAU,EAC9B5P,EAAKI,SAAS,CAACiN,MAAOyC,SAI1BG,SAAW,WACP,IAAMtM,EAAO3D,EAAKP,MAAM4N,MACxB,IAAIhM,IAAME,IAAIC,MAAMmC,GAApB,CACA,IAAMuM,EAAe,GACfC,EAAe,GACfC,EAAapQ,EAAKqP,UAAU,GAAKrP,EAAKqP,UAAU,GAAG3P,MAAQ,GAsCjE,OArCAiE,EAAK0M,QAAQ,SAACtJ,EAAMsE,GAAU,IACrB+C,EAA8FrH,EAA9FqH,QAASK,EAAqF1H,EAArF0H,SAAUf,EAA2E3G,EAA3E2G,cAAeQ,EAA4DnH,EAA5DmH,YAAaI,EAA+CvH,EAA/CuH,aAAcY,EAAiCnI,EAAjCmI,YAAaO,EAAoB1I,EAApB0I,QAASG,EAAW7I,EAAX6I,QACxF,GAAKH,EAiBE,CACH,GAAIG,EAAS,OACb,IAAMU,EAAS/N,EAAAC,EAAAC,cAAC8N,GAAD,CAAehE,GAAI6B,EAAS5B,KAAMkB,EAAgBX,WAAY/M,EAAK+M,WAAW1B,GAAQ4B,aAAcjN,EAAKiN,aAAa5B,KACrI6E,EAAaH,KACTxN,EAAAC,EAAAC,cAAA,MAAIG,IAAKyI,GACL9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQC,QAAQ,SAASC,OAAO,SAASC,QAASlL,EAAKgQ,eAAe3E,IAAtE,WACJ9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+N,GAAD,CAAQjH,YAAU,EAACnF,aAAW,EAAC1E,MAAO4O,GAAgBA,EAAaC,SAAUnN,SAAUpB,EAAKqO,iBAAiBhD,MACjH9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqF,EAAD,CAAQjI,WAAYG,EAAKqP,UAAWhK,gBAAiB+K,EAAYhP,SAAUpB,EAAK4O,YAAYvD,GAAQ/H,SAAS,EAAOZ,aAAa,EAAO0B,aAAW,EAACc,WAAS,KACjK3C,EAAAC,EAAAC,cAAA,UAAK6N,GACL/N,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+N,GAAD,CAAQjH,YAAU,EAACnF,aAAW,EAAC1E,MAAO+O,EAAUrN,SAAUpB,EAAKwO,gBAAgBnD,MACnF9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+N,GAAD,CAAQjH,YAAU,EAACnF,aAAW,EAAC1E,MAAO4O,GAAgBA,EAAaK,YAAavN,SAAUpB,EAAK0O,wBAAwBrD,MAC3H9I,EAAAC,EAAAC,cAAA,MAAIqJ,MAAM,SAASC,OAAO,UACtBxJ,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAUC,MAAM,uBAAuB1I,SAAUpB,EAAKgO,wBAAwB3C,GAAQ1B,QAASuE,EAAatJ,MAAO,CAAC6L,UAAW,EAAGC,aAAc,YA7BlJ,CACV,IAAMJ,EAASpC,EACX3L,EAAAC,EAAAC,cAAC8N,GAAD,CAAehE,GAAI6B,EAAS5B,KAAMkB,EAAgBX,WAAY/M,EAAK+M,WAAW1B,GAAQ4B,aAAcjN,EAAKiN,aAAa5B,KACnG,KAAlBqC,EAAA,GAAAxK,OAA0BkL,GAA1B,GAAAlL,OAAwCkL,EAAxC,KAAAlL,OAAmDwK,GACxDyC,EAAaJ,KACTxN,EAAAC,EAAAC,cAAA,MAAIG,IAAKyI,GACL9I,EAAAC,EAAAC,cAAA,UAAK4I,EAAQ,GACb9I,EAAAC,EAAAC,cAAA,UAAK6L,GAAgBA,EAAaC,UAClChM,EAAAC,EAAAC,cAAA,UAAKzC,EAAKsP,QAAQJ,IAClB3M,EAAAC,EAAAC,cAAA,UAAK6N,GACL/N,EAAAC,EAAAC,cAAA,UAAKgM,GACLlM,EAAAC,EAAAC,cAAA,UAAK6L,GAAgBA,EAAaK,aAClCpM,EAAAC,EAAAC,cAAA,MAAIqJ,MAAM,SAASC,OAAO,UACtBxJ,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAUC,MAAM,uBAAuB1I,SAAUpB,EAAKgO,wBAAwB3C,GAAQ1B,QAASuE,EAAatJ,MAAO,CAAC6L,UAAW,EAAGC,aAAc,WAsB7JvN,OAAAC,EAAA,EAAAD,CAAI+M,EAAaS,WAAxBzN,OAAsCiN,6EAGtC,OACI5N,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,MAIbvO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,IACLvO,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,OAAO,QAAQrG,MAAO,CAAC8L,aAAc,OAAQxF,QAAS7H,KAAKwM,gBAArF,YACAtN,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACC,SAAO,EAACC,WAAS,EAACxH,MAAO,CAACyH,YAAe,UAChE9J,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,wBAAd,KACA1C,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,qDACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,OACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,MACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,OACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,sEACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,gBAGJvJ,EAAAC,EAAAC,cAAA,aACCY,KAAK4M,4DAa1B5M,KAAKkK,gBAAgBlK,KAAKxC,MAAM8C,mDAIhCN,KAAKkK,gBAAgBlK,KAAKxC,MAAM8C,MAChCN,KAAKpC,yBA5OOqE,iBCJdyL,8MACFC,OAAS,CACLnF,OAAO,EACPoF,QAAS,mFAGJ,IAAAvI,EACgDrF,KAAKxC,MAAnDO,EADFsH,EACEtH,SAAU8P,EADZxI,EACYwI,MAAOC,EADnBzI,EACmByI,IAAKC,EADxB1I,EACwB0I,KAAMC,EAD9B3I,EAC8B2I,KAAMC,EADpC5I,EACoC4I,SAEzC,OACI/O,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACE,WAAS,EAACxH,MAAO,CAACyH,YAAe,UACxD9J,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,4BACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,sBACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,wCACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,QACAvJ,EAAAC,EAAAC,cAAA,MAAIwC,UAAU,uBAAuB6G,MAAM,UAA3C,qFAGJvJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkJ,GAAD,CAAa7K,UAAU,EAAO8J,QAAQ,IAAIlL,MAAOwR,EAAO9P,SAAUA,EAAS,SAAUwD,MAAOvB,KAAK2N,UACrGzO,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkJ,GAAD,CAAa7K,UAAU,EAAO8J,QAAQ,IAAIlL,MAAOyR,EAAK/P,SAAUA,EAAS,OAAQwD,MAAOvB,KAAK2N,UACjGzO,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkJ,GAAD,CAAa7K,UAAU,EAAO8J,QAAQ,IAAIlL,MAAO0R,EAAMhQ,SAAUA,EAAS,QAASwD,MAAOvB,KAAK2N,UACnGzO,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkJ,GAAD,CAAa7K,UAAU,EAAO8J,QAAQ,IAAIlL,MAAO2R,EAAMjQ,SAAUA,EAAS,QAASwD,MAAOvB,KAAK2N,UACnGzO,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqF,EAAD,CAAQlD,MAAO,CAAC8L,aAAc,GAAIpN,SAAS,EAAOzD,WAlB9C,CAAC,CAACH,MAAO,QAASuD,MAAO,SAAU,CAACvD,MAAO,OAAQuD,MAAO,SAkBiBoC,gBAAiBiM,EAAUlQ,SAAUA,EAAS,yBA1B/HkE,iBA8C1ByL,GAAYxL,aAAe,CACvB2L,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,SAAU,IAGCP,UCsiBAQ,oCA7cIC,EAyTQjS,4KAvUvBE,MAAQ,CACJgS,MAAM,EACNC,QAAQ,EACRC,MAAO,GACPC,gBAAgB,EAChBC,cAAc,EACdC,MAAO,GACPC,cAAe,GACfC,mBAAmB,EACnBC,sBAAsB,EACtBC,QAAQ,EACRC,UAAW,GACXC,QAAS,MAEbC,YAAeb,EAEZ/P,IAAUzB,EAAKP,OAFc,WAC5BO,EAAKI,SAASqB,IAAU+P,QAU5Bc,YAAc,CACVC,YAAa,GACbC,QAAS,GACTC,QAAS,GACTpF,MAAO,MAEXqF,iBAAoB,SAAClB,GAAD,OAAkB,WAClCxR,EAAKsS,YAAc7Q,IAAU+P,IADb,CAEjB/P,IAAUzB,EAAKsS,gBAWlB/H,aAAe,CACXgI,YAAa,GACbC,QAAS,GACTC,QAAS,GACTpF,MAAO,GACPqE,QAAQ,KAEZiB,kBAAqB,SAACnB,GAAD,OAAkB,WACnCxR,EAAKuK,aAAe9I,IAAU+P,IADb,CAElB/P,IAAUzB,EAAKuK,iBAMlBqI,iBAAmB,WACf,MAAO,CACPT,UAAW,GACXC,QAAS,GACTS,UAAW,GACXC,eAAgB,OAMpBC,WAAa,CACTC,SAAU,YACVC,UAAW,IACXvT,MAAO,MAEXwT,gBAAmB,SAAC1B,GAAD,OAAkB,WACjCxR,EAAK+S,WAAatR,IAAU+P,IADb,CAEhB/P,IAAUzB,EAAK+S,eAIlBI,aAAe,CACXH,SAAU,UACVC,UAAW,IACXvT,MAAO,MAEX0T,kBAAqB,SAAC5B,GAAD,OAAkB,WACnCxR,EAAKmT,aAAe1R,IAAU+P,IADb,CAElB/P,IAAUzB,EAAKmT,iBAKlBE,SAAW,CACPnC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,SAAU,MAEdgC,cAAiB,SAAC9B,GAAD,OAAkB,WAC/BxR,EAAKqT,SAAW5R,IAAU+P,IADb,CAEd/P,IAAUzB,EAAKqT,aAGlBE,cAAgB,WACZvT,EAAK0S,mBACL1S,EAAK2S,oBACL3S,EAAKoT,oBACLpT,EAAKkT,kBACLlT,EAAKsT,gBACLtT,EAAKqS,gBAMThD,QAAU,KACVmE,qDAAiB,SAAA1N,EAAO2N,GAAP,IAAAC,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAhE,MAAA,cAAAgE,EAAAC,KAAA,EAAAD,EAAAhE,KAAA,EAESgC,IAAM0P,IAAIxM,EAAkB,CAC1CyM,OAAQ,CAACH,YAAaA,KAHjB,UAEHC,EAFGzN,EAAAE,MAKFxC,EAAQ+P,EAAR/P,MACGkD,SAND,CAAAZ,EAAAhE,KAAA,eAOL2B,QAAQC,IAAI,oCAAqCF,EAAM8P,GAPlDxN,EAAAG,OAAA,SAQE,IARF,cAAAH,EAAAG,OAAA,SAUFzC,GAVE,eAAAsC,EAAAC,KAAA,GAAAD,EAAAlC,GAAAkC,EAAA,SAYTrC,QAAQC,IAAI,wBAAyBoC,EAAAlC,GAAErD,YAZ9BuF,EAAAG,OAAA,SAaF,IAbE,yBAAAH,EAAAK,SAAAR,EAAAzC,KAAA,qEAiBjBwQ,WAAa,SAACC,GACV,GAAKzS,IAAMG,MAAMsS,GAEjB,OADYA,EAAU7T,OAAO,SAAC8G,GAAD,OAAUA,EAAKmH,cAAanL,IAAI,SAACgE,GAAD,OAAUA,EAAKqH,UACjE2F,KAAK,SAEpBC,WAAa,WACThU,EAAKI,SAAS,CAAEqR,MAAM,OAG1BwC,YAAc,WACVjU,EAAKuT,mBAETW,aAAe,SAACC,GACZ,IAAMC,EAAS,GAGf,OAFI/S,IAAME,IAAIiH,OAAO2L,EAAQ5B,YAAYM,YAAYuB,EAAOrE,KAAK,oFAC7D1O,IAAME,IAAIiH,OAAO2L,EAAQ3B,QAAQ6B,cAAcD,EAAOrE,KAAK,iJACxDqE,KAEXE,kCAAe,SAAAC,IAAA,IAAAH,EAAAV,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAAlC,GAAA,cAAAA,EAAAoC,KAAApC,EAAA7B,MAAA,UACLmS,EAASpU,EAAKkU,aAAalU,EAAKuK,eAClClJ,IAAMmT,cAAcJ,GAFb,CAAAtQ,EAAA7B,KAAA,eAGPwS,MAAML,EAAOL,KAAK,OAHXjQ,EAAAsC,OAAA,wBAAAtC,EAAAoC,KAAA,EAOPlG,EAAKI,SAAS,CAAC8R,QAAQ,IAPhBpO,EAAA7B,KAAA,EAiBWgC,IAAMC,KAAKmD,EAAgBrH,EAAKuK,cAjB3C,UAiBDmJ,EAjBC5P,EAAAqC,OAkBAxC,EAAQ+P,EAAR/P,MACEyQ,OAnBF,CAAAtQ,EAAA7B,KAAA,eAmBgB0B,EAAKyQ,OAAOL,KAAK,MAnBjC,QAoBP/T,EAAKI,SAAS,CAAC8R,QAAQ,IACvBtO,QAAQC,IAAI,cAAeF,EAAK+Q,QAC5B9N,OAAO+N,eACP/N,OAAO+N,iBAEP/Q,QAAQC,IAAI,qCAEhB+Q,WAAW,WAAO5U,EAAKiU,eAAgB,KA3BhCnQ,EAAA7B,KAAA,iBAAA6B,EAAAoC,KAAA,GAAApC,EAAAC,GAAAD,EAAA,SA6BPF,QAAQC,IAAI,UAAZC,EAAAC,IACA0Q,MAAK3Q,EAAAC,IACL/D,EAAKI,SAAS,CAAC8R,QAAQ,IA/BhB,yBAAApO,EAAAwC,SAAAiO,EAAAlR,KAAA,eAmCfwR,oBAAsB,SAACjS,GAAD,sBAAAkS,EAAA3R,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAApD,EAAAqD,KAAS,SAAAkP,EAAAC,GAAA,IAAAtV,EAAAgU,EAAAuB,EAAAnC,EAAA,OAAAlN,EAAApD,EAAAwD,KAAA,SAAA7B,GAAA,cAAAA,EAAA+B,KAAA/B,EAAAlC,MAAA,UAAQvC,EAARsV,EAAQtV,MACbM,EAAKuK,aAApBgI,YACK3P,GAAOlD,EACP,cAARkD,GAA+B,YAARA,GACvB5C,EAAKI,SAAL+C,OAAA+R,EAAA,EAAA/R,CAAA,GAAgBP,EAAMlD,IAEd,cAARkD,EANuB,CAAAuB,EAAAlC,KAAA,YAOvBjC,EAAKmV,gBAAgB,cAArBnV,CAAoC,CAACN,WACjC2B,IAAMgF,YAAY3G,GARC,CAAAyE,EAAAlC,KAAA,SASGjC,EAAKuK,aAApBgI,YACKO,eAAiB,GAC7B9S,EAAKI,SAAS,CAAC6R,sBAAsB,EAAMF,cAAe,KAXvC5N,EAAAlC,KAAA,wBAanBjC,EAAKI,SAAS,CAAC6R,sBAAsB,EAAMD,mBAAmB,IAb3C7N,EAAAlC,KAAA,GAcDjC,EAAKwT,eAAe9T,GAdnB,QAcbgU,EAdavP,EAAAgC,KAAA8O,EAeKvB,EAAjB7M,SAEPiM,GADKA,QAhBc,IAAAmC,EAeD,GAfCA,GAgBdnC,iBAC8C,GAC7B9S,EAAKuK,aAApBgI,YACKO,eAAiBA,EAC7B9S,EAAKI,SAAS,CAAC2R,cAAee,EAAgBb,sBAAsB,EAAMD,mBAAmB,IApB1E,yBAAA7N,EAAAmC,SAAAyO,EAAA1R,SAAT,gBAAA+R,GAAA,OAAAN,EAAAtO,MAAAnD,KAAAoD,YAAA,MAyBtB4O,sBAAwB,SAAC/U,GACCN,EAAKuK,aAApBgI,YACKO,eAAiBxS,EAAEE,OAAOd,MACtCM,EAAKI,SAAS,CAAC2R,cAAezR,EAAEE,OAAOd,WAE3CyV,gBAAkB,SAACvS,GAAD,OAAS,SAAA0S,GAAa,IAAX5V,EAAW4V,EAAX5V,MACPM,EAAKuK,aAAhBiI,QACC5P,GAAOlD,MAEnB6V,mBAAqB,SAAC3S,GAAD,OAAS,SAAA4S,GAAa,IAAX9V,EAAW8V,EAAX9V,MACrB8S,EAAWxS,EAAKuK,aAAhBiI,QACDA,EAAQiD,cAAajD,EAAQiD,YAAc,IACjDjD,EAAQiD,YAAY7S,GAAOlD,MAE/BgW,eAAiB,SAAC9S,GAAD,OAAS,SAACqL,GAAD,OAAS,SAAA0H,GAAa,IAAXjW,EAAWiW,EAAXjW,MAC1B+S,EAAWzS,EAAKuK,aAAhBkI,QACHA,EAAQxE,IAAQwE,EAAQxE,GAAKrL,KAASlD,IACtC+S,EAAQxE,GAAKrL,GAAOlD,QAG5BkW,kBAAoB,SAACvI,GACjB,GAAKhM,IAAMG,MAAM6L,GAAjB,CACA,IACIyE,EADQzE,EAAMpN,OAAO,SAAC8G,GAAD,OAAUA,EAAKmH,cAAgBnH,EAAK6I,UAAS7M,IAAI,SAACgE,GAAD,OAAUA,EAAKqH,UACzE2F,KAAK,MACjB/T,EAAKP,MAAMqS,QAAUA,GAAO9R,EAAKI,SAAS,CAAC0R,cAKnD+D,cAAgB,SAAAC,GAAa,IAAXzI,EAAWyI,EAAXzI,MACdA,EAAQA,EAAMtK,IAAI,SAACgE,GACf,OAAO5D,OAAAsK,EAAA,EAAAtK,CAAA,GAAI4D,EAAX,CAAiB2G,cAAsC,KAAvB3G,EAAK2G,cAAuB,KAAOnN,SAASwG,EAAK2G,mBAErF1N,EAAKuK,aAAa8C,MAAQA,EAC1BrN,EAAK4V,kBAAkB5V,EAAKuK,aAAa8C,UAE7C0I,oBAAsB,SAACnT,GAAD,OAAS,SAAAoT,GAAa,IAAXtW,EAAWsW,EAAXtW,MAC7B,QAAcK,IAAVL,GAAwBM,EAAKP,MAAMoS,aAAvC,CADwC,IAEjCW,EAAWxS,EAAKuK,aAAhBiI,QACFA,IAGAA,EAAQiD,cAAajD,EAAQiD,YAAc,IAC1CjD,EAAQiD,YAAYQ,OACtBzD,EAAQiD,YAAYQ,KAAOjW,EAAKqT,UAEpCb,EAAQiD,YAAYQ,KAAKrT,GAAOlD,QAGpCwW,sDAAkB,SAAAC,EAAOC,GAAP,IAAA1C,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAApU,MAAA,cAAAoU,EAAAnQ,KAAA,EAAAmQ,EAAApU,KAAA,EAEQgC,IAAM0P,IAAI3M,EAAc,CACtC4M,OAAQ,CAACwC,QAHH,UAEJ1C,EAFI2C,EAAAlQ,MAKHxC,EAAQ+P,EAAR/P,MACG6O,QANA,CAAA6D,EAAApU,KAAA,eAON2B,QAAQC,IAAI,0BAPNwS,EAAAjQ,OAAA,SAQC,IARD,cAAAiQ,EAAAjQ,OAAA,SAUHzC,GAVG,eAAA0S,EAAAnQ,KAAA,GAAAmQ,EAAAtS,GAAAsS,EAAA,SAYVzS,QAAQC,IAAI,yBAA0BwS,EAAAtS,GAAErD,YAZ9B2V,EAAAjQ,OAAA,SAaH,IAbG,yBAAAiQ,EAAA/P,SAAA6P,EAAA9S,KAAA,qEAgBlBiT,0DAAsB,SAAAC,EAAOH,GAAP,IAAA1C,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAAvU,MAAA,cAAAuU,EAAAtQ,KAAA,EAAAsQ,EAAAvU,KAAA,EAEIgC,IAAM0P,IAAI1M,EAAsB,CAC9C2M,OAAQ,CAACwC,QAHC,UAER1C,EAFQ8C,EAAArQ,MAKPxC,EAAQ+P,EAAR/P,MACG8O,QANI,CAAA+D,EAAAvU,KAAA,eAOV2B,QAAQC,IAAI,8BAPF2S,EAAApQ,OAAA,SAQH,IARG,cAAAoQ,EAAApQ,OAAA,SAUPzC,GAVO,eAAA6S,EAAAtQ,KAAA,GAAAsQ,EAAAzS,GAAAyS,EAAA,SAYd5S,QAAQC,IAAI,6BAA8B2S,EAAAzS,GAAErD,YAZ9B8V,EAAApQ,OAAA,SAaP,IAbO,yBAAAoQ,EAAAlQ,SAAAiQ,EAAAlT,KAAA,qEAgBtBoT,wDAAoB,SAAAC,EAAON,GAAP,IAAA1C,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAA1U,MAAA,cAAA0U,EAAAzQ,KAAA,EAAAyQ,EAAA1U,KAAA,EAEMgC,IAAM0P,IAAIzM,EAAoB,CAC5C0M,OAAQ,CAACwC,QAHD,UAEN1C,EAFMiD,EAAAxQ,MAKLxC,EAAQ+P,EAAR/P,MACG0J,MANE,CAAAsJ,EAAA1U,KAAA,eAOR2B,QAAQC,IAAI,4BAPJ8S,EAAAvQ,OAAA,SAQD,IARC,cAAAuQ,EAAAvQ,OAAA,SAULzC,GAVK,eAAAgT,EAAAzQ,KAAA,GAAAyQ,EAAA5S,GAAA4S,EAAA,SAYZ/S,QAAQC,IAAI,2BAA4B8S,EAAA5S,GAAErD,YAZ9BiW,EAAAvQ,OAAA,SAaL,IAbK,yBAAAuQ,EAAArQ,SAAAoQ,EAAArT,KAAA,qEAgBpBuT,kCAAe,SAAAC,IAAA,IAAAnD,EAAA/P,EAAA,OAAAiC,EAAApD,EAAAwD,KAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAA7U,MAAA,cAAA6U,EAAA5Q,KAAA,EAAA4Q,EAAA7U,KAAA,EAEWgC,IAAM0P,IAAIvM,EAAc,CACtCwM,OAAQ,KAHL,UAEDF,EAFCoD,EAAA3Q,MAKAxC,EAAQ+P,EAAR/P,MACG0L,QANH,CAAAyH,EAAA7U,KAAA,eAOH2B,QAAQC,IAAI,uBAPTiT,EAAA1Q,OAAA,SAQI,IARJ,cAAA0Q,EAAA1Q,OAAA,SAUAzC,GAVA,eAAAmT,EAAA5Q,KAAA,GAAA4Q,EAAA/S,GAAA+S,EAAA,SAYPlT,QAAQC,IAAI,sBAAuBiT,EAAA/S,GAAErD,YAZ9BoW,EAAA1Q,OAAA,SAaA,IAbA,yBAAA0Q,EAAAxQ,SAAAuQ,EAAAxT,KAAA,eAiBf0T,oBAAuBxX,EAIpB,GAJmC,WAClC,IAAMyX,EAAgB7T,OAAO4E,OAAO,GAAI/H,EAAK+S,WAAY,CAACrT,MAAOM,EAAKP,MAAM0S,YAE5E,OADKnR,IAAQgW,EAAezX,KAAaA,EAAayX,GAC/C,CAACzX,OAGZ0X,qBAAwB,SAAC1X,GAAD,OAAgB,WACpC,IAEM2X,EAAY,CAFI/T,OAAO4E,OAAO,GAAI/H,EAAK+S,WAAY,CAACrT,MAAOM,EAAKP,MAAM0S,YACpDhP,OAAO4E,OAAO,GAAI/H,EAAKmT,aAAc,CAACzT,MAAOM,EAAKP,MAAM2S,WAGhF,OADKpR,IAAQzB,EAAY2X,KAAY3X,EAAa2X,GAC3C3X,GALa,CAMrB,4EAEM,IAAA4X,EAAA9T,KACEwO,EAAgBxO,KAAK5D,MAArBoS,aADFuF,EAE0C/T,KAAKiP,YAA7CC,EAFF6E,EAEE7E,YAAaC,EAFf4E,EAEe5E,QAASC,EAFxB2E,EAEwB3E,QAASpF,EAFjC+J,EAEiC/J,MAChCgK,EAAW,WAAM,IAAAC,EACwB9E,GAAWA,EAAQiD,aAAejD,EAAQiD,YAAYQ,KAAOzD,EAAQiD,YAAYQ,KAAO,GACnI,MAAO,CAAC/E,MAFWoG,EACZpG,MACQC,IAFImG,EACLnG,IACMC,KAFDkG,EACAlG,KACOC,KAFPiG,EACMjG,KACOC,SAFbgG,EACYhG,UADlB,GA4CjB,OACI/O,EAAAC,EAAAC,cAAC8U,EAAA,EAAD,CAAO9F,KAAMpO,KAAK5D,MAAMgS,KAAM+F,OAAQnU,KAAK4Q,YAAahJ,OAAO,SAC3D1I,EAAAC,EAAAC,cAACgV,EAAA,EAAD,CAAaC,aAAW,GACpBnV,EAAAC,EAAAC,cAAC8U,EAAA,EAAMI,MAAP,KAJaR,EAAK1X,MAAMiS,OAAS,8FAAqB,sJAM1DnP,EAAAC,EAAAC,cAACmV,EAAA,EAAD,CAAW3S,UAAWwD,IAAQtJ,WA5C7BgY,EAAK1X,MAAMgS,KACX0F,EAAK1X,MAAMoS,aAEZtP,EAAAC,EAAAC,cAACgC,EAAA,SAAD,KACIlC,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACoV,GAAD,CAAQzW,SAAU+V,EAAKtC,oBAAoB,aAAcxP,gBAAiBkN,EAAYJ,UAAWrR,UAAW+Q,KACxHtP,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACqV,GAAD,CAAM1W,SAAU+V,EAAKtC,oBAAoB,WAAYxP,gBAAiBkN,EAAYH,QAASnS,OAAQkX,EAAKJ,qBAAsBjW,UAAW+Q,KACrJtP,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACsV,GAAD,CAAQ3W,SAAU+V,EAAKtC,oBAAoB,aAAcxP,gBAAiBkN,EAAYM,UAAW5S,OAAQkX,EAAKF,uBAAwBnW,UAAW+Q,KAC7JtP,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACuV,GAAD,CAAWrT,UAAU,gBAAgB7D,SAAUqW,EAAK1X,MAAMwS,uBAAyBJ,EAAczQ,SAAU+V,EAAK9B,sBAAuBrQ,YAAY,2GAAsBtF,MAAOyX,EAAK1X,MAAMsS,cAAe9O,MAAM,qHAEhOV,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACwV,GAAD,CAAS7W,SAAU+V,EAAKhC,gBAAgB,eAAgB9P,gBAAiBmN,EAAQ6B,eAC7F9R,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACyV,GAAD,CAAU9W,SAAU+V,EAAKhC,gBAAgB,eAAgB9P,gBAAiBmN,EAAQ2F,eAC9F5V,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC2V,GAAD,CAAUhX,SAAU+V,EAAKhC,gBAAgB,eAAiB9P,gBAAiBmN,EAAQ6F,eAC/F9V,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC6V,GAAD,CAAO3T,UAAU,QAAQvD,SAAU+V,EAAKhC,gBAAgB,qBAAsB9L,aAAcmJ,EAAQ+F,kBAAmBtV,MAAM,wDAE7IV,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC6V,GAAD,CAAO3T,UAAU,QAAQgE,cAAc,OAAOC,UAAU,KAAKxH,SAAU+V,EAAKhC,gBAAgB,oBAAqB9L,aAAcmJ,EAAQgG,iBAAkBvV,MAAM,IAAI8F,UAAQ,KACvLxG,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC6V,GAAD,CAAO3T,UAAU,WAAWgE,cAAc,OAAOC,UAAU,SAASxH,SAAU+V,EAAKhC,gBAAgB,wBAAyB9L,aAAcmJ,EAAQiG,qBAAsBxV,MAAM,OAC1LV,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC6V,GAAD,CAAO3T,UAAU,WAAWgE,cAAc,OAAOC,UAAU,WAAWxH,SAAU+V,EAAK5B,mBAAmB,YAAalM,aAAcmJ,EAAQiD,aAAejD,EAAQiD,YAAY3O,SAAU7D,MAAM,OAC1MV,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAAC+N,GAAD,CAAQzH,UAAQ,EAACpE,UAAU,eAAegE,cAAc,OAAOC,UAAU,gBAAgBxH,SAAU,aAAQ6B,MAAM,IAAIvD,MAAOyX,EAAK1X,MAAMqS,UAEvJvP,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACiW,GAAD,CAAU/T,UAAU,gBAAgBvD,SAAU+V,EAAKhC,gBAAgB,eAAgBnQ,YAAY,yIAA2BqE,aAAcmJ,EAAQmG,YAAa1V,MAAM,uIAEnLV,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KAAKrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GAAGvO,EAAAC,EAAAC,cAACmW,GAAD,CAAU9O,MAAM,wIAA0B1I,SAAU+V,EAAKhC,gBAAgB,cAAexL,QAAS6I,EAAQqG,YAAzG,2IACjBtW,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,IAAIvO,EAAAC,EAAAC,cAACqW,GAAD,CAASnV,KAAM8O,EAASrR,SAAU+V,EAAKzB,mBAExDnT,EAAAC,EAAAC,cAACsW,GAAD,CAAOpV,KAAM0J,EAAOyB,QAASqI,EAAK9H,QAASjO,SAAU+V,EAAKtB,gBAC1DtT,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,IACLvO,EAAAC,EAAAC,cAACuW,GAAD7V,OAAA4E,OAAA,GAAiBsP,EAAjB,CAA0BjW,SAAU+V,EAAKpB,0BA/BpBxT,EAAAC,EAAAC,cAAA,MAAIqJ,MAAM,UAAV,4FADR,MA+CzBvJ,EAAAC,EAAAC,cAACwW,EAAA,EAAD,KACI1W,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACIrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GACLvO,EAAAC,EAAAC,cAAA,MAAIqJ,MAAM,SAASlH,MAAO,CAACiH,OAAQ,IAAKxI,KAAK5D,MAAMyS,OAAS,uGAAyB,KAEzF3P,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAKC,GAAI,GACLvO,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQG,QAAS7H,KAAK4Q,YAAajJ,QAAQ,SAASlK,SAAUuC,KAAK5D,MAAMyS,QAAzE,wCACA3P,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAQG,QAAS7H,KAAKiR,aAActJ,QAAQ,UAAUlK,SAAUuC,KAAK5D,MAAMyS,QAA3E,6NAQpBtL,OAAOsS,cAAgB,SAAC9C,GACpB+C,EAAK/Y,SAAS,CACVqR,MAAM,EACNE,MAAOyE,EACP1E,QAAQ,EACRG,cAAc,KAGtBjL,OAAOwS,gBAAkB,WACrBD,EAAK/Y,SAAS,CACVqR,MAAM,EACNE,MAAO,GACPD,QAAQ,EACRG,cAAc,qSAMgCxO,KAAK5D,MAApDkS,UAAOD,WAAQG,iBAAcD,mBAC9BF,IAAUC,GAAUE,GAAiBD,0BACvCvO,KAAKjD,SAAS,CAACwR,gBAAgB,sBAGHyH,QAAQC,IAAI,CAChCjW,KAAK6S,gBAAgBvE,GACrBtO,KAAKiT,oBAAoB3E,GACzBtO,KAAKoT,kBAAkB9E,GACvBtO,KAAKuT,2BAJH2C,uBAM6CA,KAA3C/G,eAAWC,eAAWpF,aAASgC,eACnCkD,EAAc,IACdC,IAAWA,EAAQiB,8CACKpQ,KAAKmQ,eAAehB,EAAQiB,qBAA9C+F,WACkBA,EAAjB3S,SACP0L,EAA4E,CAACM,WAA9D4G,aADG,MACD5G,UAAuET,QAApBqH,EAAxCrH,QAAqED,UAA7BsH,EAA/BtH,UAAuEW,eAAxC2G,EAApB3G,wBAEpDzP,KAAKiP,YAALnP,OAAAsK,EAAA,EAAAtK,CAAA,GAAuBE,KAAKiP,YAA5B,CAAyCE,UAASC,UAASpF,QAAOkF,gBAClElP,KAAKgM,QAAUA,EACfhM,KAAKkH,aAALpH,OAAAsK,EAAA,EAAAtK,CAAA,GACOE,KAAKkH,aADZ,CAEIgI,YAAa9Q,IAAU8Q,GACvBC,QAAS/Q,IAAU+Q,GACnBC,QAAShR,IAAUgR,GACnBpF,MAAO5L,IAAU4L,KAErBhK,KAAKjD,SAAS,CAACwR,gBAAgB,EAAOC,cAAc,sDAEpDjO,QAAQC,IAAI,yBAA0B6V,EAAA3V,GAAErD,gDAGrCgR,GAAWG,GAAiBD,0BACnCvO,KAAKjD,SAAS,CAACwR,gBAAgB,cACPvO,KAAKuT,uBAAvB2C,SACClK,EAAWkK,EAAXlK,QACPhM,KAAKgM,QAAUA,EACfhM,KAAKiP,YAAYC,YAAclP,KAAKuP,mBACpCvP,KAAKkH,aAAagI,YAAclP,KAAKuP,mBACrCvP,KAAKkH,aAAamH,QAAS,EAC3BrO,KAAKjD,SAAS,CAACwR,gBAAgB,EAAOC,cAAc,sCAxB7B,IAAA4H,kFA9iBPE,aCXRC,QACW,cAA7BhT,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS+S,MACvB,2DCXNC,IAASC,OAAOxX,EAAAC,EAAAC,cAACuX,GAAD,MAAmBC,SAASC,eAAe,gBD0HrD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCElInBvb,EAAAC,QAAA,CAAkBE,oBAAA,mCAAAqb,QAAA,uBAAAlO,GAAA,uCAAAC,KAAA,8DCAlBvN,EAAAC,QAAA,CAAkBE,oBAAA,mCAAAqb,QAAA,uBAAAtV,KAAA,8DCAlBlG,EAAAC,QAAA,CAAkBE,oBAAA,mCAAAqb,QAAA,uBAAAtV,KAAA","file":"static/js/main.8a21327a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"style_modalBody__2dIVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__2exhN\"};","import React, { PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FormControl, ControlLabel, FormGroup} from 'react-bootstrap'\r\nimport check from 'check-types'\r\nimport axios from \"axios\"\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport isEqual from 'lodash/isEqual'\r\nimport css from \"./style.module.css\"\r\n\r\nclass Select extends PureComponent {\r\n\r\n    state = {\r\n        value: '',\r\n        isLoading: false,\r\n        optionsInvalidate: true,\r\n    }\r\n    optionList = []\r\n\r\n    setDefaultSelected = ((prevValue) => (value) => {\r\n        if (value === undefined || value === null || this.state.optionsInvalidate || this.state.isLoading) return\r\n        if (prevValue === value) return\r\n        prevValue = value\r\n        if (this.optionList.filter((item) => item.value === value).length === 0) return\r\n        if (this.state.value === value) return\r\n        this.setState({value: prevValue})\r\n    })('')\r\n\r\n    handleChange = (e) => {\r\n        let value = parseInt(e.target.value)\r\n        if (!isNaN(value) && value.toString && value.toString() === e.target.value) {\r\n            this.setState({value})\r\n        }  else {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n    defaultSelectedValue = () => {\r\n        return this.optionList.length === 1 ? this.optionList[0].value : ''\r\n    }\r\n\r\n    checkSelected = () => {\r\n        if (this.state.isLoading || this.props.disabled) return\r\n        if (this.optionList.filter((item) => item.value === this.state.value).length === 0) this.setState({value: this.defaultSelectedValue()})\r\n    }\r\n    checkFilter = ((prevFilter) => () => {\r\n        const {filter} = this.props\r\n        if (isEqual(prevFilter, filter)) return\r\n        prevFilter = filter\r\n        return this.setState({optionsInvalidate: true})\r\n    })(this.props.filter)\r\n\r\n\r\n    invokeListeners = ((prevState) => () => {\r\n        if (JSON.stringify(this.state) === JSON.stringify(prevState)) return\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        prevState = cloneDeep(this.state)\r\n        for (const subscriber of onChange) {\r\n            subscriber(prevState)\r\n        }\r\n    })([])\r\n\r\n    async updateIfNeeded() {\r\n\r\n        const {isAsync, disabled} = this.props\r\n        const {isLoading, optionsInvalidate} = this.state\r\n\r\n        if (isLoading || disabled) return\r\n        this.checkFilter()\r\n        if (!optionsInvalidate) return\r\n        if (isAsync) {\r\n            this.setState({isLoading: true})\r\n            this.optionList = await this.updateRemoteOptionList()\r\n        } else {\r\n            this.optionList = this.updateLocalOptionList()\r\n        }\r\n        this.setState({isLoading: false, optionsInvalidate: false})\r\n    }\r\n\r\n    async updateRemoteOptionList() {\r\n        const {remoteDataFetch = this.remoteDataFetchDefault} = this.props\r\n        try {\r\n            const data = await remoteDataFetch(this.props.filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error in Select: ', error)\r\n        }\r\n\r\n\r\n    }\r\n    updateLocalOptionList() {\r\n        return this.props.optionList\r\n    }\r\n\r\n    async remoteDataFetchDefault() {\r\n        const {remoteSourceUrl, filter=[]} = this.props\r\n        try {\r\n            const {data} = await axios.post(remoteSourceUrl, filter)\r\n            return check.array(data) ? data : []\r\n        } catch (error) {\r\n            console.log('error: ', error)\r\n        }\r\n    }\r\n\r\n    buildOptionList = () => {\r\n        const {isLoading} = this.state\r\n        if (isLoading) return <option value={null}>Loading...</option>\r\n\r\n        const emptyOption = <option value={this.props.emptyValue} key='empty'>{this.props.emptyLabel}</option>\r\n        const optionsSet = this.optionList.map(\r\n            ({value, label}, key) => {\r\n                return <option value={value} key={key}>{label}</option>\r\n            })\r\n        if (this.optionList.length === 1) {\r\n            return optionsSet\r\n        } else {\r\n            return this.props.emptyOption ? [emptyOption, ...optionsSet] : optionsSet\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {value} = this.state\r\n        const controlLabel = check.string(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        return (\r\n            <Fragment>\r\n                <FormGroup controlId={this.props.controlId} style={this.props.style} bsClass={clearMargin}>\r\n                    {controlLabel}\r\n                    <FormControl\r\n                        onChange={this.handleChange}\r\n                        componentClass=\"select\"\r\n                        placeholder=\"select item\"\r\n                        value={value}\r\n                        disabled={this.props.disabled}\r\n                        className={this.props.smallSize ? css.size : undefined}\r\n                    >\r\n                        {this.buildOptionList()}\r\n                    </FormControl>\r\n                </FormGroup>\r\n            </Fragment>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n    }\r\n    async componentDidUpdate() {\r\n        await this.updateIfNeeded()\r\n        this.setDefaultSelected(this.props.defaultSelected)\r\n        this.checkSelected()\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * isAsync - if true, will be used  getDataUrl to get options list. optionList parameter will be ignored\r\n * onChange - function or array of functions, that will be invoke on state change\r\n */\r\nSelect.propTypes = {\r\n    controlId: PropTypes.string,\r\n    //local option list if isAsync = false\r\n    optionList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            value: PropTypes.oneOfType([\r\n                PropTypes.number,\r\n                PropTypes.string\r\n            ]),\r\n            label: PropTypes.string\r\n        }\r\n    )),\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    emptyOption: PropTypes.bool, //add or not empty option into list\r\n    emptyValue: PropTypes.string,\r\n    emptyLabel: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    isAsync: PropTypes.bool,\r\n    remoteSourceUrl: PropTypes.string,\r\n    remoteDataFetch: PropTypes.func,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    })),\r\n    style: PropTypes.object,\r\n    clearMargin: PropTypes.bool,\r\n    smallSize: PropTypes.bool\r\n}\r\nSelect.defaultProps = {\r\n    emptyOption: true,\r\n    optionList: [],\r\n    isAsync: false,\r\n    onChange: [],\r\n    emptyValue: '',\r\n    emptyLabel: '<Не выбрано>',\r\n    filter: [],\r\n    selected: ''\r\n}\r\n\r\nexport default Select\r\n","import axios from 'axios'\r\nimport check from 'check-types'\r\n\r\nconst RemoteDataProvider = (url, key) => async function (filter) {\r\n    try {\r\n        const {data} = await axios.post(url, filter)\r\n        return data[key].filter(item => {\r\n            return check.not.emptyString(item.value)\r\n        })\r\n    } catch (error) {\r\n        console.log('error: ', error)\r\n        return [{\r\n            value: 'fetchDataError',\r\n            label: 'Ошибка запроса данных'\r\n        }]\r\n    }\r\n}\r\n\r\nexport default RemoteDataProvider","const DEVELOPED_BASE_URL = 'netcmdb-loc.rs.ru:8082'\r\nconst BASE_URL = (() => {\r\n    const protocol = window.location.protocol\r\n    const hostname = window.location.hostname\r\n    const port = window.location.port\r\n    const developMode = hostname === 'localhost'\r\n    return developMode ? `${protocol}//${DEVELOPED_BASE_URL}` : `${protocol}//${hostname}${port==='' ? '' : ':'}${port}`\r\n})()\r\nexport const DEV_DATA_URL = `${BASE_URL}/api/getDevData.json`\r\nexport const DEV_MODULES_DATA_URL = `${BASE_URL}/api/getDevModulesData.json`\r\nexport const DEV_PORTS_DATA_URL = `${BASE_URL}/api/getDevPortsData.json`\r\nexport const DEV_LOCATION_URL = `${BASE_URL}/api/getDevLocation.json`\r\nexport const VRF_LIST_URL= `${BASE_URL}/api/getVrfList.json`\r\nexport const DEV_SUBMIT_URL = `${BASE_URL}/api/saveDev.json`\r\nexport const REGIONS_URL = `${BASE_URL}/api/getRegions.json`\r\nexport const CITIES_URL = `${BASE_URL}/api/getCities.json`\r\nexport const OFFICES_URL = `${BASE_URL}/api/getOffices.json`\r\nexport const DEV_TYPES = `${BASE_URL}/api/getDevTypes.json`\r\nexport const PLATFORMS = `${BASE_URL}/api/getPlatforms.json`\r\nexport const SOFTWARE_LIST = `${BASE_URL}/api/getSoftwareList.json`\r\nconsole.log(\"BASE API URL\", BASE_URL)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {OFFICES_URL} from '../../constants'\r\n\r\nclass Office extends PureComponent {\r\n\r\n    optionListUpdater = RemoteDataProvider(OFFICES_URL, 'offices')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.optionListUpdater} />\r\n    }\r\n}\r\n\r\n\r\nOffice.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nOffice.defaultProps = {\r\n    label: 'Офис',\r\n    controlId: 'officeSelector',\r\n}\r\n\r\nexport default Office\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import check from 'check-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {REGIONS_URL} from '../../constants'\r\n\r\nclass Region extends PureComponent {\r\n\r\n    optionListUpdater = RemoteDataProvider(REGIONS_URL, 'regions')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.optionListUpdater} />\r\n    }\r\n}\r\n\r\nRegion.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nRegion.defaultProps = {\r\n    label: 'Регион',\r\n    controlId: 'regionSelector',\r\n}\r\nexport default Region\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {CITIES_URL} from '../../constants'\r\n\r\n\r\nclass City extends PureComponent {\r\n\r\n    optionListUpdater = RemoteDataProvider(CITIES_URL, 'cities')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.optionListUpdater} />\r\n    }\r\n}\r\n\r\n\r\nCity.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nCity.defaultProps = {\r\n    label: 'Город',\r\n    controlId: 'citySelector',\r\n    // filter: {\r\n    //     accessor: 'region_id',\r\n    //     statement: '',\r\n    //     value: ''\r\n    // }\r\n}\r\n\r\nexport default City\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {DEV_TYPES} from '../../constants'\r\n\r\nclass DevType extends PureComponent {\r\n\r\n    optionListUpdater = RemoteDataProvider(DEV_TYPES, 'devTypes')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.optionListUpdater} />\r\n    }\r\n}\r\n\r\n\r\nDevType.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nDevType.defaultProps = {\r\n    label: 'Тип(роль)',\r\n    controlId: 'devTypeSelector',\r\n}\r\n\r\nexport default DevType\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {PLATFORMS} from '../../constants'\r\n\r\nclass Platform extends PureComponent {\r\n\r\n    updateOptionList = RemoteDataProvider(PLATFORMS, 'platforms')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.updateOptionList} />\r\n    }\r\n}\r\n\r\n\r\nPlatform.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nPlatform.defaultProps = {\r\n    label: 'Платформа',\r\n    controlId: 'platformSelector',\r\n}\r\n\r\nexport default Platform\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from '../Base/Select'\r\nimport RemoteDataProvider from '../Base/RemoteDataProvider'\r\nimport {SOFTWARE_LIST} from '../../constants'\r\n\r\nclass Software extends PureComponent {\r\n\r\n    optionListUpdater = RemoteDataProvider(SOFTWARE_LIST, 'softwareList')\r\n    render() {\r\n        return <Select {...this.props} isAsync remoteDataFetch={this.optionListUpdater} />\r\n    }\r\n}\r\n\r\n\r\nSoftware.propTypes = {\r\n    controlId: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    defaultSelected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    filter: PropTypes.arrayOf(PropTypes.shape({\r\n        accessor: PropTypes.string,\r\n        statement: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ])\r\n    }))\r\n}\r\nSoftware.defaultProps = {\r\n    label: 'ПО',\r\n    controlId: 'softwareSelector',\r\n}\r\n\r\nexport default Software\r\n","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport custCss from './style.module.css'\r\nimport {FormGroup, FormControl, ControlLabel, InputGroup} from 'react-bootstrap'\r\n\r\nclass Input extends PureComponent {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    setDefaultValue = ((prevValue) => (value) => {\r\n        if ((check.string(value) || check.number(value)) && prevValue !== value) {\r\n            prevValue = value\r\n            this.setState({value})\r\n        }\r\n    })('')\r\n\r\n    handleChange = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n\r\n    invokeListeners = () => {\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(Object.assign({}, this.state))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? custCss.formGroupZeroMargin : undefined\r\n        const {addOnPosition, addOnText} = this.props\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        const formControl = <FormControl\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            style={this.props.style}\r\n        />\r\n        if (addOnPosition && check.nonEmptyString(addOnText)) {\r\n            const leftAddOn = this.props.addOnPosition && this.props.addOnPosition === 'left' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            const rightAddOn = this.props.addOnPosition && this.props.addOnPosition === 'right' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        <InputGroup>\r\n                            {leftAddOn}\r\n                            {formControl}\r\n                            {rightAddOn}\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        {formControl}\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n    componentDidUpdate() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\nInput.propTypes = {\r\n    label: PropTypes.string,\r\n    controlId: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    defaultValue: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    addOnPosition: PropTypes.oneOf(['left', 'right']),\r\n    addOnText: PropTypes.string,\r\n    clearMargin: PropTypes.bool\r\n}\r\nInput.defaultProps = {\r\n    label: '',\r\n    disabled: false,\r\n}\r\nexport default Input\r\n\r\n","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport css from './style.module.css'\r\nimport {FormGroup, FormControl, ControlLabel, InputGroup} from 'react-bootstrap'\r\n\r\nclass Input2 extends PureComponent {\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const {addOnPosition, addOnText} = this.props\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        const formControl = <FormControl\r\n            type=\"text\"\r\n            value={this.props.value}\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.props.onChange}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            className={this.props.customSize ? css.size : undefined}\r\n        />\r\n        if (addOnPosition && check.nonEmptyString(addOnText)) {\r\n            const leftAddOn = this.props.addOnPosition && this.props.addOnPosition === 'left' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            const rightAddOn = this.props.addOnPosition && this.props.addOnPosition === 'right' ? <InputGroup.Addon>{this.props.addOnText}</InputGroup.Addon> : null\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        <InputGroup>\r\n                            {leftAddOn}\r\n                            {formControl}\r\n                            {rightAddOn}\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                        {controlLabel}\r\n                        {formControl}\r\n                    </FormGroup>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n}\r\n\r\nInput2.propTypes = {\r\n    customSize: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    controlId: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    addOnPosition: PropTypes.oneOf(['left', 'right']),\r\n    addOnText: PropTypes.string,\r\n    clearMargin: PropTypes.bool\r\n}\r\nInput2.defaultProps = {\r\n    disabled: false,\r\n    clearMargin: true\r\n}\r\nexport default Input2\r\n\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport {FormControl, FormGroup, ControlLabel} from 'react-bootstrap'\r\n\r\nclass TextArea extends PureComponent {\r\n    state = {\r\n        value: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n    invokeListeners = () => {\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(Object.assign({}, this.state))\r\n        }\r\n    }\r\n    setDefaultValue = ((prevValue) => (value) => {\r\n        if (value === undefined || value === null) return\r\n        if (prevValue === value) return\r\n        prevValue = value\r\n        this.setState({value})\r\n        // if (check.nonEmptyString(value) && prevValue !== value) {\r\n        //     prevValue = value\r\n        //     this.setState({value})\r\n        // }\r\n    })('')\r\n\r\n    render() {\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        return (\r\n            <FormGroup controlId=\"formControlsTextarea\">\r\n                {controlLabel}\r\n                <FormControl componentClass=\"textarea\" placeholder={this.props.placeholder} onChange={this.handleChange} value={this.state.value} />\r\n            </FormGroup>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n    componentDidUpdate() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\nTextArea.propTypes = {\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    controlId: PropTypes.string,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    placeholder: PropTypes.string\r\n}\r\nTextArea.defaultProps = {\r\n}\r\n\r\nexport default TextArea","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport {FormControl, FormGroup, ControlLabel} from 'react-bootstrap'\r\n\r\nclass TextArea2 extends PureComponent {\r\n\r\n    render() {\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        return (\r\n            <FormGroup controlId=\"formControlsTextarea\">\r\n                {controlLabel}\r\n                <FormControl componentClass=\"textarea\" placeholder={this.props.placeholder} onChange={this.props.onChange} value={this.props.value} disabled={this.props.disabled} />\r\n            </FormGroup>\r\n        )\r\n    }\r\n    componentDidMount() {}\r\n    componentDidUpdate() {}\r\n}\r\n\r\nTextArea2.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    controlId: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    placeholder: PropTypes.string\r\n}\r\nTextArea2.defaultProps = {\r\n}\r\n\r\nexport default TextArea2","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from \"check-types\"\r\nimport {Checkbox} from \"react-bootstrap\"\r\n\r\nclass CheckBox extends PureComponent {\r\n    state = {\r\n        value: this.props.checked\r\n    }\r\n\r\n    handleOnChange = () => {\r\n        this.setState({value: !this.state.value})\r\n    }\r\n\r\n\r\n    setDefaultValue = ((prevState) => (value) => {\r\n        if (prevState !== value) {\r\n            prevState = value\r\n            this.setState({value})\r\n        }\r\n    })(this.props.checked)\r\n\r\n    invokeListeners = () => {\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(Object.assign({}, this.state))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Checkbox title={this.props.title} onChange={this.handleOnChange} checked={this.state.value} disabled={this.props.disabled} style={this.props.style} >{this.props.children}</Checkbox>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultValue(this.props.checked)\r\n        this.invokeListeners()\r\n    }\r\n    componentDidUpdate() {\r\n        this.setDefaultValue(this.props.checked)\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\nCheckBox.propTypes = {\r\n    checked: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    style: PropTypes.object,\r\n}\r\nCheckBox.defaultProps = {\r\n    disabled: false,\r\n    checked: false\r\n}\r\n\r\nexport default CheckBox\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from \"check-types\"\r\nimport ContentEditable from \"react-contenteditable\"\r\n\r\nclass EditableTag extends PureComponent {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    formatValue = this.props.formatValue ? this.props.formatValue : (value) => value\r\n\r\n    handleOnChange = (e) => {\r\n        if (this.state.value === e.target.value) return\r\n        if (this.props.stateless) {\r\n            this.invokeListeners({value: this.formatValue(e.target.value)})\r\n        } else {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n\r\n    setDefaultValue = ((prevValue) => (value) => {\r\n        if (this.props.stateless || value === undefined || value === null) return\r\n        if (prevValue !== value) {\r\n            prevValue = value\r\n            this.setState({value})\r\n        }\r\n    })('')\r\n\r\n    invokeListeners = ((prevState) => (eventValue) => {\r\n        const currentState = () => this.props.stateless ? eventValue : this.state\r\n\r\n        if (currentState() === undefined || (!this.props.stateless && JSON.stringify(prevState) === JSON.stringify(currentState()))) return\r\n        prevState = currentState()\r\n\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(prevState)\r\n        }\r\n    })(this.props.stateless ? this.props.value : this.state)\r\n\r\n\r\n    render() {\r\n        const {value} = this.state\r\n        const html = value === undefined || value === null ? '' : (value.toString ? value.toString() : '')\r\n        const style = Object.assign({'wordWrap': 'break-word'}, this.props.style)\r\n        return (\r\n\r\n            <ContentEditable html={html} innerRef={this.ref} onChange={this.handleOnChange} tagName={this.props.tagName} style={style} className={this.props.className} disabled={this.props.disabled} />\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultValue(this.props.value)\r\n        if (!this.props.stateless) this.invokeListeners()\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        this.setDefaultValue(this.props.value)\r\n        if (!this.props.stateless) this.invokeListeners()\r\n    }\r\n}\r\n\r\nEditableTag.propTypes = {\r\n    stateless: PropTypes.bool,\r\n    /**\r\n     * in stateless mode value define component's state but in stateful mode it's default value and set up only once\r\n     */\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    /**\r\n     * returned value will be pass to external onChange functions and written in inner state\r\n     * @param string value\r\n     * @return (string|number|null)\r\n     */\r\n    formatValue: PropTypes.func,\r\n    tagName: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n}\r\nEditableTag.defaultProps = {\r\n    stateless: false,\r\n    value: '',\r\n    tagName: 'div',\r\n    disabled: true,\r\n}\r\n\r\nexport default EditableTag\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from \"check-types\"\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nclass InUseButton extends PureComponent {\r\n    state = {\r\n        value: this.props.defaultValue\r\n    }\r\n    handleOnClick = (e) => {\r\n        this.setState({value: !this.state.value})\r\n    }\r\n\r\n    setDefaultValue = ((prevValue) => (value) => {\r\n        if (prevValue !== value) {\r\n            prevValue = value\r\n            this.setState({value})\r\n        }\r\n    })(true)\r\n\r\n    invokeListeners = () => {\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(Object.assign({}, this.state))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.value ?\r\n            <Button bsStyle=\"success\" bsSize=\"xsmall\" onClick={this.handleOnClick}>inUse</Button> :\r\n            <Button bsStyle=\"danger\" bsSize=\"xsmall\" onClick={this.handleOnClick}>not inUse</Button>\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n    componentDidUpdate() {\r\n        this.setDefaultValue(this.props.defaultValue)\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\nInUseButton.propTypes = {\r\n    defaultValue: PropTypes.bool,\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n\r\n}\r\nInUseButton.defaultProps = {\r\n    defaultValue: true\r\n}\r\nexport default InUseButton\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport {Table} from 'react-bootstrap'\r\nimport EditableTag from '../Base/EditableTag'\r\nimport InUseButton from '../InUseButton'\r\n\r\nclass Modules extends PureComponent {\r\n    modulesSet = () => {\r\n        const {data} = this.props\r\n        if (check.not.array(data)) return\r\n        return data.map((module, index) => {\r\n            const button = <InUseButton defaultValue={module.module_item_in_use} onChange={this.props.onChange('module_item_in_use')(index)} />\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td className={module.module_item_not_found ? 'bg-danger' : null}>{module.module}</td>\r\n                    <td>{module.module_item_sn}</td>\r\n                    <td><EditableTag disabled={false} tagName={'p'} value={module.module_item_comment} onChange={this.props.onChange('module_item_comment')(index)} style={{margin: 0}}/></td>\r\n                    <td align=\"center\" valign=\"middle\">{button}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Table responsive bordered striped condensed style={{\"tableLayout\": \"fixed\"}}  >\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"col-xs-1 text-center\">#</th>\r\n                        <th className=\"col-xs-3 text-center\" align=\"middle\">Модуль</th>\r\n                        <th className=\"col-xs-3 text-center\" align=\"middle\">SN</th>\r\n                        <th className=\"col-xs-3 text-center\" align=\"middle\">Комментарий</th>\r\n                        <th className=\"col-xs-1 text-center\" align=\"middle\">In Use</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.modulesSet()}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nModules.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.shape({\r\n        module: PropTypes.string,\r\n        module_id: PropTypes.number,\r\n        module_in_use: PropTypes.bool,\r\n        module_item_details: PropTypes.object,\r\n        module_item_comment: PropTypes.string,\r\n        module_item_id: PropTypes.number,\r\n        module_item_sn: PropTypes.string,\r\n        module_not_found: PropTypes.bool,\r\n    })),\r\n    onChange: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n}\r\nModules.defaultProps = {\r\n    data: []\r\n}\r\n\r\nexport default Modules\r\n","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport check from 'check-types'\r\nimport css from './style.module.css'\r\nimport {FormGroup, FormControl, ControlLabel} from 'react-bootstrap'\r\n\r\nclass IpAddressEdit extends PureComponent {\r\n    state = {\r\n        ip: '',\r\n        mask: ''\r\n    }\r\n\r\n    setDefaultIp = ((prevValue) => (value) => {\r\n        if (check.nonEmptyString(value) && prevValue !== value) {\r\n            prevValue = value\r\n            this.setState({ip: value})\r\n        }\r\n    })('')\r\n    setDefaultMask = ((prevValue) => (value) => {\r\n        if (check.integer(value) && prevValue !== value) {\r\n            prevValue = value\r\n            this.setState({mask: value})\r\n        }\r\n    })('')\r\n\r\n    // handleChangeIp = (e) => {\r\n    //     this.setState({ip: e.target.value})\r\n    // }\r\n    // handleChangeMask = (e) => {\r\n    //     this.setState({mask: e.target.value})\r\n    // }\r\n    handleChangeIp = (e) => {\r\n        this.setState({ip: e.target.value})\r\n    }\r\n    handleChangeMask = (e) => {\r\n        this.setState({mask: e.target.value})\r\n    }\r\n\r\n    // invokeListeners = () => {\r\n    //     let {onChange} = this.props\r\n    //     if (check.function(onChange)) {\r\n    //         onChange = [onChange]\r\n    //     }\r\n    //     if (check.not.array(onChange)) return\r\n    //     for (const subscriber of onChange) {\r\n    //         subscriber(Object.assign({}, this.state))\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const clearMargin = this.props.clearMargin ? css.formGroupZeroMargin : undefined\r\n        const controlLabel = check.not.emptyString(this.props.label) ? <ControlLabel>{this.props.label}</ControlLabel> : null\r\n        const formControlIp = <FormControl\r\n            type=\"text\"\r\n            // value={this.state.ip}\r\n            value={this.props.ip}\r\n            placeholder={this.props.placeholder}\r\n            // onChange={this.handleChangeIp}\r\n            onChange={this.props.onChangeIp}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            className={css.ip}\r\n        />\r\n        const formControlMask= <FormControl\r\n            type=\"text\"\r\n            // value={this.state.mask}\r\n            value={this.props.mask}\r\n            placeholder={this.props.placeholder}\r\n            // onChange={this.handleChangeMask}\r\n            onChange={this.props.onChangeMask}\r\n            readOnly={this.props.readOnly}\r\n            disabled={this.props.disabled}\r\n            className={css.mask}\r\n        />\r\n        return (\r\n            <Fragment>\r\n                <FormGroup controlId={this.props.controlId} bsClass={clearMargin}>\r\n                    {controlLabel}\r\n                    {formControlIp} / {formControlMask}\r\n                </FormGroup>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setDefaultIp(this.props.ip)\r\n        // this.setDefaultMask(this.props.mask)\r\n        // this.invokeListeners()\r\n    }\r\n    componentDidUpdate() {\r\n        // this.setDefaultIp(this.props.ip)\r\n        // this.setDefaultMask(this.props.mask)\r\n        // this.invokeListeners()\r\n    }\r\n}\r\n\r\nIpAddressEdit.propTypes = {\r\n\r\n    label: PropTypes.string,\r\n    controlId: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    ip: PropTypes.string,\r\n    mask: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    onChangeIp: PropTypes.func,\r\n    onChangeMask: PropTypes.func,\r\n    clearMargin: PropTypes.bool\r\n}\r\nIpAddressEdit.defaultProps = {\r\n    label: '',\r\n    disabled: false,\r\n    clearMargin: true\r\n}\r\nexport default IpAddressEdit\r\n\r\n","import React, {PureComponent, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport isEqual from 'lodash/isEqual'\r\nimport check from \"check-types\"\r\nimport Input2 from \"../Base/Input2\"\r\nimport Select from \"../Base/Select\"\r\nimport {Row, Col, Checkbox, Table, Button} from \"react-bootstrap\"\r\nimport IpAddressEdit from '../IpAddressEdit'\r\n\r\nclass Ports extends PureComponent {\r\n    state = {\r\n        ports: [],\r\n        ipEditMode: false,\r\n    }\r\n\r\n    setDefaultState = ((prevState) => (ports) => {\r\n        if (check.not.array(ports) || ports.length === 0) return\r\n        const portsCopy = cloneDeep(ports)\r\n        const newState = portsCopy.map((port) => {\r\n            return {...port, port_mask_len: (port.port_mask_len === null ? '' : port.port_mask_len)}\r\n        })\r\n        if (isEqual(prevState, newState)) return\r\n\r\n        prevState = newState\r\n        this.setState({ports: newState})\r\n    })([])\r\n\r\n    ipFormat = (value) => {\r\n        const reg = new RegExp('^[0-9.]*$')\r\n        return reg.test(value)\r\n    }\r\n    numericFormat = (value) => {\r\n        const reg = new RegExp('^[0-9]*$')\r\n        return reg.test(value)\r\n    }\r\n    macAddressFormat = (value) => {\r\n        const reg = new RegExp('^[0-9a-fA-F:]*$')\r\n        return reg.test(value)\r\n    }\r\n\r\n    handlerOnChangeCheckbox = (index) => () => {\r\n        this.setState({ports: this.state.ports.map((port, idx) => {return idx === index ? {...port, port_is_mng: !port.port_is_mng} : {...port, port_is_mng: false}})})\r\n    }\r\n    onChangeIp = (index) => (e) => {\r\n        if (!(this.ipFormat(e.target.value))) return\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_ip = e.target.value\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n    onChangeMask = (index) => (e) => {\r\n        if (!(this.numericFormat(e.target.value))) return\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_mask_len = e.target.value\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n    onChangePortName = (index) => (e) => {\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_details.portName = e.target.value\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n    onChangePortMac = (index) => (e) => {\r\n        if (!(this.macAddressFormat(e.target.value))) return\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_mac = e.target.value\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n    onChangePortDescription = (index) => (e) => {\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_details.description = e.target.value\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n    onChangeVrf = (index) => ({value}) => {\r\n        const [vrf] = this.props.vrfData.filter((item) => {return item.vrf_id === value})\r\n        // return\r\n        if (this.state.ports && this.state.ports[index]) {\r\n            const newPorts = cloneDeep(this.state.ports)\r\n            newPorts[index].port_vrf_id = value\r\n            newPorts[index].port_vrf_name = vrf.vrf_name\r\n            this.setState({ports: newPorts})\r\n        }\r\n    }\r\n\r\n    invokeListeners = ((prevState) => () => {\r\n        if (isEqual(prevState, this.state)) return\r\n        prevState = cloneDeep(this.state)\r\n\r\n        let {onChange} = this.props\r\n        if (check.function(onChange)) {\r\n            onChange = [onChange]\r\n        }\r\n        if (check.not.array(onChange)) return\r\n        for (const subscriber of onChange) {\r\n            subscriber(Object.assign({}, this.state))\r\n        }\r\n    })({})\r\n    vrfList = ((prevVrfData, prevList) => () => {\r\n        const {vrfData} = this.props\r\n        if (JSON.stringify(prevVrfData) === JSON.stringify(vrfData))  return prevList\r\n        if (check.not.array(vrfData)) return prevList\r\n        prevVrfData = vrfData\r\n        prevList = vrfData.map((vrf) => {\r\n            return {value: vrf.vrf_id, label: vrf.vrf_name}\r\n        })\r\n        return prevList\r\n    })([], [])\r\n    vrfName = (vrfId) => {\r\n        if (vrfId === null || vrfId === undefined) return ''\r\n        const vrfData = this.props.vrfData || []\r\n        const [vrf] = vrfData.filter((vrf) => {\r\n            return vrf && vrf.vrf_id && vrf.vrf_id === vrfId\r\n        })\r\n        return vrf.vrf_name || ''\r\n    }\r\n    // vrfList = () => [{value: 1, label: 'global'}, {value: 2, label: 'global2'}]\r\n    newPort = () => {\r\n        const vrfList = this.vrfList()\r\n        const vrf_id = vrfList[0] ? vrfList[0].value : null\r\n        return {\r\n            port_id: null,\r\n            port_ip: '0.0.0.0',\r\n            port_comment: '',\r\n            port_details: {\r\n                portName: '',\r\n                description: ''\r\n            },\r\n            port_is_mng: false,\r\n            port_mac: '00:00:00:00:00:00',\r\n            port_mask_len: '',\r\n            port_vrf_id: vrf_id,\r\n            // port_vrf_name: vrf_name,\r\n            newPort: true,\r\n            deleted: false\r\n        }\r\n    }\r\n    onClickAddPort = () => {\r\n        const updatedPorts = cloneDeep(this.state.ports)\r\n        if (check.not.array(updatedPorts)) return\r\n        updatedPorts.push(this.newPort())\r\n        this.setState({ports: updatedPorts})\r\n    }\r\n    onClickDelPort = (index) => () => {\r\n        const updatedPorts = cloneDeep(this.state.ports)\r\n        if (check.not.array(updatedPorts)) return\r\n        updatedPorts[index].deleted = true\r\n        this.setState({ports: updatedPorts})\r\n    }\r\n\r\n\r\n    portsSet = () => {\r\n        const data = this.state.ports\r\n        if (check.not.array(data)) return\r\n        const createdPorts = []\r\n        const existedPorts = []\r\n        const defaultVrf = this.vrfList()[0] ? this.vrfList()[0].value : ''\r\n        data.forEach((port, index) => {\r\n            let {port_ip, port_mac, port_mask_len, port_is_mng, port_details, port_vrf_id, newPort, deleted} = port\r\n            if (!newPort) {\r\n                const ipCell = port_is_mng ?\r\n                    <IpAddressEdit ip={port_ip} mask={port_mask_len } onChangeIp={this.onChangeIp(index)} onChangeMask={this.onChangeMask(index)} /> :\r\n                    (port_mask_len === '' ? `${port_ip}`: `${port_ip}/${port_mask_len}`)\r\n                existedPorts.push(\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{port_details && port_details.portName}</td>\r\n                        <td>{this.vrfName(port_vrf_id)}</td>\r\n                        <td>{ipCell}</td>\r\n                        <td>{port_mac}</td>\r\n                        <td>{port_details && port_details.description}</td>\r\n                        <td align=\"center\" valign=\"middle\">\r\n                            <Checkbox title=\"management interface\" onChange={this.handlerOnChangeCheckbox(index)} checked={port_is_mng} style={{marginTop: 0, marginBottom: 0}}/>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            } else {\r\n                if (deleted) return\r\n                const ipCell = <IpAddressEdit ip={port_ip} mask={port_mask_len } onChangeIp={this.onChangeIp(index)} onChangeMask={this.onChangeMask(index)} />\r\n                createdPorts.push(\r\n                    <tr key={index}>\r\n                        <td><Button bsStyle=\"danger\" bsSize=\"xsmall\" onClick={this.onClickDelPort(index)}>Delete</Button></td>\r\n                        <td><Input2 customSize clearMargin value={port_details && port_details.portName} onChange={this.onChangePortName(index)} /></td>\r\n                        <td><Select optionList={this.vrfList()} defaultSelected={defaultVrf} onChange={this.onChangeVrf(index)} isAsync={false} emptyOption={false} clearMargin smallSize /></td>\r\n                        <td>{ipCell}</td>\r\n                        <td><Input2 customSize clearMargin value={port_mac} onChange={this.onChangePortMac(index)} /></td>\r\n                        <td><Input2 customSize clearMargin value={port_details && port_details.description} onChange={this.onChangePortDescription(index)} /></td>\r\n                        <td align=\"center\" valign=\"middle\">\r\n                            <Checkbox title=\"management interface\" onChange={this.handlerOnChangeCheckbox(index)} checked={port_is_mng} style={{marginTop: 0, marginBottom: 0}}/>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n        })\r\n        return [...createdPorts.reverse(), ...existedPorts]\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md={12}>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Button bsStyle=\"primary\" bsSize=\"small\" style={{marginBottom: '1em'}} onClick={this.onClickAddPort}>Add port</Button>\r\n                        <Table responsive bordered striped condensed style={{\"tableLayout\": \"fixed\"}}  >\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"col-xs-1 text-center\">#</th>\r\n                                <th className=\"col-xs-2 text-center\" align=\"middle\">Имя порта</th>\r\n                                <th className=\"col-xs-1 text-center\" align=\"middle\">VRF</th>\r\n                                <th className=\"col-xs-2 text-center\" align=\"middle\">IP</th>\r\n                                <th className=\"col-xs-2 text-center\" align=\"middle\">MAC</th>\r\n                                <th className=\"col-xs-3 text-center\" align=\"middle\">Комментарий</th>\r\n                                <th className=\"col-xs-1 text-center\" align=\"middle\">Management</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.portsSet()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultState(this.props.data)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setDefaultState(this.props.data)\r\n        this.invokeListeners()\r\n    }\r\n}\r\n\r\nPorts.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.shape({\r\n        port_id: PropTypes.number,\r\n        port_is_mng: PropTypes.bool,\r\n        port_ip: PropTypes.string,\r\n        port_mac: PropTypes.string,\r\n        port_mask_len: PropTypes.number,\r\n        port_details: PropTypes.shape({\r\n            portName: PropTypes.string,\r\n            description: PropTypes.string,\r\n        }),\r\n        port_comment: PropTypes.string,\r\n        port_vrf_id: PropTypes.number,\r\n    })),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n    vrfData: PropTypes.arrayOf(PropTypes.shape({\r\n        vrf_id: PropTypes.number,\r\n        vrf_name: PropTypes.string,\r\n        vrf_rd: PropTypes.string,\r\n        vrf_comment: PropTypes.string,\r\n    }))\r\n}\r\n\r\nexport default Ports\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Table} from 'react-bootstrap'\r\nimport EditableTag from \"../Base/EditableTag\"\r\nimport Select from \"../Base/Select\"\r\n\r\nclass DevLocation extends PureComponent {\r\n    pStyle = {\r\n        margin:0,\r\n        padding: '6px 3px'\r\n    }\r\n\r\n    render() {\r\n        const {onChange, floor, row, rack, unit, rackSide} = this.props\r\n        const rackSideOptions = [{value: \"Front\", label: \"Front\"}, {value: \"Back\", label: \"Back\"}]\r\n        return (\r\n            <Table responsive bordered condensed style={{\"tableLayout\": \"fixed\"}}  >\r\n                <thead>\r\n                <tr>\r\n                    <th className=\"col-xs-2 text-center\" align=\"middle\">Этаж</th>\r\n                    <th className=\"col-xs-2 text-center\" align=\"middle\">Ряд</th>\r\n                    <th className=\"col-xs-2 text-center\" align=\"middle\">Стойка</th>\r\n                    <th className=\"col-xs-2 text-center\" align=\"middle\">Unit</th>\r\n                    <th className=\"col-xs-3 text-center\" align=\"middle\">Сторона стойки</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><EditableTag disabled={false} tagName='p' value={floor} onChange={onChange('floor')} style={this.pStyle} /></td>\r\n                        <td><EditableTag disabled={false} tagName='p' value={row} onChange={onChange('row')} style={this.pStyle} /></td>\r\n                        <td><EditableTag disabled={false} tagName='p' value={rack} onChange={onChange('rack')} style={this.pStyle} /></td>\r\n                        <td><EditableTag disabled={false} tagName='p' value={unit} onChange={onChange('unit')} style={this.pStyle} /></td>\r\n                        <td><Select style={{marginBottom: 0}} isAsync={false} optionList={rackSideOptions} defaultSelected={rackSide} onChange={onChange('rackSide')} /></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nDevLocation.propTypes = {\r\n    floor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    row: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    rack: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    unit: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    rackSide: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    onChange: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.arrayOf(PropTypes.func)\r\n    ]),\r\n}\r\nDevLocation.defaultProps = {\r\n    floor: '',\r\n    row: '',\r\n    rack: '',\r\n    unit: '',\r\n    rackSide: ''\r\n}\r\n\r\nexport default DevLocation\r\n","import React, {Fragment, Component} from 'react'\r\nimport check from 'check-types'\r\nimport custCss from './style.module.css'\r\nimport axios from 'axios'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport isEqual from 'lodash/isEqual'\r\nimport {Row, Col, Button, Modal, ModalBody, ModalFooter, ModalHeader, } from 'react-bootstrap'\r\nimport Office from '../components/Office'\r\nimport Region from '../components/Region'\r\nimport City from '../components/City'\r\nimport DevType from '../components/DevType'\r\nimport Platform from '../components/Platform'\r\nimport Software from '../components/Software'\r\nimport Input from '../components/Base/Input'\r\nimport Input2 from '../components/Base/Input2'\r\nimport TextArea from '../components/Base/TextArea'\r\nimport TextArea2 from '../components/Base/TextArea2'\r\nimport CheckBox from '../components/Base/CheckBox'\r\nimport Modules from '../components/Modules'\r\nimport Ports from '../components/Ports'\r\nimport DevLocation from '../components/DevLocation'\r\nimport {DEV_DATA_URL, DEV_LOCATION_URL, DEV_MODULES_DATA_URL, DEV_PORTS_DATA_URL, DEV_SUBMIT_URL, VRF_LIST_URL} from'../constants'\r\n\r\nclass EditDevWindow extends Component {\r\n    // constructor(props, context) {\r\n    //     super(props, context);\r\n    //     // this.handleShow = this.handleShow.bind(this);\r\n    //     // this.handleClose = this.handleClose.bind(this);\r\n    // }\r\n     /**\r\n      * @typedef {{\r\n      *      floor: (number|string),\r\n      *      row: (number|string),\r\n      *      rack: (number|string),\r\n      *      unit: (number|string),\r\n      *      rackSide: string\r\n      * }} Site\r\n      *\r\n      * @typedef {{\r\n      *      hostname: string,\r\n      *      site: Site\r\n      * }} DevDetails\r\n      *\r\n      * @typedef {{\r\n      *     dev_id: number,\r\n      *     location_id: number,\r\n      *     platform_id: number,\r\n      *     platform_item_id: number,\r\n      *     software_id: number,\r\n      *     software_item_id: number,\r\n      *     vendor_id: number,\r\n      *     dev_type_id: number,\r\n      *     dev_comment: string,\r\n      *     software_item_comment: string,\r\n      *     dev_last_update: string,\r\n      *     dev_in_use: boolean,\r\n      *     platform_item_sn: string,\r\n      *     platform_item_sn_alt: string,\r\n      *     is_hw: boolean,\r\n      *     software_item_ver: string,\r\n      *     dev_details: (DevDetails|object),\r\n      *     software_item_details: object\r\n      * }} DevInfo\r\n      *\r\n      * @typedef {{\r\n      *     module: string,\r\n      *     module_id: number,\r\n      *     module_item_id: number,\r\n      *     module_item_details: object,\r\n      *     module_item_comment: string,\r\n      *     module_item_sn: string,\r\n      *     module_item_in_use: boolean,\r\n      *     module_item_not_found: boolean\r\n      *     module_item_last_update: string\r\n      * }} Module\r\n      *\r\n      * @typedef {{\r\n      *     description: string,\r\n      *     portName: string\r\n      * }} PortDetails\r\n      *\r\n      * @typedef {{\r\n      *     port_id: number,\r\n      *     port_type_id: number,\r\n      *     port_ip: string,\r\n      *     port_comment: string,\r\n      *     port_details: PortDetails,\r\n      *     port_is_mng: boolean,\r\n      *     port_mac: string,\r\n      *     port_mask_len: (string|number),\r\n      *     port_type: string,\r\n      *     port_last_update: string,\r\n      *     port_net_id: number,\r\n      *     port_vrf_id: number,\r\n      *     newPort: boolean // for created ports is true\r\n      *     deleted: boolean // for deleted ports is true\r\n      * }} Port\r\n      *\r\n      * @typedef {{\r\n      *     region_id: (number|string),\r\n      *     city_id: (number|string),\r\n      *     office_id: (number|string)\r\n      *     office_comment: string\r\n      * }} GeoLocation\r\n      *\r\n      * @typedef {{\r\n      *     accessor: string,\r\n      *     statement: string,\r\n      *     value: (string|number)\r\n      * }} Filter\r\n      *\r\n      * @typedef {{\r\n      *     vrf_id: number,\r\n      *     vrf_name: string,\r\n      *     vrf_rd: string\r\n      *     vrf_comment: string\r\n      * }} Vrf\r\n      */\r\n\r\n      /**\r\n      * @type {{\r\n      *     show: boolean,\r\n      *     devId: (number|string),\r\n      *     newDev: boolean,\r\n      *     devDataLoading: boolean,\r\n      *     devDataReady: boolean,\r\n      *     mngIp: string,\r\n      *     officeComment: string,\r\n      *     loadingOfficeData: boolean,\r\n      *     officeDataInvalidate: boolean,\r\n      *     saving: boolean,\r\n      *     region_id: string,\r\n      *     city_id: string,\r\n      * }} state\r\n      */\r\n    state = {\r\n        show: false,\r\n        newDev: false,\r\n        devId: '',\r\n        devDataLoading: false,\r\n        devDataReady: false,\r\n        mngIp: '',\r\n        officeComment: '',\r\n        loadingOfficeData: false,\r\n        officeDataInvalidate: true,\r\n        saving: false,\r\n        region_id: '',\r\n        city_id: '',\r\n    }\r\n    clearState = ((initialState) => () => {\r\n        this.setState(cloneDeep(initialState))\r\n    })(cloneDeep(this.state))\r\n    /**\r\n     * @type {{\r\n     *    geoLocation: (GeoLocation|object),\r\n     *     devInfo: (DevInfo|object),\r\n     *     modules: (Module[]|Array),\r\n     *     ports: (Port[]|Array)\r\n     * }} initialData\r\n     */\r\n    initialData = {\r\n        geoLocation: {},\r\n        devInfo: {},\r\n        modules: [],\r\n        ports: [],\r\n    }\r\n    clearInitialData = ((initialState) => () => {\r\n        this.initialData = cloneDeep(initialState)\r\n    })(cloneDeep(this.initialData))\r\n\r\n    /**\r\n     * @type {{\r\n     *     geoLocation: (GeoLocation|object),\r\n     *     devInfo: (DevInfo|object),\r\n     *     modules: (Module[]|Array),\r\n     *     ports: (Port[]|Array),\r\n     *     newDev: boolean\r\n     * }} currentState\r\n     */\r\n    currentState = {\r\n        geoLocation: {},\r\n        devInfo: {},\r\n        modules: [],\r\n        ports: [],\r\n        newDev: false\r\n    }\r\n    clearCurrentState = ((initialState) => () => {\r\n        this.currentState = cloneDeep(initialState)\r\n    })(cloneDeep(this.currentState))\r\n\r\n    /**\r\n     *\r\n     * @return GeoLocation\r\n     */\r\n    emptyGeoLocation = () => {\r\n        return {\r\n        region_id: '',\r\n        city_id: '',\r\n        office_id: '',\r\n        office_comment: ''\r\n    }}\r\n\r\n    /**\r\n     * @type Filter cityFilter\r\n     */\r\n    cityFilter = {\r\n        accessor: 'region_id',\r\n        statement: '=',\r\n        value: ''\r\n    }\r\n    clearCityFilter = ((initialState) => () => {\r\n        this.cityFilter = cloneDeep(initialState)\r\n    })(cloneDeep(this.cityFilter))\r\n    /**\r\n     * @type Filter officeFilter\r\n     */\r\n    officeFilter = {\r\n        accessor: 'city_id',\r\n        statement: '=',\r\n        value: ''\r\n    }\r\n    clearOfficeFilter = ((initialState) => () => {\r\n        this.officeFilter = cloneDeep(initialState)\r\n    })(cloneDeep(this.officeFilter))\r\n    /**\r\n     *\r\n     * @type Site siteInfo\r\n     */\r\n    siteInfo = {\r\n        floor: '',\r\n        row: '',\r\n        rack: '',\r\n        unit: '',\r\n        rackSide: '',\r\n    }\r\n    clearSiteInfo = ((initialState) => () => {\r\n        this.siteInfo = cloneDeep(initialState)\r\n    })(cloneDeep(this.siteInfo))\r\n\r\n\r\n    clearFormData = () => {\r\n        this.clearInitialData()\r\n        this.clearCurrentState()\r\n        this.clearOfficeFilter()\r\n        this.clearCityFilter()\r\n        this.clearSiteInfo()\r\n        this.clearState()\r\n    }\r\n    /**\r\n     *\r\n     * @type (Vrf[]|Array)\r\n     */\r\n    vrfList = []\r\n    getDevLocation = async (location_id) => {\r\n        try {\r\n            const res = await axios.get(DEV_LOCATION_URL, {\r\n                params: {location_id: location_id}\r\n            })\r\n            const {data} = res\r\n            if (!data.location) {\r\n                console.log('ERROR: getDevLocation for loc_id ', data, location_id)\r\n                return {}\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: getDevLocation', e.toString())\r\n            return {}\r\n        }\r\n    }\r\n\r\n    managingIp = (portsInfo) => {\r\n        if (!check.array(portsInfo)) return\r\n        const res = portsInfo.filter((port) => port.port_is_mng).map((port) => port.port_ip)\r\n        return res.join(', ')\r\n    }\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.clearFormData()\r\n    }\r\n    dataValidate = (devData) => {\r\n        const errors = []\r\n        if (check.not.number(devData.geoLocation.office_id)) errors.push('Не указан оффис')\r\n        if (check.not.number(devData.devInfo.dev_type_id)) errors.push('Не указан тип оборудования')\r\n        return errors\r\n    }\r\n    handleSubmit = async() => {\r\n        const errors = this.dataValidate(this.currentState)\r\n        if (check.nonEmptyArray(errors)) {\r\n            alert(errors.join(\"\\n\"))\r\n            return\r\n        }\r\n        try {\r\n            this.setState({saving: true})\r\n            /**\r\n             * @typedef {{\r\n             *     code: number,\r\n             *     message: string\r\n             * }} Error\r\n             * @type {{\r\n             *     errors: Error[]\r\n             * }} res\r\n             */\r\n            const res = await axios.post(DEV_SUBMIT_URL, this.currentState)\r\n            const {data} = res\r\n            if (data.errors) throw data.errors.join(\"\\n\")\r\n            this.setState({saving: false})\r\n            console.log('SAVE RESULT', data.result)\r\n            if (window.updateDevTable) {\r\n                window.updateDevTable()\r\n            } else {\r\n                console.log('function updateDevTable not found')\r\n            }\r\n            setTimeout(() => {this.handleClose()}, 700)\r\n        } catch (e) {\r\n            console.log('ERROR: ', e)\r\n            alert(e)\r\n            this.setState({saving: false})\r\n        }\r\n    }\r\n\r\n    onChangeGeoLocation = (key) => async ({value}) => {\r\n        const {geoLocation} = this.currentState\r\n        geoLocation[key] = value\r\n        if (key === 'region_id' || key === 'city_id') {\r\n            this.setState({[key]: value})\r\n        }\r\n        if (key === 'office_id') {\r\n            this.onChangeDevInfo('location_id')({value})\r\n            if (check.emptyString(value)) {\r\n                const {geoLocation} = this.currentState\r\n                geoLocation.office_comment = ''\r\n                this.setState({officeDataInvalidate: true, officeComment: ''})\r\n            } else {\r\n                this.setState({officeDataInvalidate: true, loadingOfficeData: true})\r\n                const res = await this.getDevLocation(value)\r\n                const {location = {}} = res\r\n                let {office_comment} = location\r\n                office_comment = office_comment ? office_comment : ''\r\n                const {geoLocation} = this.currentState\r\n                geoLocation.office_comment = office_comment\r\n                this.setState({officeComment: office_comment, officeDataInvalidate: false,loadingOfficeData: false})\r\n            }\r\n\r\n        }\r\n    }\r\n    onChangeOfficeComment = (e) => {\r\n        const {geoLocation} = this.currentState\r\n        geoLocation.office_comment = e.target.value\r\n        this.setState({officeComment: e.target.value})\r\n    }\r\n    onChangeDevInfo = (key) => ({value}) => {\r\n        const {devInfo} = this.currentState\r\n        devInfo[key] = value\r\n    }\r\n    onChangeDevDetails = (key) => ({value}) => {\r\n        const {devInfo} = this.currentState\r\n        if (! devInfo.dev_details) devInfo.dev_details = {}\r\n        devInfo.dev_details[key] = value\r\n    }\r\n    onChangeModule = (key) => (idx) => ({value}) => {\r\n        const {modules} = this.currentState\r\n        if (modules[idx] && modules[idx][key] !== value) {\r\n            modules[idx][key] = value\r\n        }\r\n    }\r\n    changeMngIpString = (ports) => {\r\n        if (!check.array(ports)) return\r\n        const res = ports.filter((port) => port.port_is_mng && !port.deleted).map((port) => port.port_ip)\r\n        let mngIp = res.join(', ')\r\n        if (this.state.mngIp !== mngIp) this.setState({mngIp})\r\n        // if (res.length > 0) {\r\n        //     this.setState({mngIp:res.join(', ') })\r\n        // }\r\n    }\r\n    onChangePorts = ({ports}) => {\r\n        ports = ports.map((port) => {\r\n            return {...port, port_mask_len: port.port_mask_len === '' ? null : parseInt(port.port_mask_len)}\r\n        })\r\n        this.currentState.ports = ports\r\n        this.changeMngIpString(this.currentState.ports)\r\n    }\r\n    onChangeDevLocation = (key) => ({value}) => {\r\n        if (value === undefined || !this.state.devDataReady) return\r\n        const {devInfo} = this.currentState\r\n        if (!devInfo)  {\r\n            return\r\n        }\r\n        if (!devInfo.dev_details) devInfo.dev_details = {}\r\n        if ( !devInfo.dev_details.site) {\r\n            devInfo.dev_details.site = this.siteInfo\r\n        }\r\n        devInfo.dev_details.site[key] = value\r\n    }\r\n\r\n    fetchDeviceData = async (id) => {\r\n        try {\r\n            const res = await axios.get(DEV_DATA_URL, {\r\n                params: {id}\r\n            })\r\n            const {data} = res\r\n            if (!data.devInfo) {\r\n                console.log('ERROR: fetchDeviceData')\r\n                return {}\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchDeviceData', e.toString())\r\n            return {}\r\n        }\r\n    }\r\n    fetchDevModulesData = async (id) => {\r\n        try {\r\n            const res = await axios.get(DEV_MODULES_DATA_URL, {\r\n                params: {id}\r\n            })\r\n            const {data} = res\r\n            if (!data.modules) {\r\n                console.log('ERROR: fetchDevModulesData')\r\n                return []\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchDevModulesData', e.toString())\r\n            return []\r\n        }\r\n    }\r\n    fetchDevPortsData = async (id) => {\r\n        try {\r\n            const res = await axios.get(DEV_PORTS_DATA_URL, {\r\n                params: {id}\r\n            })\r\n            const {data} = res\r\n            if (!data.ports) {\r\n                console.log('ERROR: fetchDevPortsData')\r\n                return []\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchDevPortsData', e.toString())\r\n            return []\r\n        }\r\n    }\r\n    fetchVrfList = async () => {\r\n        try {\r\n            const res = await axios.get(VRF_LIST_URL, {\r\n                params: {}\r\n            })\r\n            const {data} = res\r\n            if (!data.vrfList) {\r\n                console.log('ERROR: fetchVrfList')\r\n                return []\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            console.log('ERROR: fetchVrfList', e.toString())\r\n            return []\r\n        }\r\n    }\r\n\r\n    memoizedCityFilter = ((prevFilter) => () => {\r\n        const newCityFilter = Object.assign({}, this.cityFilter, {value: this.state.region_id})\r\n        if (!isEqual(newCityFilter, prevFilter)) prevFilter = newCityFilter\r\n        return [prevFilter]\r\n    })([])\r\n\r\n    memoizedOfficeFilter = ((prevFilter) => () => {\r\n        const newCityFilter = Object.assign({}, this.cityFilter, {value: this.state.region_id})\r\n        const newOfficeFilter = Object.assign({}, this.officeFilter, {value: this.state.city_id})\r\n        const newFilter = [newCityFilter, newOfficeFilter]\r\n        if (!isEqual(prevFilter, newFilter)) prevFilter = newFilter\r\n        return prevFilter\r\n    })([])\r\n\r\n    render() {\r\n        const {devDataReady} = this.state\r\n        const {geoLocation, devInfo, modules, ports} = this.initialData\r\n        const devSite = (() => {\r\n            const {floor, row, rack, unit, rackSide} = devInfo && devInfo.dev_details && devInfo.dev_details.site ? devInfo.dev_details.site : {}\r\n            return {floor, row, rack, unit, rackSide}\r\n        })()\r\n        const modalBody = () => {\r\n            if (!this.state.show) return null\r\n            if (!this.state.devDataReady) return <h3 align=\"center\">Загрузка данных...</h3>\r\n            return (\r\n                <Fragment>\r\n                    <Row>\r\n                        <Col md={2}><Region onChange={this.onChangeGeoLocation('region_id')} defaultSelected={geoLocation.region_id} disabled={!devDataReady}/></Col>\r\n                        <Col md={2}><City onChange={this.onChangeGeoLocation('city_id')} defaultSelected={geoLocation.city_id} filter={this.memoizedCityFilter()} disabled={!devDataReady}/></Col>\r\n                        <Col md={4}><Office onChange={this.onChangeGeoLocation('office_id')} defaultSelected={geoLocation.office_id} filter={this.memoizedOfficeFilter()} disabled={!devDataReady}/></Col>\r\n                        <Col md={4}><TextArea2 controlId=\"officeComment\" disabled={this.state.officeDataInvalidate || !devDataReady} onChange={this.onChangeOfficeComment} placeholder='Комментарий к офису' value={this.state.officeComment} label=\"Комментарий к оффису\" /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={3}><DevType onChange={this.onChangeDevInfo('dev_type_id')} defaultSelected={devInfo.dev_type_id} /></Col>\r\n                        <Col md={3}><Platform onChange={this.onChangeDevInfo('platform_id')} defaultSelected={devInfo.platform_id}/></Col>\r\n                        <Col md={3}><Software onChange={this.onChangeDevInfo('software_id')}  defaultSelected={devInfo.software_id} /></Col>\r\n                        <Col md={3}><Input controlId='swVer' onChange={this.onChangeDevInfo('software_item_ver')} defaultValue={devInfo.software_item_ver} label=\"Версия ПО\"/></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={3}><Input controlId='devSn' addOnPosition=\"left\" addOnText=\"SN\" onChange={this.onChangeDevInfo('platform_item_sn')} defaultValue={devInfo.platform_item_sn} label=\" \" readOnly/></Col>\r\n                        <Col md={3}><Input controlId='devAltSn' addOnPosition=\"left\" addOnText=\"alt SN\" onChange={this.onChangeDevInfo('platform_item_sn_alt')} defaultValue={devInfo.platform_item_sn_alt} label=\" \" /></Col>\r\n                        <Col md={3}><Input controlId='hostname' addOnPosition=\"left\" addOnText=\"hostname\" onChange={this.onChangeDevDetails('hostname')} defaultValue={devInfo.dev_details && devInfo.dev_details.hostname} label=\" \" /></Col>\r\n                        <Col md={3}><Input2 readOnly controlId='managementIP' addOnPosition=\"left\" addOnText=\"management IP\" onChange={()=>{}} label=\" \" value={this.state.mngIp} /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}><TextArea controlId=\"deviceComment\" onChange={this.onChangeDevInfo('dev_comment')} placeholder='Комментарий к устройству' defaultValue={devInfo.dev_comment} label=\"Коментарий к устройству\" /></Col>\r\n                    </Row>\r\n                    <Row><Col md={6}><CheckBox title=\"Устройство используется\" onChange={this.onChangeDevInfo('dev_in_use')} checked={devInfo.dev_in_use} >Устройство используется</CheckBox></Col></Row>\r\n                    <Row>\r\n                        <Col md={10}><Modules data={modules} onChange={this.onChangeModule} /></Col>\r\n                    </Row>\r\n                    <Ports data={ports} vrfData={this.vrfList} onChange={this.onChangePorts} />\r\n                    <Row>\r\n                        <Col md={10}>\r\n                            <DevLocation {...devSite} onChange={this.onChangeDevLocation} />\r\n                        </Col>\r\n                    </Row>\r\n                </Fragment>\r\n            )\r\n        }\r\n        const modalTitle = () => this.state.newDev ? 'Новое устройство' : 'Редактирование устройства'\r\n        return (\r\n            <Modal show={this.state.show} onHide={this.handleClose} bsSize=\"large\" >\r\n                <ModalHeader closeButton>\r\n                    <Modal.Title>{modalTitle()}</Modal.Title>\r\n                </ModalHeader>\r\n                <ModalBody className={custCss.modalBody} >\r\n                    {modalBody()}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h3 align=\"center\" style={{margin: 0}}>{this.state.saving ? 'Сохранение данных...' : ''}</h3>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Button onClick={this.handleClose} bsStyle=\"danger\" disabled={this.state.saving} >Отмена</Button>\r\n                            <Button onClick={this.handleSubmit} bsStyle=\"success\" disabled={this.state.saving}>Сохранить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n    async componentDidMount() {\r\n        window.openEditModal = (id) => {\r\n            this.setState({\r\n                show: true,\r\n                devId: id,\r\n                newDev: false,\r\n                devDataReady: false\r\n            })\r\n        }\r\n        window.openNewDevModal = () => {\r\n            this.setState({\r\n                show: true,\r\n                devId: '',\r\n                newDev: true,\r\n                devDataReady: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        const {devId, newDev, devDataReady, devDataLoading} = this.state\r\n        if (! newDev && devId && !devDataReady && !devDataLoading) {\r\n            this.setState({devDataLoading: true})\r\n            // const devData = await this.fetchDeviceData(this.state.devId)\r\n            try {\r\n                const response1 = await Promise.all([\r\n                    this.fetchDeviceData(devId),\r\n                    this.fetchDevModulesData(devId),\r\n                    this.fetchDevPortsData(devId),\r\n                    this.fetchVrfList()\r\n                ])\r\n                const [{devInfo}, {modules}, {ports}, {vrfList}] = response1\r\n                let geoLocation = {}\r\n                if (devInfo && devInfo.location_id) {\r\n                    const response2 = await this.getDevLocation(devInfo.location_id)\r\n                    const {location = {}} = response2\r\n                    geoLocation = (({office_id, city_id, region_id, office_comment}) => {return {office_id, city_id, region_id, office_comment}})(location)\r\n                }\r\n                this.initialData = {...this.initialData, devInfo, modules, ports, geoLocation}\r\n                this.vrfList = vrfList\r\n                this.currentState = {\r\n                    ...this.currentState,\r\n                    geoLocation: cloneDeep(geoLocation),\r\n                    devInfo: cloneDeep(devInfo),\r\n                    modules: cloneDeep(modules),\r\n                    ports: cloneDeep(ports),\r\n                }\r\n                this.setState({devDataLoading: false, devDataReady: true})\r\n            } catch (e) {\r\n                console.log('Loading dev data ERROR', e.toString())\r\n            }\r\n\r\n        } else if (newDev && !devDataReady && !devDataLoading) {\r\n            this.setState({devDataLoading: true})\r\n            const response1 = await this.fetchVrfList()\r\n            const {vrfList} = response1\r\n            this.vrfList = vrfList\r\n            this.initialData.geoLocation = this.emptyGeoLocation()\r\n            this.currentState.geoLocation = this.emptyGeoLocation()\r\n            this.currentState.newDev = true\r\n            this.setState({devDataLoading: false, devDataReady: true})\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditDevWindow\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport EditDevWindow from './EditDevWindow';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<EditDevWindow />, document.getElementById('injectReact'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__1ocN6\",\"indents\":\"style_indents__CXmar\",\"ip\":\"style_ip__7oCzC style_indents__CXmar\",\"mask\":\"style_mask__1pKCo style_indents__CXmar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__1CpZ5\",\"indents\":\"style_indents__2Irpo\",\"size\":\"style_size__QK4yj style_indents__2Irpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroupZeroMargin\":\"style_formGroupZeroMargin__1eXLG\",\"indents\":\"style_indents__2-inD\",\"size\":\"style_size__2OfcW style_indents__2-inD\"};"],"sourceRoot":""}